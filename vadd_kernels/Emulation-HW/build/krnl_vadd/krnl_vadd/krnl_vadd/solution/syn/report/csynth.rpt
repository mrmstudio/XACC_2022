

================================================================
== Synthesis Summary Report of 'krnl_vadd'
================================================================
+ General Information: 
    * Date:           Mon Jan 24 11:45:20 2022
    * Version:        2021.1 (Build 3247384 on Thu Jun 10 19:36:07 MDT 2021)
    * Project:        krnl_vadd
    * Solution:       solution (Vitis Kernel Flow Target)
    * Product family: virtexuplus
    * Target device:  xcvu9p-flgb2104-2-i
    

+ Performance & Resource Estimates: 
    
    PS: '+' for module; 'o' for loop; '*' for dataflow
    +---------------------------------------+--------+-------+---------+-----------+----------+---------+------+----------+---------+----+------------+------------+-----+
    |                Modules                |  Issue |       | Latency |  Latency  | Iteration|         | Trip |          |         |    |            |            |     |
    |                & Loops                |  Type  | Slack | (cycles)|    (ns)   |  Latency | Interval| Count| Pipelined|  BRAM   | DSP|     FF     |     LUT    | URAM|
    +---------------------------------------+--------+-------+---------+-----------+----------+---------+------+----------+---------+----+------------+------------+-----+
    |+ krnl_vadd                            |  Timing|  -0.00|     8338|  3.335e+04|         -|     8339|     -|        no|  2 (~0%)|   -|  1491 (~0%)|  2016 (~0%)|    -|
    | + grp_krnl_vadd_Pipeline_vadd1_fu_97  |  Timing|  -0.00|     8267|  3.307e+04|         -|     8267|     -|        no|        -|   -|   397 (~0%)|   392 (~0%)|    -|
    |  o vadd1                              |      II|   2.92|     8265|  3.306e+04|        75|        2|  4096|       yes|        -|   -|           -|           -|    -|
    +---------------------------------------+--------+-------+---------+-----------+----------+---------+------+----------+---------+----+------------+------------+-----+


================================================================
== HW Interfaces
================================================================
* M_AXI
+------------+------------+---------------+---------+--------+----------+-----------+--------------+--------------+-------------+-------------+
| Interface  | Data Width | Address Width | Latency | Offset | Register | Max Widen | Max Read     | Max Write    | Num Read    | Num Write   |
|            | (SW->HW)   |               |         |        |          | Bitwidth  | Burst Length | Burst Length | Outstanding | Outstanding |
+------------+------------+---------------+---------+--------+----------+-----------+--------------+--------------+-------------+-------------+
| m_axi_gmem | 32 -> 32   | 64            | 64      | slave  | 0        | 512       | 16           | 16           | 16          | 16          |
+------------+------------+---------------+---------+--------+----------+-----------+--------------+--------------+-------------+-------------+

* S_AXILITE
+---------------+------------+---------------+--------+----------+
| Interface     | Data Width | Address Width | Offset | Register |
+---------------+------------+---------------+--------+----------+
| s_axi_control | 32         | 6             | 16     | 0        |
+---------------+------------+---------------+--------+----------+

* REGISTER
+-------------+----------+
| Interface   | Bitwidth |
+-------------+----------+
| event_done  | 1        |
| event_start | 1        |
+-------------+----------+

* TOP LEVEL CONTROL
+-----------+---------------+-----------+
| Interface | Type          | Ports     |
+-----------+---------------+-----------+
| ap_clk    | clock         | ap_clk    |
| ap_rst_n  | reset         | ap_rst_n  |
| interrupt | interrupt     | interrupt |
| ap_ctrl   | ap_ctrl_chain |           |
+-----------+---------------+-----------+


================================================================
== SW I/O Information
================================================================
* Top Function Arguments
+----------+-----------+-------------+
| Argument | Direction | Datatype    |
+----------+-----------+-------------+
| in1      | inout     | int const * |
| in2      | inout     | int const * |
| out      | inout     | int*        |
| elements | in        | int         |
+----------+-----------+-------------+

* SW-to-HW Mapping
+----------+------------------------+-----------+----------+-----------------------+
| Argument | HW Name                | HW Type   | HW Usage | HW Info               |
+----------+------------------------+-----------+----------+-----------------------+
| in1      | m_axi_gmem             | interface |          |                       |
| in1      | s_axi_control in1_1    | register  | offset   | offset=0x10, range=32 |
| in1      | s_axi_control in1_2    | register  | offset   | offset=0x14, range=32 |
| in2      | m_axi_gmem             | interface |          |                       |
| in2      | s_axi_control in2_1    | register  | offset   | offset=0x1c, range=32 |
| in2      | s_axi_control in2_2    | register  | offset   | offset=0x20, range=32 |
| out      | m_axi_gmem             | interface |          |                       |
| out      | s_axi_control out_r_1  | register  | offset   | offset=0x28, range=32 |
| out      | s_axi_control out_r_2  | register  | offset   | offset=0x2c, range=32 |
| elements | s_axi_control elements | register  |          | offset=0x34, range=32 |
+----------+------------------------+-----------+----------+-----------------------+


================================================================
== M_AXI Burst Information
================================================================
* Burst Summary
+--------------+-------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+------------------------------------------------------------+
| HW Interface | Loop  | Message                                                                                                                                                                                                                        | Location                                                   |
+--------------+-------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+------------------------------------------------------------+
| m_axi_gmem   | vadd1 | Multiple burst writes of variable length and bit width 32. These bursts requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings. | /home/centos/workspace/vadd_kernels/src/krnl_vadd.cpp:51:5 |
+--------------+-------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+------------------------------------------------------------+

* Bursts and Widening Missed
+--------------+----------+-------+----------------------------------------------------------------------------------------+------------+------------------------------------------------------------+
| HW Interface | Variable | Loop  | Problem                                                                                | Resolution | Location                                                   |
+--------------+----------+-------+----------------------------------------------------------------------------------------+------------+------------------------------------------------------------+
| m_axi_gmem   | in1      | vadd1 | Sequential access length is not divisible by 2                                         | 214-234    | /home/centos/workspace/vadd_kernels/src/krnl_vadd.cpp:51:5 |
| m_axi_gmem   | in2      | vadd1 | Sequential access length is not divisible by 2                                         | 214-234    | /home/centos/workspace/vadd_kernels/src/krnl_vadd.cpp:51:5 |
| m_axi_gmem   | out      | vadd1 | Sequential access length is not divisible by 2                                         | 214-234    | /home/centos/workspace/vadd_kernels/src/krnl_vadd.cpp:51:5 |
| m_axi_gmem   |          |       | Could not burst due to multiple potential reads to the same bundle in the same region. | 214-224    | /home/centos/workspace/vadd_kernels/src/krnl_vadd.cpp:51:5 |
+--------------+----------+-------+----------------------------------------------------------------------------------------+------------+------------------------------------------------------------+

    * Resolution URL: www.xilinx.com/cgi-bin/docs/rdoc?v=2021.1;t=hls+guidance;d=XXX-YYY.html (replace XXX-YYY with column value)

