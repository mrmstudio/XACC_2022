-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.1 (64-bit)
-- Version: 2021.1
-- Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity krnl_vadd_krnl_vadd_Pipeline_vadd1 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    m_axi_gmem0_AWVALID : OUT STD_LOGIC;
    m_axi_gmem0_AWREADY : IN STD_LOGIC;
    m_axi_gmem0_AWADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
    m_axi_gmem0_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem0_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_gmem0_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem0_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem0_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem0_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem0_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem0_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem0_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem0_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem0_WVALID : OUT STD_LOGIC;
    m_axi_gmem0_WREADY : IN STD_LOGIC;
    m_axi_gmem0_WDATA : OUT STD_LOGIC_VECTOR (511 downto 0);
    m_axi_gmem0_WSTRB : OUT STD_LOGIC_VECTOR (63 downto 0);
    m_axi_gmem0_WLAST : OUT STD_LOGIC;
    m_axi_gmem0_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem0_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem0_ARVALID : OUT STD_LOGIC;
    m_axi_gmem0_ARREADY : IN STD_LOGIC;
    m_axi_gmem0_ARADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
    m_axi_gmem0_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem0_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_gmem0_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem0_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem0_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem0_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem0_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem0_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem0_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem0_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem0_RVALID : IN STD_LOGIC;
    m_axi_gmem0_RREADY : OUT STD_LOGIC;
    m_axi_gmem0_RDATA : IN STD_LOGIC_VECTOR (511 downto 0);
    m_axi_gmem0_RLAST : IN STD_LOGIC;
    m_axi_gmem0_RID : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem0_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem0_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem0_BVALID : IN STD_LOGIC;
    m_axi_gmem0_BREADY : OUT STD_LOGIC;
    m_axi_gmem0_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem0_BID : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem0_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem1_AWVALID : OUT STD_LOGIC;
    m_axi_gmem1_AWREADY : IN STD_LOGIC;
    m_axi_gmem1_AWADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
    m_axi_gmem1_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem1_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_gmem1_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem1_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem1_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem1_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem1_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem1_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem1_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem1_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem1_WVALID : OUT STD_LOGIC;
    m_axi_gmem1_WREADY : IN STD_LOGIC;
    m_axi_gmem1_WDATA : OUT STD_LOGIC_VECTOR (511 downto 0);
    m_axi_gmem1_WSTRB : OUT STD_LOGIC_VECTOR (63 downto 0);
    m_axi_gmem1_WLAST : OUT STD_LOGIC;
    m_axi_gmem1_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem1_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem1_ARVALID : OUT STD_LOGIC;
    m_axi_gmem1_ARREADY : IN STD_LOGIC;
    m_axi_gmem1_ARADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
    m_axi_gmem1_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem1_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_gmem1_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem1_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem1_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem1_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem1_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem1_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem1_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem1_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem1_RVALID : IN STD_LOGIC;
    m_axi_gmem1_RREADY : OUT STD_LOGIC;
    m_axi_gmem1_RDATA : IN STD_LOGIC_VECTOR (511 downto 0);
    m_axi_gmem1_RLAST : IN STD_LOGIC;
    m_axi_gmem1_RID : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem1_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem1_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem1_BVALID : IN STD_LOGIC;
    m_axi_gmem1_BREADY : OUT STD_LOGIC;
    m_axi_gmem1_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem1_BID : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem1_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    sext_ln52_1 : IN STD_LOGIC_VECTOR (57 downto 0);
    sext_ln52 : IN STD_LOGIC_VECTOR (57 downto 0);
    sext_ln52_2 : IN STD_LOGIC_VECTOR (57 downto 0);
    zext_ln52 : IN STD_LOGIC_VECTOR (31 downto 0);
    ap_ext_blocking_n : OUT STD_LOGIC;
    ap_str_blocking_n : OUT STD_LOGIC;
    ap_int_blocking_n : OUT STD_LOGIC );
end;


architecture behav of krnl_vadd_krnl_vadd_Pipeline_vadd1 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv512_lc_1 : STD_LOGIC_VECTOR (511 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv64_FFFFFFFFFFFFFFFF : STD_LOGIC_VECTOR (63 downto 0) := "1111111111111111111111111111111111111111111111111111111111111111";
    constant ap_const_lv64_1 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000001";
    constant ap_const_lv64_2 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000010";
    constant ap_const_lv64_3 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000011";
    constant ap_const_lv64_4 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000100";
    constant ap_const_lv64_5 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000101";
    constant ap_const_lv64_6 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000110";
    constant ap_const_lv64_7 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000111";
    constant ap_const_lv64_8 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000001000";
    constant ap_const_lv64_9 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000001001";
    constant ap_const_lv64_A : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000001010";
    constant ap_const_lv64_B : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000001011";
    constant ap_const_lv64_C : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000001100";
    constant ap_const_lv64_D : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000001101";
    constant ap_const_lv64_E : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000001110";
    constant ap_const_lv64_F : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000001111";
    constant ap_const_lv64_10 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000010000";
    constant ap_const_lv32_20 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100000";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv32_40 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000000";
    constant ap_const_lv32_5F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001011111";
    constant ap_const_lv32_60 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001100000";
    constant ap_const_lv32_7F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001111111";
    constant ap_const_lv32_80 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010000000";
    constant ap_const_lv32_9F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010011111";
    constant ap_const_lv32_A0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010100000";
    constant ap_const_lv32_BF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010111111";
    constant ap_const_lv32_C0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011000000";
    constant ap_const_lv32_DF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011011111";
    constant ap_const_lv32_E0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011100000";
    constant ap_const_lv32_FF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011111111";
    constant ap_const_lv32_100 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000100000000";
    constant ap_const_lv32_11F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000100011111";
    constant ap_const_lv32_120 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000100100000";
    constant ap_const_lv32_13F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000100111111";
    constant ap_const_lv32_140 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000101000000";
    constant ap_const_lv32_15F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000101011111";
    constant ap_const_lv32_160 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000101100000";
    constant ap_const_lv32_17F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000101111111";
    constant ap_const_lv32_180 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000110000000";
    constant ap_const_lv32_19F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000110011111";
    constant ap_const_lv32_1A0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000110100000";
    constant ap_const_lv32_1BF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000110111111";
    constant ap_const_lv32_1C0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000111000000";
    constant ap_const_lv32_1DF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000111011111";
    constant ap_const_lv32_1E0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000111100000";
    constant ap_const_lv32_1FF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000111111111";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (0 downto 0) := "1";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter4 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1 : BOOLEAN;
    signal icmp_ln52_reg_855 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state3_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4 : BOOLEAN;
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal icmp_ln52_15_fu_387_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln52_14_fu_376_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln52_13_fu_365_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln52_12_fu_354_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln52_11_fu_343_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln52_10_fu_332_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln52_9_fu_321_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln52_8_fu_310_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln52_7_fu_299_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln52_6_fu_288_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln52_5_fu_277_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln52_4_fu_266_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln52_3_fu_255_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln52_2_fu_244_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln52_1_fu_233_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln52_fu_222_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_condition_exit_pp0_iter1_stage0 : STD_LOGIC;
    signal ap_loop_exit_ready : STD_LOGIC;
    signal ap_ready_int : STD_LOGIC;
    signal gmem1_blk_n_R : STD_LOGIC;
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal gmem0_blk_n_R : STD_LOGIC;
    signal gmem0_blk_n_W : STD_LOGIC;
    signal zext_ln52_cast_fu_198_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln52_cast_reg_820 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal icmp_ln52_reg_855_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln52_1_reg_859 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln52_1_reg_859_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln52_2_reg_863 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln52_2_reg_863_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln52_3_reg_867 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln52_3_reg_867_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln52_4_reg_871 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln52_4_reg_871_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln52_5_reg_875 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln52_5_reg_875_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln52_6_reg_879 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln52_6_reg_879_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln52_7_reg_883 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln52_7_reg_883_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln52_8_reg_887 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln52_8_reg_887_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln52_9_reg_891 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln52_9_reg_891_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln52_10_reg_895 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln52_10_reg_895_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln52_11_reg_899 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln52_11_reg_899_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln52_12_reg_903 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln52_12_reg_903_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln52_13_reg_907 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln52_13_reg_907_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln52_14_reg_911 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln52_14_reg_911_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln52_15_reg_915 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln52_15_reg_915_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln55_fu_415_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln55_reg_919 : STD_LOGIC_VECTOR (31 downto 0);
    signal lshr_ln_reg_924 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln55_1_fu_429_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln55_1_reg_929 : STD_LOGIC_VECTOR (31 downto 0);
    signal lshr_ln55_1_reg_934 : STD_LOGIC_VECTOR (31 downto 0);
    signal lshr_ln55_s_reg_939 : STD_LOGIC_VECTOR (31 downto 0);
    signal lshr_ln55_12_reg_944 : STD_LOGIC_VECTOR (31 downto 0);
    signal lshr_ln55_2_reg_949 : STD_LOGIC_VECTOR (31 downto 0);
    signal lshr_ln55_15_reg_954 : STD_LOGIC_VECTOR (31 downto 0);
    signal lshr_ln55_3_reg_959 : STD_LOGIC_VECTOR (31 downto 0);
    signal lshr_ln55_16_reg_964 : STD_LOGIC_VECTOR (31 downto 0);
    signal lshr_ln55_4_reg_969 : STD_LOGIC_VECTOR (31 downto 0);
    signal lshr_ln55_17_reg_974 : STD_LOGIC_VECTOR (31 downto 0);
    signal lshr_ln55_5_reg_979 : STD_LOGIC_VECTOR (31 downto 0);
    signal lshr_ln55_18_reg_984 : STD_LOGIC_VECTOR (31 downto 0);
    signal lshr_ln55_6_reg_989 : STD_LOGIC_VECTOR (31 downto 0);
    signal lshr_ln55_19_reg_994 : STD_LOGIC_VECTOR (31 downto 0);
    signal lshr_ln55_7_reg_999 : STD_LOGIC_VECTOR (31 downto 0);
    signal lshr_ln55_20_reg_1004 : STD_LOGIC_VECTOR (31 downto 0);
    signal lshr_ln55_8_reg_1009 : STD_LOGIC_VECTOR (31 downto 0);
    signal lshr_ln55_21_reg_1014 : STD_LOGIC_VECTOR (31 downto 0);
    signal lshr_ln55_9_reg_1019 : STD_LOGIC_VECTOR (31 downto 0);
    signal lshr_ln55_22_reg_1024 : STD_LOGIC_VECTOR (31 downto 0);
    signal lshr_ln55_10_reg_1029 : STD_LOGIC_VECTOR (31 downto 0);
    signal lshr_ln55_23_reg_1034 : STD_LOGIC_VECTOR (31 downto 0);
    signal lshr_ln55_11_reg_1039 : STD_LOGIC_VECTOR (31 downto 0);
    signal lshr_ln55_24_reg_1044 : STD_LOGIC_VECTOR (31 downto 0);
    signal lshr_ln55_25_reg_1049 : STD_LOGIC_VECTOR (31 downto 0);
    signal lshr_ln55_26_reg_1054 : STD_LOGIC_VECTOR (31 downto 0);
    signal lshr_ln55_13_reg_1059 : STD_LOGIC_VECTOR (31 downto 0);
    signal lshr_ln55_27_reg_1064 : STD_LOGIC_VECTOR (31 downto 0);
    signal lshr_ln55_14_reg_1069 : STD_LOGIC_VECTOR (31 downto 0);
    signal lshr_ln55_28_reg_1074 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln55_fu_728_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln55_reg_1084 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln55_1_fu_732_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln55_1_reg_1089 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln55_2_fu_736_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln55_2_reg_1094 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln55_3_fu_740_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln55_3_reg_1099 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln55_4_fu_744_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln55_4_reg_1104 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln55_5_fu_748_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln55_5_reg_1109 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln55_6_fu_752_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln55_6_reg_1114 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln55_7_fu_756_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln55_7_reg_1119 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln55_8_fu_760_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln55_8_reg_1124 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln55_9_fu_764_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln55_9_reg_1129 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln55_10_fu_768_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln55_10_reg_1134 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln55_11_fu_772_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln55_11_reg_1139 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln55_12_fu_776_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln55_12_reg_1144 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln55_13_fu_780_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln55_13_reg_1149 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln55_14_fu_784_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln55_14_reg_1154 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln55_15_fu_788_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln55_15_reg_1159 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_condition_exit_pp0_iter3_stage0 : STD_LOGIC;
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal i_0_fu_152 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln52_fu_392_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_loop_init : STD_LOGIC;
    signal or_ln52_fu_227_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal or_ln52_1_fu_238_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal or_ln52_2_fu_249_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal or_ln52_3_fu_260_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal or_ln52_4_fu_271_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal or_ln52_5_fu_282_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal or_ln52_6_fu_293_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal or_ln52_7_fu_304_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal or_ln52_8_fu_315_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal or_ln52_9_fu_326_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal or_ln52_10_fu_337_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal or_ln52_11_fu_348_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal or_ln52_12_fu_359_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal or_ln52_13_fu_370_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal or_ln52_14_fu_381_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_continue_int : STD_LOGIC;
    signal ap_done_int : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter2_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter3_reg : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_ext_blocking_cur_n : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_start_int : STD_LOGIC;
    signal ap_condition_1057 : BOOLEAN;
    signal ap_ce_reg : STD_LOGIC;

    component krnl_vadd_flow_control_loop_pipe_sequential_init IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_start_int : OUT STD_LOGIC;
        ap_loop_init : OUT STD_LOGIC;
        ap_ready_int : IN STD_LOGIC;
        ap_loop_exit_ready : IN STD_LOGIC;
        ap_loop_exit_done : IN STD_LOGIC;
        ap_continue_int : OUT STD_LOGIC;
        ap_done_int : IN STD_LOGIC );
    end component;



begin
    flow_control_loop_pipe_sequential_init_U : component krnl_vadd_flow_control_loop_pipe_sequential_init
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => ap_start,
        ap_ready => ap_ready,
        ap_done => ap_done,
        ap_start_int => ap_start_int,
        ap_loop_init => ap_loop_init,
        ap_ready_int => ap_ready_int,
        ap_loop_exit_ready => ap_condition_exit_pp0_iter1_stage0,
        ap_loop_exit_done => ap_done_int,
        ap_continue_int => ap_continue_int,
        ap_done_int => ap_done_int);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue_int = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_loop_exit_ready_pp0_iter3_reg = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_condition_exit_pp0_iter1_stage0)) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then 
                    ap_enable_reg_pp0_iter1 <= ap_start_int;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_condition_exit_pp0_iter3_stage0)) then 
                    ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
                elsif ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
                end if; 
            end if;
        end if;
    end process;


    i_0_fu_152_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    i_0_fu_152 <= ap_const_lv64_0;
                elsif ((ap_const_boolean_1 = ap_condition_1057)) then 
                    i_0_fu_152 <= add_ln52_fu_392_p2;
                end if;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln52_10_reg_895_pp0_iter2_reg = ap_const_lv1_0) and (icmp_ln52_9_reg_891_pp0_iter2_reg = ap_const_lv1_0) and (icmp_ln52_8_reg_887_pp0_iter2_reg = ap_const_lv1_0) and (icmp_ln52_7_reg_883_pp0_iter2_reg = ap_const_lv1_0) and (icmp_ln52_6_reg_879_pp0_iter2_reg = ap_const_lv1_0) and (icmp_ln52_5_reg_875_pp0_iter2_reg = ap_const_lv1_0) and (icmp_ln52_4_reg_871_pp0_iter2_reg = ap_const_lv1_0) and (icmp_ln52_3_reg_867_pp0_iter2_reg = ap_const_lv1_0) and (icmp_ln52_2_reg_863_pp0_iter2_reg = ap_const_lv1_0) and (icmp_ln52_1_reg_859_pp0_iter2_reg = ap_const_lv1_0) and (icmp_ln52_reg_855_pp0_iter2_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                add_ln55_10_reg_1134 <= add_ln55_10_fu_768_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln52_11_reg_899_pp0_iter2_reg = ap_const_lv1_0) and (icmp_ln52_10_reg_895_pp0_iter2_reg = ap_const_lv1_0) and (icmp_ln52_9_reg_891_pp0_iter2_reg = ap_const_lv1_0) and (icmp_ln52_8_reg_887_pp0_iter2_reg = ap_const_lv1_0) and (icmp_ln52_7_reg_883_pp0_iter2_reg = ap_const_lv1_0) and (icmp_ln52_6_reg_879_pp0_iter2_reg = ap_const_lv1_0) and (icmp_ln52_5_reg_875_pp0_iter2_reg = ap_const_lv1_0) and (icmp_ln52_4_reg_871_pp0_iter2_reg = ap_const_lv1_0) and (icmp_ln52_3_reg_867_pp0_iter2_reg = ap_const_lv1_0) and (icmp_ln52_2_reg_863_pp0_iter2_reg = ap_const_lv1_0) and (icmp_ln52_1_reg_859_pp0_iter2_reg = ap_const_lv1_0) and (icmp_ln52_reg_855_pp0_iter2_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                add_ln55_11_reg_1139 <= add_ln55_11_fu_772_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln52_12_reg_903_pp0_iter2_reg = ap_const_lv1_0) and (icmp_ln52_11_reg_899_pp0_iter2_reg = ap_const_lv1_0) and (icmp_ln52_10_reg_895_pp0_iter2_reg = ap_const_lv1_0) and (icmp_ln52_9_reg_891_pp0_iter2_reg = ap_const_lv1_0) and (icmp_ln52_8_reg_887_pp0_iter2_reg = ap_const_lv1_0) and (icmp_ln52_7_reg_883_pp0_iter2_reg = ap_const_lv1_0) and (icmp_ln52_6_reg_879_pp0_iter2_reg = ap_const_lv1_0) and (icmp_ln52_5_reg_875_pp0_iter2_reg = ap_const_lv1_0) and (icmp_ln52_4_reg_871_pp0_iter2_reg = ap_const_lv1_0) and (icmp_ln52_3_reg_867_pp0_iter2_reg = ap_const_lv1_0) and (icmp_ln52_2_reg_863_pp0_iter2_reg = ap_const_lv1_0) and (icmp_ln52_1_reg_859_pp0_iter2_reg = ap_const_lv1_0) and (icmp_ln52_reg_855_pp0_iter2_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                add_ln55_12_reg_1144 <= add_ln55_12_fu_776_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln52_13_reg_907_pp0_iter2_reg = ap_const_lv1_0) and (icmp_ln52_12_reg_903_pp0_iter2_reg = ap_const_lv1_0) and (icmp_ln52_11_reg_899_pp0_iter2_reg = ap_const_lv1_0) and (icmp_ln52_10_reg_895_pp0_iter2_reg = ap_const_lv1_0) and (icmp_ln52_9_reg_891_pp0_iter2_reg = ap_const_lv1_0) and (icmp_ln52_8_reg_887_pp0_iter2_reg = ap_const_lv1_0) and (icmp_ln52_7_reg_883_pp0_iter2_reg = ap_const_lv1_0) and (icmp_ln52_6_reg_879_pp0_iter2_reg = ap_const_lv1_0) and (icmp_ln52_5_reg_875_pp0_iter2_reg = ap_const_lv1_0) and (icmp_ln52_4_reg_871_pp0_iter2_reg = ap_const_lv1_0) and (icmp_ln52_3_reg_867_pp0_iter2_reg = ap_const_lv1_0) and (icmp_ln52_2_reg_863_pp0_iter2_reg = ap_const_lv1_0) and (icmp_ln52_1_reg_859_pp0_iter2_reg = ap_const_lv1_0) and (icmp_ln52_reg_855_pp0_iter2_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                add_ln55_13_reg_1149 <= add_ln55_13_fu_780_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln52_14_reg_911_pp0_iter2_reg = ap_const_lv1_0) and (icmp_ln52_13_reg_907_pp0_iter2_reg = ap_const_lv1_0) and (icmp_ln52_12_reg_903_pp0_iter2_reg = ap_const_lv1_0) and (icmp_ln52_11_reg_899_pp0_iter2_reg = ap_const_lv1_0) and (icmp_ln52_10_reg_895_pp0_iter2_reg = ap_const_lv1_0) and (icmp_ln52_9_reg_891_pp0_iter2_reg = ap_const_lv1_0) and (icmp_ln52_8_reg_887_pp0_iter2_reg = ap_const_lv1_0) and (icmp_ln52_7_reg_883_pp0_iter2_reg = ap_const_lv1_0) and (icmp_ln52_6_reg_879_pp0_iter2_reg = ap_const_lv1_0) and (icmp_ln52_5_reg_875_pp0_iter2_reg = ap_const_lv1_0) and (icmp_ln52_4_reg_871_pp0_iter2_reg = ap_const_lv1_0) and (icmp_ln52_3_reg_867_pp0_iter2_reg = ap_const_lv1_0) and (icmp_ln52_2_reg_863_pp0_iter2_reg = ap_const_lv1_0) and (icmp_ln52_1_reg_859_pp0_iter2_reg = ap_const_lv1_0) and (icmp_ln52_reg_855_pp0_iter2_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                add_ln55_14_reg_1154 <= add_ln55_14_fu_784_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln52_15_reg_915_pp0_iter2_reg = ap_const_lv1_0) and (icmp_ln52_14_reg_911_pp0_iter2_reg = ap_const_lv1_0) and (icmp_ln52_13_reg_907_pp0_iter2_reg = ap_const_lv1_0) and (icmp_ln52_12_reg_903_pp0_iter2_reg = ap_const_lv1_0) and (icmp_ln52_11_reg_899_pp0_iter2_reg = ap_const_lv1_0) and (icmp_ln52_10_reg_895_pp0_iter2_reg = ap_const_lv1_0) and (icmp_ln52_9_reg_891_pp0_iter2_reg = ap_const_lv1_0) and (icmp_ln52_8_reg_887_pp0_iter2_reg = ap_const_lv1_0) and (icmp_ln52_7_reg_883_pp0_iter2_reg = ap_const_lv1_0) and (icmp_ln52_6_reg_879_pp0_iter2_reg = ap_const_lv1_0) and (icmp_ln52_5_reg_875_pp0_iter2_reg = ap_const_lv1_0) and (icmp_ln52_4_reg_871_pp0_iter2_reg = ap_const_lv1_0) and (icmp_ln52_3_reg_867_pp0_iter2_reg = ap_const_lv1_0) and (icmp_ln52_2_reg_863_pp0_iter2_reg = ap_const_lv1_0) and (icmp_ln52_1_reg_859_pp0_iter2_reg = ap_const_lv1_0) and (icmp_ln52_reg_855_pp0_iter2_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                add_ln55_15_reg_1159 <= add_ln55_15_fu_788_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln52_1_reg_859_pp0_iter2_reg = ap_const_lv1_0) and (icmp_ln52_reg_855_pp0_iter2_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                add_ln55_1_reg_1089 <= add_ln55_1_fu_732_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln52_2_reg_863_pp0_iter2_reg = ap_const_lv1_0) and (icmp_ln52_1_reg_859_pp0_iter2_reg = ap_const_lv1_0) and (icmp_ln52_reg_855_pp0_iter2_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                add_ln55_2_reg_1094 <= add_ln55_2_fu_736_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln52_3_reg_867_pp0_iter2_reg = ap_const_lv1_0) and (icmp_ln52_2_reg_863_pp0_iter2_reg = ap_const_lv1_0) and (icmp_ln52_1_reg_859_pp0_iter2_reg = ap_const_lv1_0) and (icmp_ln52_reg_855_pp0_iter2_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                add_ln55_3_reg_1099 <= add_ln55_3_fu_740_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln52_4_reg_871_pp0_iter2_reg = ap_const_lv1_0) and (icmp_ln52_3_reg_867_pp0_iter2_reg = ap_const_lv1_0) and (icmp_ln52_2_reg_863_pp0_iter2_reg = ap_const_lv1_0) and (icmp_ln52_1_reg_859_pp0_iter2_reg = ap_const_lv1_0) and (icmp_ln52_reg_855_pp0_iter2_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                add_ln55_4_reg_1104 <= add_ln55_4_fu_744_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln52_5_reg_875_pp0_iter2_reg = ap_const_lv1_0) and (icmp_ln52_4_reg_871_pp0_iter2_reg = ap_const_lv1_0) and (icmp_ln52_3_reg_867_pp0_iter2_reg = ap_const_lv1_0) and (icmp_ln52_2_reg_863_pp0_iter2_reg = ap_const_lv1_0) and (icmp_ln52_1_reg_859_pp0_iter2_reg = ap_const_lv1_0) and (icmp_ln52_reg_855_pp0_iter2_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                add_ln55_5_reg_1109 <= add_ln55_5_fu_748_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln52_6_reg_879_pp0_iter2_reg = ap_const_lv1_0) and (icmp_ln52_5_reg_875_pp0_iter2_reg = ap_const_lv1_0) and (icmp_ln52_4_reg_871_pp0_iter2_reg = ap_const_lv1_0) and (icmp_ln52_3_reg_867_pp0_iter2_reg = ap_const_lv1_0) and (icmp_ln52_2_reg_863_pp0_iter2_reg = ap_const_lv1_0) and (icmp_ln52_1_reg_859_pp0_iter2_reg = ap_const_lv1_0) and (icmp_ln52_reg_855_pp0_iter2_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                add_ln55_6_reg_1114 <= add_ln55_6_fu_752_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln52_7_reg_883_pp0_iter2_reg = ap_const_lv1_0) and (icmp_ln52_6_reg_879_pp0_iter2_reg = ap_const_lv1_0) and (icmp_ln52_5_reg_875_pp0_iter2_reg = ap_const_lv1_0) and (icmp_ln52_4_reg_871_pp0_iter2_reg = ap_const_lv1_0) and (icmp_ln52_3_reg_867_pp0_iter2_reg = ap_const_lv1_0) and (icmp_ln52_2_reg_863_pp0_iter2_reg = ap_const_lv1_0) and (icmp_ln52_1_reg_859_pp0_iter2_reg = ap_const_lv1_0) and (icmp_ln52_reg_855_pp0_iter2_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                add_ln55_7_reg_1119 <= add_ln55_7_fu_756_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln52_8_reg_887_pp0_iter2_reg = ap_const_lv1_0) and (icmp_ln52_7_reg_883_pp0_iter2_reg = ap_const_lv1_0) and (icmp_ln52_6_reg_879_pp0_iter2_reg = ap_const_lv1_0) and (icmp_ln52_5_reg_875_pp0_iter2_reg = ap_const_lv1_0) and (icmp_ln52_4_reg_871_pp0_iter2_reg = ap_const_lv1_0) and (icmp_ln52_3_reg_867_pp0_iter2_reg = ap_const_lv1_0) and (icmp_ln52_2_reg_863_pp0_iter2_reg = ap_const_lv1_0) and (icmp_ln52_1_reg_859_pp0_iter2_reg = ap_const_lv1_0) and (icmp_ln52_reg_855_pp0_iter2_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                add_ln55_8_reg_1124 <= add_ln55_8_fu_760_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln52_9_reg_891_pp0_iter2_reg = ap_const_lv1_0) and (icmp_ln52_8_reg_887_pp0_iter2_reg = ap_const_lv1_0) and (icmp_ln52_7_reg_883_pp0_iter2_reg = ap_const_lv1_0) and (icmp_ln52_6_reg_879_pp0_iter2_reg = ap_const_lv1_0) and (icmp_ln52_5_reg_875_pp0_iter2_reg = ap_const_lv1_0) and (icmp_ln52_4_reg_871_pp0_iter2_reg = ap_const_lv1_0) and (icmp_ln52_3_reg_867_pp0_iter2_reg = ap_const_lv1_0) and (icmp_ln52_2_reg_863_pp0_iter2_reg = ap_const_lv1_0) and (icmp_ln52_1_reg_859_pp0_iter2_reg = ap_const_lv1_0) and (icmp_ln52_reg_855_pp0_iter2_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                add_ln55_9_reg_1129 <= add_ln55_9_fu_764_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln52_reg_855_pp0_iter2_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                add_ln55_reg_1084 <= add_ln55_fu_728_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready;
                icmp_ln52_reg_855 <= icmp_ln52_fu_222_p2;
                    zext_ln52_cast_reg_820(31 downto 0) <= zext_ln52_cast_fu_198_p1(31 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
                icmp_ln52_10_reg_895_pp0_iter2_reg <= icmp_ln52_10_reg_895;
                icmp_ln52_11_reg_899_pp0_iter2_reg <= icmp_ln52_11_reg_899;
                icmp_ln52_12_reg_903_pp0_iter2_reg <= icmp_ln52_12_reg_903;
                icmp_ln52_13_reg_907_pp0_iter2_reg <= icmp_ln52_13_reg_907;
                icmp_ln52_14_reg_911_pp0_iter2_reg <= icmp_ln52_14_reg_911;
                icmp_ln52_15_reg_915_pp0_iter2_reg <= icmp_ln52_15_reg_915;
                icmp_ln52_1_reg_859_pp0_iter2_reg <= icmp_ln52_1_reg_859;
                icmp_ln52_2_reg_863_pp0_iter2_reg <= icmp_ln52_2_reg_863;
                icmp_ln52_3_reg_867_pp0_iter2_reg <= icmp_ln52_3_reg_867;
                icmp_ln52_4_reg_871_pp0_iter2_reg <= icmp_ln52_4_reg_871;
                icmp_ln52_5_reg_875_pp0_iter2_reg <= icmp_ln52_5_reg_875;
                icmp_ln52_6_reg_879_pp0_iter2_reg <= icmp_ln52_6_reg_879;
                icmp_ln52_7_reg_883_pp0_iter2_reg <= icmp_ln52_7_reg_883;
                icmp_ln52_8_reg_887_pp0_iter2_reg <= icmp_ln52_8_reg_887;
                icmp_ln52_9_reg_891_pp0_iter2_reg <= icmp_ln52_9_reg_891;
                icmp_ln52_reg_855_pp0_iter2_reg <= icmp_ln52_reg_855;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln52_fu_222_p2 = ap_const_lv1_0) and (icmp_ln52_1_fu_233_p2 = ap_const_lv1_0) and (icmp_ln52_2_fu_244_p2 = ap_const_lv1_0) and (icmp_ln52_3_fu_255_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln52_4_fu_266_p2 = ap_const_lv1_0) and (icmp_ln52_5_fu_277_p2 = ap_const_lv1_0) and (icmp_ln52_6_fu_288_p2 = ap_const_lv1_0) and (icmp_ln52_7_fu_299_p2 = ap_const_lv1_0) and (icmp_ln52_8_fu_310_p2 = ap_const_lv1_0) and (icmp_ln52_9_fu_321_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                icmp_ln52_10_reg_895 <= icmp_ln52_10_fu_332_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln52_fu_222_p2 = ap_const_lv1_0) and (icmp_ln52_1_fu_233_p2 = ap_const_lv1_0) and (icmp_ln52_2_fu_244_p2 = ap_const_lv1_0) and (icmp_ln52_3_fu_255_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln52_4_fu_266_p2 = ap_const_lv1_0) and (icmp_ln52_5_fu_277_p2 = ap_const_lv1_0) and (icmp_ln52_6_fu_288_p2 = ap_const_lv1_0) and (icmp_ln52_7_fu_299_p2 = ap_const_lv1_0) and (icmp_ln52_8_fu_310_p2 = ap_const_lv1_0) and (icmp_ln52_9_fu_321_p2 = ap_const_lv1_0) and (icmp_ln52_10_fu_332_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                icmp_ln52_11_reg_899 <= icmp_ln52_11_fu_343_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln52_fu_222_p2 = ap_const_lv1_0) and (icmp_ln52_1_fu_233_p2 = ap_const_lv1_0) and (icmp_ln52_2_fu_244_p2 = ap_const_lv1_0) and (icmp_ln52_3_fu_255_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln52_4_fu_266_p2 = ap_const_lv1_0) and (icmp_ln52_5_fu_277_p2 = ap_const_lv1_0) and (icmp_ln52_6_fu_288_p2 = ap_const_lv1_0) and (icmp_ln52_7_fu_299_p2 = ap_const_lv1_0) and (icmp_ln52_8_fu_310_p2 = ap_const_lv1_0) and (icmp_ln52_9_fu_321_p2 = ap_const_lv1_0) and (icmp_ln52_10_fu_332_p2 = ap_const_lv1_0) and (icmp_ln52_11_fu_343_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                icmp_ln52_12_reg_903 <= icmp_ln52_12_fu_354_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln52_fu_222_p2 = ap_const_lv1_0) and (icmp_ln52_1_fu_233_p2 = ap_const_lv1_0) and (icmp_ln52_2_fu_244_p2 = ap_const_lv1_0) and (icmp_ln52_3_fu_255_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln52_4_fu_266_p2 = ap_const_lv1_0) and (icmp_ln52_5_fu_277_p2 = ap_const_lv1_0) and (icmp_ln52_6_fu_288_p2 = ap_const_lv1_0) and (icmp_ln52_7_fu_299_p2 = ap_const_lv1_0) and (icmp_ln52_8_fu_310_p2 = ap_const_lv1_0) and (icmp_ln52_9_fu_321_p2 = ap_const_lv1_0) and (icmp_ln52_10_fu_332_p2 = ap_const_lv1_0) and (icmp_ln52_11_fu_343_p2 = ap_const_lv1_0) and (icmp_ln52_12_fu_354_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                icmp_ln52_13_reg_907 <= icmp_ln52_13_fu_365_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln52_fu_222_p2 = ap_const_lv1_0) and (icmp_ln52_1_fu_233_p2 = ap_const_lv1_0) and (icmp_ln52_2_fu_244_p2 = ap_const_lv1_0) and (icmp_ln52_3_fu_255_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln52_4_fu_266_p2 = ap_const_lv1_0) and (icmp_ln52_5_fu_277_p2 = ap_const_lv1_0) and (icmp_ln52_6_fu_288_p2 = ap_const_lv1_0) and (icmp_ln52_7_fu_299_p2 = ap_const_lv1_0) and (icmp_ln52_8_fu_310_p2 = ap_const_lv1_0) and (icmp_ln52_9_fu_321_p2 = ap_const_lv1_0) and (icmp_ln52_10_fu_332_p2 = ap_const_lv1_0) and (icmp_ln52_11_fu_343_p2 = ap_const_lv1_0) and (icmp_ln52_12_fu_354_p2 = ap_const_lv1_0) and (icmp_ln52_13_fu_365_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                icmp_ln52_14_reg_911 <= icmp_ln52_14_fu_376_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln52_fu_222_p2 = ap_const_lv1_0) and (icmp_ln52_1_fu_233_p2 = ap_const_lv1_0) and (icmp_ln52_2_fu_244_p2 = ap_const_lv1_0) and (icmp_ln52_3_fu_255_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln52_4_fu_266_p2 = ap_const_lv1_0) and (icmp_ln52_5_fu_277_p2 = ap_const_lv1_0) and (icmp_ln52_6_fu_288_p2 = ap_const_lv1_0) and (icmp_ln52_7_fu_299_p2 = ap_const_lv1_0) and (icmp_ln52_8_fu_310_p2 = ap_const_lv1_0) and (icmp_ln52_9_fu_321_p2 = ap_const_lv1_0) and (icmp_ln52_10_fu_332_p2 = ap_const_lv1_0) and (icmp_ln52_11_fu_343_p2 = ap_const_lv1_0) and (icmp_ln52_12_fu_354_p2 = ap_const_lv1_0) and (icmp_ln52_13_fu_365_p2 = ap_const_lv1_0) and (icmp_ln52_14_fu_376_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                icmp_ln52_15_reg_915 <= icmp_ln52_15_fu_387_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln52_fu_222_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                icmp_ln52_1_reg_859 <= icmp_ln52_1_fu_233_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln52_fu_222_p2 = ap_const_lv1_0) and (icmp_ln52_1_fu_233_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                icmp_ln52_2_reg_863 <= icmp_ln52_2_fu_244_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln52_fu_222_p2 = ap_const_lv1_0) and (icmp_ln52_1_fu_233_p2 = ap_const_lv1_0) and (icmp_ln52_2_fu_244_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                icmp_ln52_3_reg_867 <= icmp_ln52_3_fu_255_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln52_fu_222_p2 = ap_const_lv1_0) and (icmp_ln52_1_fu_233_p2 = ap_const_lv1_0) and (icmp_ln52_2_fu_244_p2 = ap_const_lv1_0) and (icmp_ln52_3_fu_255_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                icmp_ln52_4_reg_871 <= icmp_ln52_4_fu_266_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln52_fu_222_p2 = ap_const_lv1_0) and (icmp_ln52_1_fu_233_p2 = ap_const_lv1_0) and (icmp_ln52_2_fu_244_p2 = ap_const_lv1_0) and (icmp_ln52_3_fu_255_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln52_4_fu_266_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                icmp_ln52_5_reg_875 <= icmp_ln52_5_fu_277_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln52_fu_222_p2 = ap_const_lv1_0) and (icmp_ln52_1_fu_233_p2 = ap_const_lv1_0) and (icmp_ln52_2_fu_244_p2 = ap_const_lv1_0) and (icmp_ln52_3_fu_255_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln52_4_fu_266_p2 = ap_const_lv1_0) and (icmp_ln52_5_fu_277_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                icmp_ln52_6_reg_879 <= icmp_ln52_6_fu_288_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln52_fu_222_p2 = ap_const_lv1_0) and (icmp_ln52_1_fu_233_p2 = ap_const_lv1_0) and (icmp_ln52_2_fu_244_p2 = ap_const_lv1_0) and (icmp_ln52_3_fu_255_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln52_4_fu_266_p2 = ap_const_lv1_0) and (icmp_ln52_5_fu_277_p2 = ap_const_lv1_0) and (icmp_ln52_6_fu_288_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                icmp_ln52_7_reg_883 <= icmp_ln52_7_fu_299_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln52_fu_222_p2 = ap_const_lv1_0) and (icmp_ln52_1_fu_233_p2 = ap_const_lv1_0) and (icmp_ln52_2_fu_244_p2 = ap_const_lv1_0) and (icmp_ln52_3_fu_255_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln52_4_fu_266_p2 = ap_const_lv1_0) and (icmp_ln52_5_fu_277_p2 = ap_const_lv1_0) and (icmp_ln52_6_fu_288_p2 = ap_const_lv1_0) and (icmp_ln52_7_fu_299_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                icmp_ln52_8_reg_887 <= icmp_ln52_8_fu_310_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln52_fu_222_p2 = ap_const_lv1_0) and (icmp_ln52_1_fu_233_p2 = ap_const_lv1_0) and (icmp_ln52_2_fu_244_p2 = ap_const_lv1_0) and (icmp_ln52_3_fu_255_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln52_4_fu_266_p2 = ap_const_lv1_0) and (icmp_ln52_5_fu_277_p2 = ap_const_lv1_0) and (icmp_ln52_6_fu_288_p2 = ap_const_lv1_0) and (icmp_ln52_7_fu_299_p2 = ap_const_lv1_0) and (icmp_ln52_8_fu_310_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                icmp_ln52_9_reg_891 <= icmp_ln52_9_fu_321_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln52_reg_855 = ap_const_lv1_0) and (icmp_ln52_10_reg_895 = ap_const_lv1_0) and (icmp_ln52_9_reg_891 = ap_const_lv1_0) and (icmp_ln52_8_reg_887 = ap_const_lv1_0) and (icmp_ln52_7_reg_883 = ap_const_lv1_0) and (icmp_ln52_6_reg_879 = ap_const_lv1_0) and (icmp_ln52_5_reg_875 = ap_const_lv1_0) and (icmp_ln52_4_reg_871 = ap_const_lv1_0) and (icmp_ln52_3_reg_867 = ap_const_lv1_0) and (icmp_ln52_2_reg_863 = ap_const_lv1_0) and (icmp_ln52_1_reg_859 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                lshr_ln55_10_reg_1029 <= m_axi_gmem0_RDATA(383 downto 352);
                lshr_ln55_23_reg_1034 <= m_axi_gmem1_RDATA(383 downto 352);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln52_reg_855 = ap_const_lv1_0) and (icmp_ln52_11_reg_899 = ap_const_lv1_0) and (icmp_ln52_10_reg_895 = ap_const_lv1_0) and (icmp_ln52_9_reg_891 = ap_const_lv1_0) and (icmp_ln52_8_reg_887 = ap_const_lv1_0) and (icmp_ln52_7_reg_883 = ap_const_lv1_0) and (icmp_ln52_6_reg_879 = ap_const_lv1_0) and (icmp_ln52_5_reg_875 = ap_const_lv1_0) and (icmp_ln52_4_reg_871 = ap_const_lv1_0) and (icmp_ln52_3_reg_867 = ap_const_lv1_0) and (icmp_ln52_2_reg_863 = ap_const_lv1_0) and (icmp_ln52_1_reg_859 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                lshr_ln55_11_reg_1039 <= m_axi_gmem0_RDATA(415 downto 384);
                lshr_ln55_24_reg_1044 <= m_axi_gmem1_RDATA(415 downto 384);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln52_reg_855 = ap_const_lv1_0) and (icmp_ln52_1_reg_859 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                lshr_ln55_12_reg_944 <= m_axi_gmem1_RDATA(95 downto 64);
                lshr_ln55_s_reg_939 <= m_axi_gmem0_RDATA(95 downto 64);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln52_reg_855 = ap_const_lv1_0) and (icmp_ln52_13_reg_907 = ap_const_lv1_0) and (icmp_ln52_12_reg_903 = ap_const_lv1_0) and (icmp_ln52_11_reg_899 = ap_const_lv1_0) and (icmp_ln52_10_reg_895 = ap_const_lv1_0) and (icmp_ln52_9_reg_891 = ap_const_lv1_0) and (icmp_ln52_8_reg_887 = ap_const_lv1_0) and (icmp_ln52_7_reg_883 = ap_const_lv1_0) and (icmp_ln52_6_reg_879 = ap_const_lv1_0) and (icmp_ln52_5_reg_875 = ap_const_lv1_0) and (icmp_ln52_4_reg_871 = ap_const_lv1_0) and (icmp_ln52_3_reg_867 = ap_const_lv1_0) and (icmp_ln52_2_reg_863 = ap_const_lv1_0) and (icmp_ln52_1_reg_859 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                lshr_ln55_13_reg_1059 <= m_axi_gmem0_RDATA(479 downto 448);
                lshr_ln55_27_reg_1064 <= m_axi_gmem1_RDATA(479 downto 448);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln52_reg_855 = ap_const_lv1_0) and (icmp_ln52_14_reg_911 = ap_const_lv1_0) and (icmp_ln52_13_reg_907 = ap_const_lv1_0) and (icmp_ln52_12_reg_903 = ap_const_lv1_0) and (icmp_ln52_11_reg_899 = ap_const_lv1_0) and (icmp_ln52_10_reg_895 = ap_const_lv1_0) and (icmp_ln52_9_reg_891 = ap_const_lv1_0) and (icmp_ln52_8_reg_887 = ap_const_lv1_0) and (icmp_ln52_7_reg_883 = ap_const_lv1_0) and (icmp_ln52_6_reg_879 = ap_const_lv1_0) and (icmp_ln52_5_reg_875 = ap_const_lv1_0) and (icmp_ln52_4_reg_871 = ap_const_lv1_0) and (icmp_ln52_3_reg_867 = ap_const_lv1_0) and (icmp_ln52_2_reg_863 = ap_const_lv1_0) and (icmp_ln52_1_reg_859 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                lshr_ln55_14_reg_1069 <= m_axi_gmem0_RDATA(511 downto 480);
                lshr_ln55_28_reg_1074 <= m_axi_gmem1_RDATA(511 downto 480);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln52_reg_855 = ap_const_lv1_0) and (icmp_ln52_2_reg_863 = ap_const_lv1_0) and (icmp_ln52_1_reg_859 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                lshr_ln55_15_reg_954 <= m_axi_gmem1_RDATA(127 downto 96);
                lshr_ln55_2_reg_949 <= m_axi_gmem0_RDATA(127 downto 96);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln52_reg_855 = ap_const_lv1_0) and (icmp_ln52_3_reg_867 = ap_const_lv1_0) and (icmp_ln52_2_reg_863 = ap_const_lv1_0) and (icmp_ln52_1_reg_859 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                lshr_ln55_16_reg_964 <= m_axi_gmem1_RDATA(159 downto 128);
                lshr_ln55_3_reg_959 <= m_axi_gmem0_RDATA(159 downto 128);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln52_reg_855 = ap_const_lv1_0) and (icmp_ln52_4_reg_871 = ap_const_lv1_0) and (icmp_ln52_3_reg_867 = ap_const_lv1_0) and (icmp_ln52_2_reg_863 = ap_const_lv1_0) and (icmp_ln52_1_reg_859 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                lshr_ln55_17_reg_974 <= m_axi_gmem1_RDATA(191 downto 160);
                lshr_ln55_4_reg_969 <= m_axi_gmem0_RDATA(191 downto 160);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln52_reg_855 = ap_const_lv1_0) and (icmp_ln52_5_reg_875 = ap_const_lv1_0) and (icmp_ln52_4_reg_871 = ap_const_lv1_0) and (icmp_ln52_3_reg_867 = ap_const_lv1_0) and (icmp_ln52_2_reg_863 = ap_const_lv1_0) and (icmp_ln52_1_reg_859 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                lshr_ln55_18_reg_984 <= m_axi_gmem1_RDATA(223 downto 192);
                lshr_ln55_5_reg_979 <= m_axi_gmem0_RDATA(223 downto 192);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln52_reg_855 = ap_const_lv1_0) and (icmp_ln52_6_reg_879 = ap_const_lv1_0) and (icmp_ln52_5_reg_875 = ap_const_lv1_0) and (icmp_ln52_4_reg_871 = ap_const_lv1_0) and (icmp_ln52_3_reg_867 = ap_const_lv1_0) and (icmp_ln52_2_reg_863 = ap_const_lv1_0) and (icmp_ln52_1_reg_859 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                lshr_ln55_19_reg_994 <= m_axi_gmem1_RDATA(255 downto 224);
                lshr_ln55_6_reg_989 <= m_axi_gmem0_RDATA(255 downto 224);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln52_reg_855 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                lshr_ln55_1_reg_934 <= m_axi_gmem1_RDATA(63 downto 32);
                lshr_ln_reg_924 <= m_axi_gmem0_RDATA(63 downto 32);
                trunc_ln55_1_reg_929 <= trunc_ln55_1_fu_429_p1;
                trunc_ln55_reg_919 <= trunc_ln55_fu_415_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln52_reg_855 = ap_const_lv1_0) and (icmp_ln52_7_reg_883 = ap_const_lv1_0) and (icmp_ln52_6_reg_879 = ap_const_lv1_0) and (icmp_ln52_5_reg_875 = ap_const_lv1_0) and (icmp_ln52_4_reg_871 = ap_const_lv1_0) and (icmp_ln52_3_reg_867 = ap_const_lv1_0) and (icmp_ln52_2_reg_863 = ap_const_lv1_0) and (icmp_ln52_1_reg_859 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                lshr_ln55_20_reg_1004 <= m_axi_gmem1_RDATA(287 downto 256);
                lshr_ln55_7_reg_999 <= m_axi_gmem0_RDATA(287 downto 256);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln52_reg_855 = ap_const_lv1_0) and (icmp_ln52_8_reg_887 = ap_const_lv1_0) and (icmp_ln52_7_reg_883 = ap_const_lv1_0) and (icmp_ln52_6_reg_879 = ap_const_lv1_0) and (icmp_ln52_5_reg_875 = ap_const_lv1_0) and (icmp_ln52_4_reg_871 = ap_const_lv1_0) and (icmp_ln52_3_reg_867 = ap_const_lv1_0) and (icmp_ln52_2_reg_863 = ap_const_lv1_0) and (icmp_ln52_1_reg_859 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                lshr_ln55_21_reg_1014 <= m_axi_gmem1_RDATA(319 downto 288);
                lshr_ln55_8_reg_1009 <= m_axi_gmem0_RDATA(319 downto 288);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln52_reg_855 = ap_const_lv1_0) and (icmp_ln52_9_reg_891 = ap_const_lv1_0) and (icmp_ln52_8_reg_887 = ap_const_lv1_0) and (icmp_ln52_7_reg_883 = ap_const_lv1_0) and (icmp_ln52_6_reg_879 = ap_const_lv1_0) and (icmp_ln52_5_reg_875 = ap_const_lv1_0) and (icmp_ln52_4_reg_871 = ap_const_lv1_0) and (icmp_ln52_3_reg_867 = ap_const_lv1_0) and (icmp_ln52_2_reg_863 = ap_const_lv1_0) and (icmp_ln52_1_reg_859 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                lshr_ln55_22_reg_1024 <= m_axi_gmem1_RDATA(351 downto 320);
                lshr_ln55_9_reg_1019 <= m_axi_gmem0_RDATA(351 downto 320);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln52_reg_855 = ap_const_lv1_0) and (icmp_ln52_12_reg_903 = ap_const_lv1_0) and (icmp_ln52_11_reg_899 = ap_const_lv1_0) and (icmp_ln52_10_reg_895 = ap_const_lv1_0) and (icmp_ln52_9_reg_891 = ap_const_lv1_0) and (icmp_ln52_8_reg_887 = ap_const_lv1_0) and (icmp_ln52_7_reg_883 = ap_const_lv1_0) and (icmp_ln52_6_reg_879 = ap_const_lv1_0) and (icmp_ln52_5_reg_875 = ap_const_lv1_0) and (icmp_ln52_4_reg_871 = ap_const_lv1_0) and (icmp_ln52_3_reg_867 = ap_const_lv1_0) and (icmp_ln52_2_reg_863 = ap_const_lv1_0) and (icmp_ln52_1_reg_859 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                lshr_ln55_25_reg_1049 <= m_axi_gmem0_RDATA(447 downto 416);
                lshr_ln55_26_reg_1054 <= m_axi_gmem1_RDATA(447 downto 416);
            end if;
        end if;
    end process;
    zext_ln52_cast_reg_820(63 downto 32) <= "00000000000000000000000000000000";

    ap_NS_fsm_assign_proc : process (ap_CS_fsm)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when others =>  
                ap_NS_fsm <= "X";
        end case;
    end process;
    add_ln52_fu_392_p2 <= std_logic_vector(unsigned(i_0_fu_152) + unsigned(ap_const_lv64_10));
    add_ln55_10_fu_768_p2 <= std_logic_vector(unsigned(lshr_ln55_22_reg_1024) + unsigned(lshr_ln55_9_reg_1019));
    add_ln55_11_fu_772_p2 <= std_logic_vector(unsigned(lshr_ln55_23_reg_1034) + unsigned(lshr_ln55_10_reg_1029));
    add_ln55_12_fu_776_p2 <= std_logic_vector(unsigned(lshr_ln55_24_reg_1044) + unsigned(lshr_ln55_11_reg_1039));
    add_ln55_13_fu_780_p2 <= std_logic_vector(unsigned(lshr_ln55_26_reg_1054) + unsigned(lshr_ln55_25_reg_1049));
    add_ln55_14_fu_784_p2 <= std_logic_vector(unsigned(lshr_ln55_27_reg_1064) + unsigned(lshr_ln55_13_reg_1059));
    add_ln55_15_fu_788_p2 <= std_logic_vector(unsigned(lshr_ln55_28_reg_1074) + unsigned(lshr_ln55_14_reg_1069));
    add_ln55_1_fu_732_p2 <= std_logic_vector(unsigned(lshr_ln55_1_reg_934) + unsigned(lshr_ln_reg_924));
    add_ln55_2_fu_736_p2 <= std_logic_vector(unsigned(lshr_ln55_12_reg_944) + unsigned(lshr_ln55_s_reg_939));
    add_ln55_3_fu_740_p2 <= std_logic_vector(unsigned(lshr_ln55_15_reg_954) + unsigned(lshr_ln55_2_reg_949));
    add_ln55_4_fu_744_p2 <= std_logic_vector(unsigned(lshr_ln55_16_reg_964) + unsigned(lshr_ln55_3_reg_959));
    add_ln55_5_fu_748_p2 <= std_logic_vector(unsigned(lshr_ln55_17_reg_974) + unsigned(lshr_ln55_4_reg_969));
    add_ln55_6_fu_752_p2 <= std_logic_vector(unsigned(lshr_ln55_18_reg_984) + unsigned(lshr_ln55_5_reg_979));
    add_ln55_7_fu_756_p2 <= std_logic_vector(unsigned(lshr_ln55_19_reg_994) + unsigned(lshr_ln55_6_reg_989));
    add_ln55_8_fu_760_p2 <= std_logic_vector(unsigned(lshr_ln55_20_reg_1004) + unsigned(lshr_ln55_7_reg_999));
    add_ln55_9_fu_764_p2 <= std_logic_vector(unsigned(lshr_ln55_21_reg_1014) + unsigned(lshr_ln55_8_reg_1009));
    add_ln55_fu_728_p2 <= std_logic_vector(unsigned(trunc_ln55_1_reg_929) + unsigned(trunc_ln55_reg_919));
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_01001_assign_proc : process(ap_enable_reg_pp0_iter2, m_axi_gmem0_RVALID, icmp_ln52_reg_855, m_axi_gmem1_RVALID)
    begin
                ap_block_pp0_stage0_01001 <= ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (((icmp_ln52_reg_855 = ap_const_lv1_0) and (m_axi_gmem0_RVALID = ap_const_logic_0)) or ((icmp_ln52_reg_855 = ap_const_lv1_0) and (m_axi_gmem1_RVALID = ap_const_logic_0))));
    end process;


    ap_block_pp0_stage0_11001_assign_proc : process(ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter4, m_axi_gmem0_WREADY, m_axi_gmem0_RVALID, icmp_ln52_reg_855, m_axi_gmem1_RVALID)
    begin
                ap_block_pp0_stage0_11001 <= (((m_axi_gmem0_WREADY = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (((icmp_ln52_reg_855 = ap_const_lv1_0) and (m_axi_gmem0_RVALID = ap_const_logic_0)) or ((icmp_ln52_reg_855 = ap_const_lv1_0) and (m_axi_gmem1_RVALID = ap_const_logic_0)))));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter4, m_axi_gmem0_WREADY, m_axi_gmem0_RVALID, icmp_ln52_reg_855, m_axi_gmem1_RVALID)
    begin
                ap_block_pp0_stage0_subdone <= (((m_axi_gmem0_WREADY = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (((icmp_ln52_reg_855 = ap_const_lv1_0) and (m_axi_gmem0_RVALID = ap_const_logic_0)) or ((icmp_ln52_reg_855 = ap_const_lv1_0) and (m_axi_gmem1_RVALID = ap_const_logic_0)))));
    end process;

        ap_block_state1_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state3_pp0_stage0_iter2_assign_proc : process(m_axi_gmem0_RVALID, icmp_ln52_reg_855, m_axi_gmem1_RVALID)
    begin
                ap_block_state3_pp0_stage0_iter2 <= (((icmp_ln52_reg_855 = ap_const_lv1_0) and (m_axi_gmem0_RVALID = ap_const_logic_0)) or ((icmp_ln52_reg_855 = ap_const_lv1_0) and (m_axi_gmem1_RVALID = ap_const_logic_0)));
    end process;

        ap_block_state4_pp0_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_1057_assign_proc : process(ap_enable_reg_pp0_iter1, icmp_ln52_15_fu_387_p2, icmp_ln52_14_fu_376_p2, icmp_ln52_13_fu_365_p2, icmp_ln52_12_fu_354_p2, icmp_ln52_11_fu_343_p2, icmp_ln52_10_fu_332_p2, icmp_ln52_9_fu_321_p2, icmp_ln52_8_fu_310_p2, icmp_ln52_7_fu_299_p2, icmp_ln52_6_fu_288_p2, icmp_ln52_5_fu_277_p2, icmp_ln52_4_fu_266_p2, icmp_ln52_3_fu_255_p2, icmp_ln52_2_fu_244_p2, icmp_ln52_1_fu_233_p2, icmp_ln52_fu_222_p2)
    begin
                ap_condition_1057 <= ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln52_fu_222_p2 = ap_const_lv1_0) and (icmp_ln52_1_fu_233_p2 = ap_const_lv1_0) and (icmp_ln52_2_fu_244_p2 = ap_const_lv1_0) and (icmp_ln52_3_fu_255_p2 = ap_const_lv1_0) and (icmp_ln52_4_fu_266_p2 = ap_const_lv1_0) and (icmp_ln52_5_fu_277_p2 = ap_const_lv1_0) and (icmp_ln52_6_fu_288_p2 = ap_const_lv1_0) and (icmp_ln52_7_fu_299_p2 = ap_const_lv1_0) and (icmp_ln52_8_fu_310_p2 = ap_const_lv1_0) and (icmp_ln52_9_fu_321_p2 = ap_const_lv1_0) and (icmp_ln52_10_fu_332_p2 = ap_const_lv1_0) and (icmp_ln52_11_fu_343_p2 = ap_const_lv1_0) and (icmp_ln52_12_fu_354_p2 = ap_const_lv1_0) and (icmp_ln52_13_fu_365_p2 = ap_const_lv1_0) and (icmp_ln52_14_fu_376_p2 = ap_const_lv1_0) and (icmp_ln52_15_fu_387_p2 = ap_const_lv1_0));
    end process;


    ap_condition_exit_pp0_iter1_stage0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_subdone, icmp_ln52_15_fu_387_p2, icmp_ln52_14_fu_376_p2, icmp_ln52_13_fu_365_p2, icmp_ln52_12_fu_354_p2, icmp_ln52_11_fu_343_p2, icmp_ln52_10_fu_332_p2, icmp_ln52_9_fu_321_p2, icmp_ln52_8_fu_310_p2, icmp_ln52_7_fu_299_p2, icmp_ln52_6_fu_288_p2, icmp_ln52_5_fu_277_p2, icmp_ln52_4_fu_266_p2, icmp_ln52_3_fu_255_p2, icmp_ln52_2_fu_244_p2, icmp_ln52_1_fu_233_p2, icmp_ln52_fu_222_p2)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and ((icmp_ln52_fu_222_p2 = ap_const_lv1_1) or ((icmp_ln52_1_fu_233_p2 = ap_const_lv1_1) or ((icmp_ln52_2_fu_244_p2 = ap_const_lv1_1) or ((icmp_ln52_3_fu_255_p2 = ap_const_lv1_1) or ((icmp_ln52_4_fu_266_p2 = ap_const_lv1_1) or ((icmp_ln52_5_fu_277_p2 = ap_const_lv1_1) or ((icmp_ln52_6_fu_288_p2 = ap_const_lv1_1) or ((icmp_ln52_7_fu_299_p2 = ap_const_lv1_1) or ((icmp_ln52_8_fu_310_p2 = ap_const_lv1_1) or ((icmp_ln52_9_fu_321_p2 = ap_const_lv1_1) or ((icmp_ln52_10_fu_332_p2 = ap_const_lv1_1) or ((icmp_ln52_11_fu_343_p2 = ap_const_lv1_1) or ((icmp_ln52_12_fu_354_p2 = ap_const_lv1_1) or ((icmp_ln52_13_fu_365_p2 = ap_const_lv1_1) or ((icmp_ln52_14_fu_376_p2 = ap_const_lv1_1) or (icmp_ln52_15_fu_387_p2 = ap_const_lv1_1)))))))))))))))))) then 
            ap_condition_exit_pp0_iter1_stage0 <= ap_const_logic_1;
        else 
            ap_condition_exit_pp0_iter1_stage0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_condition_exit_pp0_iter3_stage0_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_subdone, icmp_ln52_reg_855_pp0_iter2_reg, icmp_ln52_1_reg_859_pp0_iter2_reg, icmp_ln52_2_reg_863_pp0_iter2_reg, icmp_ln52_3_reg_867_pp0_iter2_reg, icmp_ln52_4_reg_871_pp0_iter2_reg, icmp_ln52_5_reg_875_pp0_iter2_reg, icmp_ln52_6_reg_879_pp0_iter2_reg, icmp_ln52_7_reg_883_pp0_iter2_reg, icmp_ln52_8_reg_887_pp0_iter2_reg, icmp_ln52_9_reg_891_pp0_iter2_reg, icmp_ln52_10_reg_895_pp0_iter2_reg, icmp_ln52_11_reg_899_pp0_iter2_reg, icmp_ln52_12_reg_903_pp0_iter2_reg, icmp_ln52_13_reg_907_pp0_iter2_reg, icmp_ln52_14_reg_911_pp0_iter2_reg, icmp_ln52_15_reg_915_pp0_iter2_reg)
    begin
        if (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and ((icmp_ln52_reg_855_pp0_iter2_reg = ap_const_lv1_1) or ((icmp_ln52_1_reg_859_pp0_iter2_reg = ap_const_lv1_1) or ((icmp_ln52_2_reg_863_pp0_iter2_reg = ap_const_lv1_1) or ((icmp_ln52_3_reg_867_pp0_iter2_reg = ap_const_lv1_1) or ((icmp_ln52_4_reg_871_pp0_iter2_reg = ap_const_lv1_1) or ((icmp_ln52_5_reg_875_pp0_iter2_reg = ap_const_lv1_1) or ((icmp_ln52_6_reg_879_pp0_iter2_reg = ap_const_lv1_1) or ((icmp_ln52_7_reg_883_pp0_iter2_reg = ap_const_lv1_1) or ((icmp_ln52_8_reg_887_pp0_iter2_reg = ap_const_lv1_1) or ((icmp_ln52_9_reg_891_pp0_iter2_reg = ap_const_lv1_1) or ((icmp_ln52_10_reg_895_pp0_iter2_reg = ap_const_lv1_1) or ((icmp_ln52_11_reg_899_pp0_iter2_reg = ap_const_lv1_1) or ((icmp_ln52_12_reg_903_pp0_iter2_reg = ap_const_lv1_1) or ((icmp_ln52_13_reg_907_pp0_iter2_reg = ap_const_lv1_1) or ((icmp_ln52_15_reg_915_pp0_iter2_reg = ap_const_lv1_1) or (icmp_ln52_14_reg_911_pp0_iter2_reg = ap_const_lv1_1)))))))))))))))))) then 
            ap_condition_exit_pp0_iter3_stage0 <= ap_const_logic_1;
        else 
            ap_condition_exit_pp0_iter3_stage0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_int_assign_proc : process(ap_block_pp0_stage0_subdone, ap_done_reg, ap_loop_exit_ready_pp0_iter3_reg)
    begin
        if (((ap_loop_exit_ready_pp0_iter3_reg = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then 
            ap_done_int <= ap_const_logic_1;
        else 
            ap_done_int <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_reg_pp0_iter0 <= ap_start_int;
    ap_ext_blocking_cur_n <= (gmem1_blk_n_R and gmem0_blk_n_W and gmem0_blk_n_R);
    ap_ext_blocking_n <= (ap_ext_blocking_cur_n and ap_const_logic_1);

    ap_idle_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_idle_pp0, ap_start_int)
    begin
        if (((ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_start_int = ap_const_logic_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4)
    begin
        if (((ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;

    ap_int_blocking_n <= (ap_const_logic_1 and ap_const_logic_1);
    ap_loop_exit_ready <= ap_condition_exit_pp0_iter1_stage0;

    ap_ready_int_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_subdone)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then 
            ap_ready_int <= ap_const_logic_1;
        else 
            ap_ready_int <= ap_const_logic_0;
        end if; 
    end process;

    ap_str_blocking_n <= (ap_const_logic_1 and ap_const_logic_1);

    gmem0_blk_n_R_assign_proc : process(ap_enable_reg_pp0_iter2, m_axi_gmem0_RVALID, icmp_ln52_reg_855, ap_block_pp0_stage0)
    begin
        if (((icmp_ln52_reg_855 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            gmem0_blk_n_R <= m_axi_gmem0_RVALID;
        else 
            gmem0_blk_n_R <= ap_const_logic_1;
        end if; 
    end process;


    gmem0_blk_n_W_assign_proc : process(ap_enable_reg_pp0_iter4, m_axi_gmem0_WREADY, ap_block_pp0_stage0)
    begin
        if (((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            gmem0_blk_n_W <= m_axi_gmem0_WREADY;
        else 
            gmem0_blk_n_W <= ap_const_logic_1;
        end if; 
    end process;


    gmem1_blk_n_R_assign_proc : process(ap_enable_reg_pp0_iter2, icmp_ln52_reg_855, m_axi_gmem1_RVALID, ap_block_pp0_stage0)
    begin
        if (((icmp_ln52_reg_855 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            gmem1_blk_n_R <= m_axi_gmem1_RVALID;
        else 
            gmem1_blk_n_R <= ap_const_logic_1;
        end if; 
    end process;

    icmp_ln52_10_fu_332_p2 <= "1" when (or_ln52_9_fu_326_p2 = zext_ln52_cast_reg_820) else "0";
    icmp_ln52_11_fu_343_p2 <= "1" when (or_ln52_10_fu_337_p2 = zext_ln52_cast_reg_820) else "0";
    icmp_ln52_12_fu_354_p2 <= "1" when (or_ln52_11_fu_348_p2 = zext_ln52_cast_reg_820) else "0";
    icmp_ln52_13_fu_365_p2 <= "1" when (or_ln52_12_fu_359_p2 = zext_ln52_cast_reg_820) else "0";
    icmp_ln52_14_fu_376_p2 <= "1" when (or_ln52_13_fu_370_p2 = zext_ln52_cast_reg_820) else "0";
    icmp_ln52_15_fu_387_p2 <= "1" when (or_ln52_14_fu_381_p2 = zext_ln52_cast_reg_820) else "0";
    icmp_ln52_1_fu_233_p2 <= "1" when (or_ln52_fu_227_p2 = zext_ln52_cast_reg_820) else "0";
    icmp_ln52_2_fu_244_p2 <= "1" when (or_ln52_1_fu_238_p2 = zext_ln52_cast_reg_820) else "0";
    icmp_ln52_3_fu_255_p2 <= "1" when (or_ln52_2_fu_249_p2 = zext_ln52_cast_reg_820) else "0";
    icmp_ln52_4_fu_266_p2 <= "1" when (or_ln52_3_fu_260_p2 = zext_ln52_cast_reg_820) else "0";
    icmp_ln52_5_fu_277_p2 <= "1" when (or_ln52_4_fu_271_p2 = zext_ln52_cast_reg_820) else "0";
    icmp_ln52_6_fu_288_p2 <= "1" when (or_ln52_5_fu_282_p2 = zext_ln52_cast_reg_820) else "0";
    icmp_ln52_7_fu_299_p2 <= "1" when (or_ln52_6_fu_293_p2 = zext_ln52_cast_reg_820) else "0";
    icmp_ln52_8_fu_310_p2 <= "1" when (or_ln52_7_fu_304_p2 = zext_ln52_cast_reg_820) else "0";
    icmp_ln52_9_fu_321_p2 <= "1" when (or_ln52_8_fu_315_p2 = zext_ln52_cast_reg_820) else "0";
    icmp_ln52_fu_222_p2 <= "1" when (i_0_fu_152 = zext_ln52_cast_reg_820) else "0";
    m_axi_gmem0_ARADDR <= ap_const_lv64_0;
    m_axi_gmem0_ARBURST <= ap_const_lv2_0;
    m_axi_gmem0_ARCACHE <= ap_const_lv4_0;
    m_axi_gmem0_ARID <= ap_const_lv1_0;
    m_axi_gmem0_ARLEN <= ap_const_lv32_0;
    m_axi_gmem0_ARLOCK <= ap_const_lv2_0;
    m_axi_gmem0_ARPROT <= ap_const_lv3_0;
    m_axi_gmem0_ARQOS <= ap_const_lv4_0;
    m_axi_gmem0_ARREGION <= ap_const_lv4_0;
    m_axi_gmem0_ARSIZE <= ap_const_lv3_0;
    m_axi_gmem0_ARUSER <= ap_const_lv1_0;
    m_axi_gmem0_ARVALID <= ap_const_logic_0;
    m_axi_gmem0_AWADDR <= ap_const_lv64_0;
    m_axi_gmem0_AWBURST <= ap_const_lv2_0;
    m_axi_gmem0_AWCACHE <= ap_const_lv4_0;
    m_axi_gmem0_AWID <= ap_const_lv1_0;
    m_axi_gmem0_AWLEN <= ap_const_lv32_0;
    m_axi_gmem0_AWLOCK <= ap_const_lv2_0;
    m_axi_gmem0_AWPROT <= ap_const_lv3_0;
    m_axi_gmem0_AWQOS <= ap_const_lv4_0;
    m_axi_gmem0_AWREGION <= ap_const_lv4_0;
    m_axi_gmem0_AWSIZE <= ap_const_lv3_0;
    m_axi_gmem0_AWUSER <= ap_const_lv1_0;
    m_axi_gmem0_AWVALID <= ap_const_logic_0;
    m_axi_gmem0_BREADY <= ap_const_logic_0;

    m_axi_gmem0_RREADY_assign_proc : process(ap_enable_reg_pp0_iter2, icmp_ln52_reg_855, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln52_reg_855 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            m_axi_gmem0_RREADY <= ap_const_logic_1;
        else 
            m_axi_gmem0_RREADY <= ap_const_logic_0;
        end if; 
    end process;

    m_axi_gmem0_WDATA <= (((((((((((((((add_ln55_15_reg_1159 & add_ln55_14_reg_1154) & add_ln55_13_reg_1149) & add_ln55_12_reg_1144) & add_ln55_11_reg_1139) & add_ln55_10_reg_1134) & add_ln55_9_reg_1129) & add_ln55_8_reg_1124) & add_ln55_7_reg_1119) & add_ln55_6_reg_1114) & add_ln55_5_reg_1109) & add_ln55_4_reg_1104) & add_ln55_3_reg_1099) & add_ln55_2_reg_1094) & add_ln55_1_reg_1089) & add_ln55_reg_1084);
    m_axi_gmem0_WID <= ap_const_lv1_0;
    m_axi_gmem0_WLAST <= ap_const_logic_0;
    m_axi_gmem0_WSTRB <= ap_const_lv64_FFFFFFFFFFFFFFFF;
    m_axi_gmem0_WUSER <= ap_const_lv1_0;

    m_axi_gmem0_WVALID_assign_proc : process(ap_enable_reg_pp0_iter4, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            m_axi_gmem0_WVALID <= ap_const_logic_1;
        else 
            m_axi_gmem0_WVALID <= ap_const_logic_0;
        end if; 
    end process;

    m_axi_gmem1_ARADDR <= ap_const_lv64_0;
    m_axi_gmem1_ARBURST <= ap_const_lv2_0;
    m_axi_gmem1_ARCACHE <= ap_const_lv4_0;
    m_axi_gmem1_ARID <= ap_const_lv1_0;
    m_axi_gmem1_ARLEN <= ap_const_lv32_0;
    m_axi_gmem1_ARLOCK <= ap_const_lv2_0;
    m_axi_gmem1_ARPROT <= ap_const_lv3_0;
    m_axi_gmem1_ARQOS <= ap_const_lv4_0;
    m_axi_gmem1_ARREGION <= ap_const_lv4_0;
    m_axi_gmem1_ARSIZE <= ap_const_lv3_0;
    m_axi_gmem1_ARUSER <= ap_const_lv1_0;
    m_axi_gmem1_ARVALID <= ap_const_logic_0;
    m_axi_gmem1_AWADDR <= ap_const_lv64_0;
    m_axi_gmem1_AWBURST <= ap_const_lv2_0;
    m_axi_gmem1_AWCACHE <= ap_const_lv4_0;
    m_axi_gmem1_AWID <= ap_const_lv1_0;
    m_axi_gmem1_AWLEN <= ap_const_lv32_0;
    m_axi_gmem1_AWLOCK <= ap_const_lv2_0;
    m_axi_gmem1_AWPROT <= ap_const_lv3_0;
    m_axi_gmem1_AWQOS <= ap_const_lv4_0;
    m_axi_gmem1_AWREGION <= ap_const_lv4_0;
    m_axi_gmem1_AWSIZE <= ap_const_lv3_0;
    m_axi_gmem1_AWUSER <= ap_const_lv1_0;
    m_axi_gmem1_AWVALID <= ap_const_logic_0;
    m_axi_gmem1_BREADY <= ap_const_logic_0;

    m_axi_gmem1_RREADY_assign_proc : process(ap_enable_reg_pp0_iter2, icmp_ln52_reg_855, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln52_reg_855 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            m_axi_gmem1_RREADY <= ap_const_logic_1;
        else 
            m_axi_gmem1_RREADY <= ap_const_logic_0;
        end if; 
    end process;

    m_axi_gmem1_WDATA <= ap_const_lv512_lc_1;
    m_axi_gmem1_WID <= ap_const_lv1_0;
    m_axi_gmem1_WLAST <= ap_const_logic_0;
    m_axi_gmem1_WSTRB <= ap_const_lv64_0;
    m_axi_gmem1_WUSER <= ap_const_lv1_0;
    m_axi_gmem1_WVALID <= ap_const_logic_0;
    or_ln52_10_fu_337_p2 <= (i_0_fu_152 or ap_const_lv64_B);
    or_ln52_11_fu_348_p2 <= (i_0_fu_152 or ap_const_lv64_C);
    or_ln52_12_fu_359_p2 <= (i_0_fu_152 or ap_const_lv64_D);
    or_ln52_13_fu_370_p2 <= (i_0_fu_152 or ap_const_lv64_E);
    or_ln52_14_fu_381_p2 <= (i_0_fu_152 or ap_const_lv64_F);
    or_ln52_1_fu_238_p2 <= (i_0_fu_152 or ap_const_lv64_2);
    or_ln52_2_fu_249_p2 <= (i_0_fu_152 or ap_const_lv64_3);
    or_ln52_3_fu_260_p2 <= (i_0_fu_152 or ap_const_lv64_4);
    or_ln52_4_fu_271_p2 <= (i_0_fu_152 or ap_const_lv64_5);
    or_ln52_5_fu_282_p2 <= (i_0_fu_152 or ap_const_lv64_6);
    or_ln52_6_fu_293_p2 <= (i_0_fu_152 or ap_const_lv64_7);
    or_ln52_7_fu_304_p2 <= (i_0_fu_152 or ap_const_lv64_8);
    or_ln52_8_fu_315_p2 <= (i_0_fu_152 or ap_const_lv64_9);
    or_ln52_9_fu_326_p2 <= (i_0_fu_152 or ap_const_lv64_A);
    or_ln52_fu_227_p2 <= (i_0_fu_152 or ap_const_lv64_1);
    trunc_ln55_1_fu_429_p1 <= m_axi_gmem1_RDATA(32 - 1 downto 0);
    trunc_ln55_fu_415_p1 <= m_axi_gmem0_RDATA(32 - 1 downto 0);
    zext_ln52_cast_fu_198_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(zext_ln52),64));
end behav;
