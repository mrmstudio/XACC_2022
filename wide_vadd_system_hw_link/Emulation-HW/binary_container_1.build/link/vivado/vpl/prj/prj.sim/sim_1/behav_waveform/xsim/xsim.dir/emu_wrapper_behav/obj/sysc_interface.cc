#pragma GCC diagnostic ignored "-Wdeprecated-declarations" 
#include "xsim.dir/emu_wrapper_behav/obj/sysc_interface.h"
#include <map>
#include <list>


extern "C" { std::vector<void*> *_glb_hdl_sc_channel_map; } 



extern "C"
    void call_HDL_SC_WRITE_bv_1(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<1, sc_dt::sc_bv<1> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_2(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<2, sc_dt::sc_bv<2> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_3(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<3, sc_dt::sc_bv<3> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_4(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<4, sc_dt::sc_bv<4> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_5(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<5, sc_dt::sc_bv<5> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_6(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<6, sc_dt::sc_bv<6> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_8(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<8, sc_dt::sc_bv<8> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_32(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<32, sc_dt::sc_bv<32> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_34(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<34, sc_dt::sc_bv<34> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_35(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<35, sc_dt::sc_bv<35> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_64(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<64, sc_dt::sc_bv<64> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_512(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<512, sc_dt::sc_bv<512> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_int(unsigned int sc_net_index, char* pval)
    {
          int val = *((int*)(pval));
          ((xsim_sc_channel<0, int>*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(val);
    } 



extern "C"
    void call_HDL_SC_WRITE_bit(unsigned int sc_net_index, char* pval)
    {
            sc_dt::sc_bit val  =  (sc_dt::sc_bit)((*((int*)(pval)) & 0x1));
          ((xsim_sc_channel<0, sc_dt::sc_bit>*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(val);
    } 



extern "C"
    void call_HDL_SC_WRITE_logic(unsigned int sc_net_index, char* pval)
    {
          sc_dt::sc_logic val  =  (sc_dt::sc_logic_value_t) (((*((int*)(pval)+1) & 0x1) << 1) | (*((int*)(pval)) & 0x1));
          ((xsim_sc_channel<0, sc_dt::sc_logic>*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(val);
    } 



extern "C"
    void call_HDL_SC_WRITE_bool(unsigned int sc_net_index, char* pval)
    {
          bool val = *((bool*)(pval));
          ((xsim_sc_channel<0, bool>*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(val);
    } 



extern "C"
    void implicit_HDL_SCinstantiate()
    {
        _glb_hdl_sc_channel_map = new std::vector<void*> ();
        sc_inst_1 = new pfm_dynamic_dpa_hub_0(".emu_wrapper.emu_i.dynamic_region.System_DPA.dpa_hub");
        sc_inst_1->xsim_set_dbg_index(532);
        xsim_sc_channel<0, bool > *p_1_s_aximm_clk = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_aximm_clk.bind(*p_1_s_aximm_clk);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_aximm_clk);
        xsim_sc_channel<0, bool > *p_1_s_aximm_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_aximm_aresetn.bind(*p_1_s_aximm_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_aximm_aresetn);
        xsim_sc_channel<0, bool > *p_1_trace_clk = new xsim_sc_channel<0, bool >();
        sc_inst_1->trace_clk.bind(*p_1_trace_clk);
        (*_glb_hdl_sc_channel_map).push_back(p_1_trace_clk);
        xsim_sc_channel<0, bool > *p_1_trace_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_1->trace_aresetn.bind(*p_1_trace_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_1_trace_aresetn);
        xsim_sc_channel<0, bool > *p_1_axilite_clk = new xsim_sc_channel<0, bool >();
        sc_inst_1->axilite_clk.bind(*p_1_axilite_clk);
        (*_glb_hdl_sc_channel_map).push_back(p_1_axilite_clk);
        xsim_sc_channel<0, bool > *p_1_axilite_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_1->axilite_aresetn.bind(*p_1_axilite_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_1_axilite_aresetn);
        xsim_sc_channel<0, bool > *p_1_trace_tready0 = new xsim_sc_channel<0, bool >();
        sc_inst_1->trace_tready0.bind(*p_1_trace_tready0);
        p_1_trace_tready0->set_sv_netview_offsetfromdp(6281864);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_1_trace_tdata0 = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_1->trace_tdata0.bind(*p_1_trace_tdata0);
        (*_glb_hdl_sc_channel_map).push_back(p_1_trace_tdata0);
        xsim_sc_channel<0, bool > *p_1_trace_tlast0 = new xsim_sc_channel<0, bool >();
        sc_inst_1->trace_tlast0.bind(*p_1_trace_tlast0);
        (*_glb_hdl_sc_channel_map).push_back(p_1_trace_tlast0);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_1_trace_tid0 = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_1->trace_tid0.bind(*p_1_trace_tid0);
        (*_glb_hdl_sc_channel_map).push_back(p_1_trace_tid0);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_1_trace_tdest0 = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_1->trace_tdest0.bind(*p_1_trace_tdest0);
        (*_glb_hdl_sc_channel_map).push_back(p_1_trace_tdest0);
        xsim_sc_channel<0, bool > *p_1_trace_tvalid0 = new xsim_sc_channel<0, bool >();
        sc_inst_1->trace_tvalid0.bind(*p_1_trace_tvalid0);
        (*_glb_hdl_sc_channel_map).push_back(p_1_trace_tvalid0);
        xsim_sc_channel<0, bool > *p_1_trace_tready1 = new xsim_sc_channel<0, bool >();
        sc_inst_1->trace_tready1.bind(*p_1_trace_tready1);
        p_1_trace_tready1->set_sv_netview_offsetfromdp(6282200);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_1_trace_tdata1 = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_1->trace_tdata1.bind(*p_1_trace_tdata1);
        p_1_trace_tdata1->set_sv_netview_offsetfromdp(6282256);
        xsim_sc_channel<0, bool > *p_1_trace_tlast1 = new xsim_sc_channel<0, bool >();
        sc_inst_1->trace_tlast1.bind(*p_1_trace_tlast1);
        (*_glb_hdl_sc_channel_map).push_back(p_1_trace_tlast1);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_1_trace_tid1 = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_1->trace_tid1.bind(*p_1_trace_tid1);
        (*_glb_hdl_sc_channel_map).push_back(p_1_trace_tid1);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_1_trace_tdest1 = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_1->trace_tdest1.bind(*p_1_trace_tdest1);
        (*_glb_hdl_sc_channel_map).push_back(p_1_trace_tdest1);
        xsim_sc_channel<0, bool > *p_1_trace_tvalid1 = new xsim_sc_channel<0, bool >();
        sc_inst_1->trace_tvalid1.bind(*p_1_trace_tvalid1);
        (*_glb_hdl_sc_channel_map).push_back(p_1_trace_tvalid1);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_1_trace_tdata2 = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_1->trace_tdata2.bind(*p_1_trace_tdata2);
        (*_glb_hdl_sc_channel_map).push_back(p_1_trace_tdata2);
        xsim_sc_channel<0, bool > *p_1_trace_tready2 = new xsim_sc_channel<0, bool >();
        sc_inst_1->trace_tready2.bind(*p_1_trace_tready2);
        p_1_trace_tready2->set_sv_netview_offsetfromdp(6282592);
        xsim_sc_channel<0, bool > *p_1_trace_tlast2 = new xsim_sc_channel<0, bool >();
        sc_inst_1->trace_tlast2.bind(*p_1_trace_tlast2);
        (*_glb_hdl_sc_channel_map).push_back(p_1_trace_tlast2);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_1_trace_tid2 = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_1->trace_tid2.bind(*p_1_trace_tid2);
        (*_glb_hdl_sc_channel_map).push_back(p_1_trace_tid2);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_1_trace_tdest2 = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_1->trace_tdest2.bind(*p_1_trace_tdest2);
        (*_glb_hdl_sc_channel_map).push_back(p_1_trace_tdest2);
        xsim_sc_channel<0, bool > *p_1_trace_tvalid2 = new xsim_sc_channel<0, bool >();
        sc_inst_1->trace_tvalid2.bind(*p_1_trace_tvalid2);
        (*_glb_hdl_sc_channel_map).push_back(p_1_trace_tvalid2);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_1_trace_tdata3 = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_1->trace_tdata3.bind(*p_1_trace_tdata3);
        (*_glb_hdl_sc_channel_map).push_back(p_1_trace_tdata3);
        xsim_sc_channel<0, bool > *p_1_trace_tready3 = new xsim_sc_channel<0, bool >();
        sc_inst_1->trace_tready3.bind(*p_1_trace_tready3);
        p_1_trace_tready3->set_sv_netview_offsetfromdp(6282928);
        xsim_sc_channel<0, bool > *p_1_trace_tlast3 = new xsim_sc_channel<0, bool >();
        sc_inst_1->trace_tlast3.bind(*p_1_trace_tlast3);
        (*_glb_hdl_sc_channel_map).push_back(p_1_trace_tlast3);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_1_trace_tid3 = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_1->trace_tid3.bind(*p_1_trace_tid3);
        (*_glb_hdl_sc_channel_map).push_back(p_1_trace_tid3);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_1_trace_tdest3 = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_1->trace_tdest3.bind(*p_1_trace_tdest3);
        (*_glb_hdl_sc_channel_map).push_back(p_1_trace_tdest3);
        xsim_sc_channel<0, bool > *p_1_trace_tvalid3 = new xsim_sc_channel<0, bool >();
        sc_inst_1->trace_tvalid3.bind(*p_1_trace_tvalid3);
        (*_glb_hdl_sc_channel_map).push_back(p_1_trace_tvalid3);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_1_trace_tdata4 = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_1->trace_tdata4.bind(*p_1_trace_tdata4);
        (*_glb_hdl_sc_channel_map).push_back(p_1_trace_tdata4);
        xsim_sc_channel<0, bool > *p_1_trace_tready4 = new xsim_sc_channel<0, bool >();
        sc_inst_1->trace_tready4.bind(*p_1_trace_tready4);
        p_1_trace_tready4->set_sv_netview_offsetfromdp(6283264);
        xsim_sc_channel<0, bool > *p_1_trace_tlast4 = new xsim_sc_channel<0, bool >();
        sc_inst_1->trace_tlast4.bind(*p_1_trace_tlast4);
        (*_glb_hdl_sc_channel_map).push_back(p_1_trace_tlast4);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_1_trace_tid4 = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_1->trace_tid4.bind(*p_1_trace_tid4);
        (*_glb_hdl_sc_channel_map).push_back(p_1_trace_tid4);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_1_trace_tdest4 = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_1->trace_tdest4.bind(*p_1_trace_tdest4);
        (*_glb_hdl_sc_channel_map).push_back(p_1_trace_tdest4);
        xsim_sc_channel<0, bool > *p_1_trace_tvalid4 = new xsim_sc_channel<0, bool >();
        sc_inst_1->trace_tvalid4.bind(*p_1_trace_tvalid4);
        (*_glb_hdl_sc_channel_map).push_back(p_1_trace_tvalid4);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_1_s_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_1->s_axi_awaddr.bind(*p_1_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_axi_awaddr);
        xsim_sc_channel<0, bool > *p_1_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axi_awvalid.bind(*p_1_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_1_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axi_awready.bind(*p_1_s_axi_awready);
        p_1_s_axi_awready->set_sv_netview_offsetfromdp(6283656);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_1_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_1->s_axi_wdata.bind(*p_1_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_1_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_1->s_axi_wstrb.bind(*p_1_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_1_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axi_wvalid.bind(*p_1_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_1_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axi_wready.bind(*p_1_s_axi_wready);
        p_1_s_axi_wready->set_sv_netview_offsetfromdp(6283880);
        xsim_sc_channel<0, bool > *p_1_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axi_bvalid.bind(*p_1_s_axi_bvalid);
        p_1_s_axi_bvalid->set_sv_netview_offsetfromdp(6283936);
        xsim_sc_channel<0, bool > *p_1_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axi_bready.bind(*p_1_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_axi_bready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_1_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_1->s_axi_bresp.bind(*p_1_s_axi_bresp);
        p_1_s_axi_bresp->set_sv_netview_offsetfromdp(6284048);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_1_s_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_1->s_axi_araddr.bind(*p_1_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_axi_araddr);
        xsim_sc_channel<0, bool > *p_1_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axi_arvalid.bind(*p_1_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_1_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axi_arready.bind(*p_1_s_axi_arready);
        p_1_s_axi_arready->set_sv_netview_offsetfromdp(6284216);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_1_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_1->s_axi_rdata.bind(*p_1_s_axi_rdata);
        p_1_s_axi_rdata->set_sv_netview_offsetfromdp(6284272);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_1_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_1->s_axi_rresp.bind(*p_1_s_axi_rresp);
        p_1_s_axi_rresp->set_sv_netview_offsetfromdp(6284328);
        xsim_sc_channel<0, bool > *p_1_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axi_rvalid.bind(*p_1_s_axi_rvalid);
        p_1_s_axi_rvalid->set_sv_netview_offsetfromdp(6284384);
        xsim_sc_channel<0, bool > *p_1_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axi_rready.bind(*p_1_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_axi_rready);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_1_s_axihub_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_1->s_axihub_awaddr.bind(*p_1_s_axihub_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_axihub_awaddr);
        xsim_sc_channel<0, bool > *p_1_s_axihub_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axihub_awvalid.bind(*p_1_s_axihub_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_axihub_awvalid);
        xsim_sc_channel<0, bool > *p_1_s_axihub_awready = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axihub_awready.bind(*p_1_s_axihub_awready);
        p_1_s_axihub_awready->set_sv_netview_offsetfromdp(6284608);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_1_s_axihub_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_1->s_axihub_wdata.bind(*p_1_s_axihub_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_axihub_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_1_s_axihub_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_1->s_axihub_wstrb.bind(*p_1_s_axihub_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_axihub_wstrb);
        xsim_sc_channel<0, bool > *p_1_s_axihub_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axihub_wvalid.bind(*p_1_s_axihub_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_axihub_wvalid);
        xsim_sc_channel<0, bool > *p_1_s_axihub_wready = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axihub_wready.bind(*p_1_s_axihub_wready);
        p_1_s_axihub_wready->set_sv_netview_offsetfromdp(6284832);
        xsim_sc_channel<0, bool > *p_1_s_axihub_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axihub_bvalid.bind(*p_1_s_axihub_bvalid);
        p_1_s_axihub_bvalid->set_sv_netview_offsetfromdp(6284888);
        xsim_sc_channel<0, bool > *p_1_s_axihub_bready = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axihub_bready.bind(*p_1_s_axihub_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_axihub_bready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_1_s_axihub_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_1->s_axihub_bresp.bind(*p_1_s_axihub_bresp);
        p_1_s_axihub_bresp->set_sv_netview_offsetfromdp(6285000);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_1_s_axihub_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_1->s_axihub_araddr.bind(*p_1_s_axihub_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_axihub_araddr);
        xsim_sc_channel<0, bool > *p_1_s_axihub_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axihub_arvalid.bind(*p_1_s_axihub_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_axihub_arvalid);
        xsim_sc_channel<0, bool > *p_1_s_axihub_arready = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axihub_arready.bind(*p_1_s_axihub_arready);
        p_1_s_axihub_arready->set_sv_netview_offsetfromdp(6285168);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_1_s_axihub_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_1->s_axihub_rdata.bind(*p_1_s_axihub_rdata);
        p_1_s_axihub_rdata->set_sv_netview_offsetfromdp(6285224);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_1_s_axihub_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_1->s_axihub_rresp.bind(*p_1_s_axihub_rresp);
        p_1_s_axihub_rresp->set_sv_netview_offsetfromdp(6285280);
        xsim_sc_channel<0, bool > *p_1_s_axihub_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axihub_rvalid.bind(*p_1_s_axihub_rvalid);
        p_1_s_axihub_rvalid->set_sv_netview_offsetfromdp(6285336);
        xsim_sc_channel<0, bool > *p_1_s_axihub_rready = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axihub_rready.bind(*p_1_s_axihub_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_axihub_rready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_1_s_aximm_awaddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_1->s_aximm_awaddr.bind(*p_1_s_aximm_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_aximm_awaddr);
        xsim_sc_channel<0, bool > *p_1_s_aximm_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_aximm_awvalid.bind(*p_1_s_aximm_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_aximm_awvalid);
        xsim_sc_channel<0, bool > *p_1_s_aximm_awready = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_aximm_awready.bind(*p_1_s_aximm_awready);
        p_1_s_aximm_awready->set_sv_netview_offsetfromdp(6285560);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_1_s_aximm_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_1->s_aximm_awlen.bind(*p_1_s_aximm_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_aximm_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_1_s_aximm_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_1->s_aximm_awsize.bind(*p_1_s_aximm_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_aximm_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_1_s_aximm_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_1->s_aximm_awburst.bind(*p_1_s_aximm_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_aximm_awburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_1_s_aximm_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_1->s_aximm_awid.bind(*p_1_s_aximm_awid);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_aximm_awid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_1_s_aximm_wdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_1->s_aximm_wdata.bind(*p_1_s_aximm_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_aximm_wdata);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_1_s_aximm_wstrb = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_1->s_aximm_wstrb.bind(*p_1_s_aximm_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_aximm_wstrb);
        xsim_sc_channel<0, bool > *p_1_s_aximm_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_aximm_wvalid.bind(*p_1_s_aximm_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_aximm_wvalid);
        xsim_sc_channel<0, bool > *p_1_s_aximm_wready = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_aximm_wready.bind(*p_1_s_aximm_wready);
        p_1_s_aximm_wready->set_sv_netview_offsetfromdp(6286008);
        xsim_sc_channel<0, bool > *p_1_s_aximm_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_aximm_bvalid.bind(*p_1_s_aximm_bvalid);
        p_1_s_aximm_bvalid->set_sv_netview_offsetfromdp(6286064);
        xsim_sc_channel<0, bool > *p_1_s_aximm_bready = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_aximm_bready.bind(*p_1_s_aximm_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_aximm_bready);
        xsim_sc_channel<0, bool > *p_1_s_aximm_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_aximm_wlast.bind(*p_1_s_aximm_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_aximm_wlast);
        xsim_sc_channel<0, bool > *p_1_s_aximm_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_aximm_rlast.bind(*p_1_s_aximm_rlast);
        p_1_s_aximm_rlast->set_sv_netview_offsetfromdp(6286232);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_1_s_aximm_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_1->s_aximm_bresp.bind(*p_1_s_aximm_bresp);
        p_1_s_aximm_bresp->set_sv_netview_offsetfromdp(6286288);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_1_s_aximm_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_1->s_aximm_bid.bind(*p_1_s_aximm_bid);
        p_1_s_aximm_bid->set_sv_netview_offsetfromdp(6286344);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_1_s_aximm_araddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_1->s_aximm_araddr.bind(*p_1_s_aximm_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_aximm_araddr);
        xsim_sc_channel<0, bool > *p_1_s_aximm_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_aximm_arvalid.bind(*p_1_s_aximm_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_aximm_arvalid);
        xsim_sc_channel<0, bool > *p_1_s_aximm_arready = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_aximm_arready.bind(*p_1_s_aximm_arready);
        p_1_s_aximm_arready->set_sv_netview_offsetfromdp(6286512);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_1_s_aximm_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_1->s_aximm_arlen.bind(*p_1_s_aximm_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_aximm_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_1_s_aximm_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_1->s_aximm_arsize.bind(*p_1_s_aximm_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_aximm_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_1_s_aximm_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_1->s_aximm_arburst.bind(*p_1_s_aximm_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_aximm_arburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_1_s_aximm_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_1->s_aximm_arid.bind(*p_1_s_aximm_arid);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_aximm_arid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_1_s_aximm_rdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_1->s_aximm_rdata.bind(*p_1_s_aximm_rdata);
        p_1_s_aximm_rdata->set_sv_netview_offsetfromdp(6286792);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_1_s_aximm_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_1->s_aximm_rid.bind(*p_1_s_aximm_rid);
        p_1_s_aximm_rid->set_sv_netview_offsetfromdp(6286848);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_1_s_aximm_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_1->s_aximm_rresp.bind(*p_1_s_aximm_rresp);
        p_1_s_aximm_rresp->set_sv_netview_offsetfromdp(6286904);
        xsim_sc_channel<0, bool > *p_1_s_aximm_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_aximm_rvalid.bind(*p_1_s_aximm_rvalid);
        p_1_s_aximm_rvalid->set_sv_netview_offsetfromdp(6286960);
        xsim_sc_channel<0, bool > *p_1_s_aximm_rready = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_aximm_rready.bind(*p_1_s_aximm_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_aximm_rready);
        sc_inst_2 = new pfm_dynamic_dpa_mon0_0(".emu_wrapper.emu_i.dynamic_region.System_DPA.dpa_mon0");
        sc_inst_2->xsim_set_dbg_index(533);
        xsim_sc_channel<0, bool > *p_2_mon_clk = new xsim_sc_channel<0, bool >();
        sc_inst_2->mon_clk.bind(*p_2_mon_clk);
        (*_glb_hdl_sc_channel_map).push_back(p_2_mon_clk);
        xsim_sc_channel<0, bool > *p_2_mon_resetn = new xsim_sc_channel<0, bool >();
        sc_inst_2->mon_resetn.bind(*p_2_mon_resetn);
        (*_glb_hdl_sc_channel_map).push_back(p_2_mon_resetn);
        xsim_sc_channel<0, bool > *p_2_trace_clk = new xsim_sc_channel<0, bool >();
        sc_inst_2->trace_clk.bind(*p_2_trace_clk);
        (*_glb_hdl_sc_channel_map).push_back(p_2_trace_clk);
        xsim_sc_channel<0, bool > *p_2_trace_rst = new xsim_sc_channel<0, bool >();
        sc_inst_2->trace_rst.bind(*p_2_trace_rst);
        (*_glb_hdl_sc_channel_map).push_back(p_2_trace_rst);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_2_s_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_2->s_axi_awaddr.bind(*p_2_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_2_s_axi_awaddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_2_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_2->s_axi_awprot.bind(*p_2_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_2_s_axi_awprot);
        xsim_sc_channel<0, bool > *p_2_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_2->s_axi_awvalid.bind(*p_2_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_2_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_2_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_2->s_axi_awready.bind(*p_2_s_axi_awready);
        p_2_s_axi_awready->set_sv_netview_offsetfromdp(6287512);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_2_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_2->s_axi_wdata.bind(*p_2_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_2_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_2_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_2->s_axi_wstrb.bind(*p_2_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_2_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_2_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_2->s_axi_wvalid.bind(*p_2_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_2_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_2_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_2->s_axi_wready.bind(*p_2_s_axi_wready);
        p_2_s_axi_wready->set_sv_netview_offsetfromdp(6287736);
        xsim_sc_channel<0, bool > *p_2_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_2->s_axi_bvalid.bind(*p_2_s_axi_bvalid);
        p_2_s_axi_bvalid->set_sv_netview_offsetfromdp(6287792);
        xsim_sc_channel<0, bool > *p_2_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_2->s_axi_bready.bind(*p_2_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_2_s_axi_bready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_2_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_2->s_axi_bresp.bind(*p_2_s_axi_bresp);
        p_2_s_axi_bresp->set_sv_netview_offsetfromdp(6287904);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_2_s_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_2->s_axi_araddr.bind(*p_2_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_2_s_axi_araddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_2_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_2->s_axi_arprot.bind(*p_2_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_2_s_axi_arprot);
        xsim_sc_channel<0, bool > *p_2_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_2->s_axi_arvalid.bind(*p_2_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_2_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_2_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_2->s_axi_arready.bind(*p_2_s_axi_arready);
        p_2_s_axi_arready->set_sv_netview_offsetfromdp(6288128);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_2_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_2->s_axi_rdata.bind(*p_2_s_axi_rdata);
        p_2_s_axi_rdata->set_sv_netview_offsetfromdp(6288184);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_2_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_2->s_axi_rresp.bind(*p_2_s_axi_rresp);
        p_2_s_axi_rresp->set_sv_netview_offsetfromdp(6288240);
        xsim_sc_channel<0, bool > *p_2_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_2->s_axi_rvalid.bind(*p_2_s_axi_rvalid);
        p_2_s_axi_rvalid->set_sv_netview_offsetfromdp(6288296);
        xsim_sc_channel<0, bool > *p_2_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_2->s_axi_rready.bind(*p_2_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_2_s_axi_rready);
        xsim_sc_channel<0, bool > *p_2_mon_AWVALID = new xsim_sc_channel<0, bool >();
        sc_inst_2->mon_AWVALID.bind(*p_2_mon_AWVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_2_mon_AWVALID);
        xsim_sc_channel<0, bool > *p_2_mon_AWREADY = new xsim_sc_channel<0, bool >();
        sc_inst_2->mon_AWREADY.bind(*p_2_mon_AWREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_2_mon_AWREADY);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_2_mon_AWADDR = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_2->mon_AWADDR.bind(*p_2_mon_AWADDR);
        (*_glb_hdl_sc_channel_map).push_back(p_2_mon_AWADDR);
        xsim_sc_channel<0, bool > *p_2_mon_WVALID = new xsim_sc_channel<0, bool >();
        sc_inst_2->mon_WVALID.bind(*p_2_mon_WVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_2_mon_WVALID);
        xsim_sc_channel<0, bool > *p_2_mon_WREADY = new xsim_sc_channel<0, bool >();
        sc_inst_2->mon_WREADY.bind(*p_2_mon_WREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_2_mon_WREADY);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_2_mon_WDATA = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_2->mon_WDATA.bind(*p_2_mon_WDATA);
        (*_glb_hdl_sc_channel_map).push_back(p_2_mon_WDATA);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_2_mon_WSTRB = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_2->mon_WSTRB.bind(*p_2_mon_WSTRB);
        (*_glb_hdl_sc_channel_map).push_back(p_2_mon_WSTRB);
        xsim_sc_channel<0, bool > *p_2_mon_ARVALID = new xsim_sc_channel<0, bool >();
        sc_inst_2->mon_ARVALID.bind(*p_2_mon_ARVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_2_mon_ARVALID);
        xsim_sc_channel<0, bool > *p_2_mon_ARREADY = new xsim_sc_channel<0, bool >();
        sc_inst_2->mon_ARREADY.bind(*p_2_mon_ARREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_2_mon_ARREADY);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_2_mon_ARADDR = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_2->mon_ARADDR.bind(*p_2_mon_ARADDR);
        (*_glb_hdl_sc_channel_map).push_back(p_2_mon_ARADDR);
        xsim_sc_channel<0, bool > *p_2_mon_RVALID = new xsim_sc_channel<0, bool >();
        sc_inst_2->mon_RVALID.bind(*p_2_mon_RVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_2_mon_RVALID);
        xsim_sc_channel<0, bool > *p_2_mon_RREADY = new xsim_sc_channel<0, bool >();
        sc_inst_2->mon_RREADY.bind(*p_2_mon_RREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_2_mon_RREADY);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_2_mon_RDATA = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_2->mon_RDATA.bind(*p_2_mon_RDATA);
        (*_glb_hdl_sc_channel_map).push_back(p_2_mon_RDATA);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_2_mon_RRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_2->mon_RRESP.bind(*p_2_mon_RRESP);
        (*_glb_hdl_sc_channel_map).push_back(p_2_mon_RRESP);
        xsim_sc_channel<0, bool > *p_2_mon_BVALID = new xsim_sc_channel<0, bool >();
        sc_inst_2->mon_BVALID.bind(*p_2_mon_BVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_2_mon_BVALID);
        xsim_sc_channel<0, bool > *p_2_mon_BREADY = new xsim_sc_channel<0, bool >();
        sc_inst_2->mon_BREADY.bind(*p_2_mon_BREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_2_mon_BREADY);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_2_mon_BRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_2->mon_BRESP.bind(*p_2_mon_BRESP);
        (*_glb_hdl_sc_channel_map).push_back(p_2_mon_BRESP);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_2_m_axis_tready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_2->m_axis_tready.bind(*p_2_m_axis_tready);
        (*_glb_hdl_sc_channel_map).push_back(p_2_m_axis_tready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_2_m_axis_tdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_2->m_axis_tdata.bind(*p_2_m_axis_tdata);
        p_2_m_axis_tdata->set_sv_netview_offsetfromdp(6289416);
        xsim_sc_channel<0, bool > *p_2_m_axis_tlast = new xsim_sc_channel<0, bool >();
        sc_inst_2->m_axis_tlast.bind(*p_2_m_axis_tlast);
        p_2_m_axis_tlast->set_sv_netview_offsetfromdp(6289472);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_2_m_axis_tid = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_2->m_axis_tid.bind(*p_2_m_axis_tid);
        p_2_m_axis_tid->set_sv_netview_offsetfromdp(6289528);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_2_m_axis_tdest = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_2->m_axis_tdest.bind(*p_2_m_axis_tdest);
        p_2_m_axis_tdest->set_sv_netview_offsetfromdp(6289584);
        xsim_sc_channel<0, bool > *p_2_m_axis_tvalid = new xsim_sc_channel<0, bool >();
        sc_inst_2->m_axis_tvalid.bind(*p_2_m_axis_tvalid);
        p_2_m_axis_tvalid->set_sv_netview_offsetfromdp(6289640);
        sc_inst_3 = new pfm_dynamic_dpa_mon1_0(".emu_wrapper.emu_i.dynamic_region.System_DPA.dpa_mon1");
        sc_inst_3->xsim_set_dbg_index(534);
        xsim_sc_channel<0, bool > *p_3_mon_clk = new xsim_sc_channel<0, bool >();
        sc_inst_3->mon_clk.bind(*p_3_mon_clk);
        (*_glb_hdl_sc_channel_map).push_back(p_3_mon_clk);
        xsim_sc_channel<0, bool > *p_3_mon_resetn = new xsim_sc_channel<0, bool >();
        sc_inst_3->mon_resetn.bind(*p_3_mon_resetn);
        (*_glb_hdl_sc_channel_map).push_back(p_3_mon_resetn);
        xsim_sc_channel<0, bool > *p_3_trace_clk = new xsim_sc_channel<0, bool >();
        sc_inst_3->trace_clk.bind(*p_3_trace_clk);
        (*_glb_hdl_sc_channel_map).push_back(p_3_trace_clk);
        xsim_sc_channel<0, bool > *p_3_trace_rst = new xsim_sc_channel<0, bool >();
        sc_inst_3->trace_rst.bind(*p_3_trace_rst);
        (*_glb_hdl_sc_channel_map).push_back(p_3_trace_rst);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_3_s_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_3->s_axi_awaddr.bind(*p_3_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_3_s_axi_awaddr);
        xsim_sc_channel<0, bool > *p_3_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_awvalid.bind(*p_3_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_3_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_3_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_awready.bind(*p_3_s_axi_awready);
        p_3_s_axi_awready->set_sv_netview_offsetfromdp(6290080);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_3_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_3->s_axi_wdata.bind(*p_3_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_3_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_3_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_3->s_axi_wstrb.bind(*p_3_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_3_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_3_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_wvalid.bind(*p_3_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_3_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_3_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_wready.bind(*p_3_s_axi_wready);
        p_3_s_axi_wready->set_sv_netview_offsetfromdp(6290304);
        xsim_sc_channel<0, bool > *p_3_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_bvalid.bind(*p_3_s_axi_bvalid);
        p_3_s_axi_bvalid->set_sv_netview_offsetfromdp(6290360);
        xsim_sc_channel<0, bool > *p_3_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_bready.bind(*p_3_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_3_s_axi_bready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_3_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_3->s_axi_bresp.bind(*p_3_s_axi_bresp);
        p_3_s_axi_bresp->set_sv_netview_offsetfromdp(6290472);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_3_s_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_3->s_axi_araddr.bind(*p_3_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_3_s_axi_araddr);
        xsim_sc_channel<0, bool > *p_3_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_arvalid.bind(*p_3_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_3_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_3_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_arready.bind(*p_3_s_axi_arready);
        p_3_s_axi_arready->set_sv_netview_offsetfromdp(6290640);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_3_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_3->s_axi_rdata.bind(*p_3_s_axi_rdata);
        p_3_s_axi_rdata->set_sv_netview_offsetfromdp(6290696);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_3_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_3->s_axi_rresp.bind(*p_3_s_axi_rresp);
        p_3_s_axi_rresp->set_sv_netview_offsetfromdp(6290752);
        xsim_sc_channel<0, bool > *p_3_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_rvalid.bind(*p_3_s_axi_rvalid);
        p_3_s_axi_rvalid->set_sv_netview_offsetfromdp(6290808);
        xsim_sc_channel<0, bool > *p_3_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_rready.bind(*p_3_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_3_s_axi_rready);
        xsim_sc_channel<0, bool > *p_3_mon_AWVALID = new xsim_sc_channel<0, bool >();
        sc_inst_3->mon_AWVALID.bind(*p_3_mon_AWVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_3_mon_AWVALID);
        xsim_sc_channel<0, bool > *p_3_mon_AWREADY = new xsim_sc_channel<0, bool >();
        sc_inst_3->mon_AWREADY.bind(*p_3_mon_AWREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_3_mon_AWREADY);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_3_mon_AWADDR = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_3->mon_AWADDR.bind(*p_3_mon_AWADDR);
        (*_glb_hdl_sc_channel_map).push_back(p_3_mon_AWADDR);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_3_mon_AWID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_3->mon_AWID.bind(*p_3_mon_AWID);
        (*_glb_hdl_sc_channel_map).push_back(p_3_mon_AWID);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_3_mon_AWLEN = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_3->mon_AWLEN.bind(*p_3_mon_AWLEN);
        (*_glb_hdl_sc_channel_map).push_back(p_3_mon_AWLEN);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_3_mon_AWSIZE = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_3->mon_AWSIZE.bind(*p_3_mon_AWSIZE);
        (*_glb_hdl_sc_channel_map).push_back(p_3_mon_AWSIZE);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_3_mon_AWBURST = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_3->mon_AWBURST.bind(*p_3_mon_AWBURST);
        (*_glb_hdl_sc_channel_map).push_back(p_3_mon_AWBURST);
        xsim_sc_channel<0, bool > *p_3_mon_WVALID = new xsim_sc_channel<0, bool >();
        sc_inst_3->mon_WVALID.bind(*p_3_mon_WVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_3_mon_WVALID);
        xsim_sc_channel<0, bool > *p_3_mon_WREADY = new xsim_sc_channel<0, bool >();
        sc_inst_3->mon_WREADY.bind(*p_3_mon_WREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_3_mon_WREADY);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_3_mon_WDATA = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_3->mon_WDATA.bind(*p_3_mon_WDATA);
        (*_glb_hdl_sc_channel_map).push_back(p_3_mon_WDATA);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_3_mon_WSTRB = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_3->mon_WSTRB.bind(*p_3_mon_WSTRB);
        (*_glb_hdl_sc_channel_map).push_back(p_3_mon_WSTRB);
        xsim_sc_channel<0, bool > *p_3_mon_WLAST = new xsim_sc_channel<0, bool >();
        sc_inst_3->mon_WLAST.bind(*p_3_mon_WLAST);
        (*_glb_hdl_sc_channel_map).push_back(p_3_mon_WLAST);
        xsim_sc_channel<0, bool > *p_3_mon_ARVALID = new xsim_sc_channel<0, bool >();
        sc_inst_3->mon_ARVALID.bind(*p_3_mon_ARVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_3_mon_ARVALID);
        xsim_sc_channel<0, bool > *p_3_mon_ARREADY = new xsim_sc_channel<0, bool >();
        sc_inst_3->mon_ARREADY.bind(*p_3_mon_ARREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_3_mon_ARREADY);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_3_mon_ARADDR = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_3->mon_ARADDR.bind(*p_3_mon_ARADDR);
        (*_glb_hdl_sc_channel_map).push_back(p_3_mon_ARADDR);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_3_mon_ARID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_3->mon_ARID.bind(*p_3_mon_ARID);
        (*_glb_hdl_sc_channel_map).push_back(p_3_mon_ARID);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_3_mon_ARLEN = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_3->mon_ARLEN.bind(*p_3_mon_ARLEN);
        (*_glb_hdl_sc_channel_map).push_back(p_3_mon_ARLEN);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_3_mon_ARSIZE = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_3->mon_ARSIZE.bind(*p_3_mon_ARSIZE);
        (*_glb_hdl_sc_channel_map).push_back(p_3_mon_ARSIZE);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_3_mon_ARBURST = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_3->mon_ARBURST.bind(*p_3_mon_ARBURST);
        (*_glb_hdl_sc_channel_map).push_back(p_3_mon_ARBURST);
        xsim_sc_channel<0, bool > *p_3_mon_RVALID = new xsim_sc_channel<0, bool >();
        sc_inst_3->mon_RVALID.bind(*p_3_mon_RVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_3_mon_RVALID);
        xsim_sc_channel<0, bool > *p_3_mon_RREADY = new xsim_sc_channel<0, bool >();
        sc_inst_3->mon_RREADY.bind(*p_3_mon_RREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_3_mon_RREADY);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_3_mon_RDATA = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_3->mon_RDATA.bind(*p_3_mon_RDATA);
        (*_glb_hdl_sc_channel_map).push_back(p_3_mon_RDATA);
        xsim_sc_channel<0, bool > *p_3_mon_RLAST = new xsim_sc_channel<0, bool >();
        sc_inst_3->mon_RLAST.bind(*p_3_mon_RLAST);
        (*_glb_hdl_sc_channel_map).push_back(p_3_mon_RLAST);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_3_mon_RID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_3->mon_RID.bind(*p_3_mon_RID);
        (*_glb_hdl_sc_channel_map).push_back(p_3_mon_RID);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_3_mon_RRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_3->mon_RRESP.bind(*p_3_mon_RRESP);
        (*_glb_hdl_sc_channel_map).push_back(p_3_mon_RRESP);
        xsim_sc_channel<0, bool > *p_3_mon_BVALID = new xsim_sc_channel<0, bool >();
        sc_inst_3->mon_BVALID.bind(*p_3_mon_BVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_3_mon_BVALID);
        xsim_sc_channel<0, bool > *p_3_mon_BREADY = new xsim_sc_channel<0, bool >();
        sc_inst_3->mon_BREADY.bind(*p_3_mon_BREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_3_mon_BREADY);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_3_mon_BRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_3->mon_BRESP.bind(*p_3_mon_BRESP);
        (*_glb_hdl_sc_channel_map).push_back(p_3_mon_BRESP);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_3_mon_BID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_3->mon_BID.bind(*p_3_mon_BID);
        (*_glb_hdl_sc_channel_map).push_back(p_3_mon_BID);
        xsim_sc_channel<0, bool > *p_3_m_axis_rd_tready = new xsim_sc_channel<0, bool >();
        sc_inst_3->m_axis_rd_tready.bind(*p_3_m_axis_rd_tready);
        (*_glb_hdl_sc_channel_map).push_back(p_3_m_axis_rd_tready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_3_m_axis_rd_tdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_3->m_axis_rd_tdata.bind(*p_3_m_axis_rd_tdata);
        p_3_m_axis_rd_tdata->set_sv_netview_offsetfromdp(6292600);
        xsim_sc_channel<0, bool > *p_3_m_axis_rd_tlast = new xsim_sc_channel<0, bool >();
        sc_inst_3->m_axis_rd_tlast.bind(*p_3_m_axis_rd_tlast);
        p_3_m_axis_rd_tlast->set_sv_netview_offsetfromdp(6292656);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_3_m_axis_rd_tid = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_3->m_axis_rd_tid.bind(*p_3_m_axis_rd_tid);
        p_3_m_axis_rd_tid->set_sv_netview_offsetfromdp(6292712);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_3_m_axis_rd_tdest = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_3->m_axis_rd_tdest.bind(*p_3_m_axis_rd_tdest);
        p_3_m_axis_rd_tdest->set_sv_netview_offsetfromdp(6292768);
        xsim_sc_channel<0, bool > *p_3_m_axis_wr_tready = new xsim_sc_channel<0, bool >();
        sc_inst_3->m_axis_wr_tready.bind(*p_3_m_axis_wr_tready);
        (*_glb_hdl_sc_channel_map).push_back(p_3_m_axis_wr_tready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_3_m_axis_wr_tdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_3->m_axis_wr_tdata.bind(*p_3_m_axis_wr_tdata);
        p_3_m_axis_wr_tdata->set_sv_netview_offsetfromdp(6292880);
        xsim_sc_channel<0, bool > *p_3_m_axis_wr_tlast = new xsim_sc_channel<0, bool >();
        sc_inst_3->m_axis_wr_tlast.bind(*p_3_m_axis_wr_tlast);
        p_3_m_axis_wr_tlast->set_sv_netview_offsetfromdp(6292936);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_3_m_axis_wr_tid = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_3->m_axis_wr_tid.bind(*p_3_m_axis_wr_tid);
        p_3_m_axis_wr_tid->set_sv_netview_offsetfromdp(6292992);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_3_m_axis_wr_tdest = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_3->m_axis_wr_tdest.bind(*p_3_m_axis_wr_tdest);
        p_3_m_axis_wr_tdest->set_sv_netview_offsetfromdp(6293048);
        xsim_sc_channel<0, bool > *p_3_m_axis_wr_tvalid = new xsim_sc_channel<0, bool >();
        sc_inst_3->m_axis_wr_tvalid.bind(*p_3_m_axis_wr_tvalid);
        p_3_m_axis_wr_tvalid->set_sv_netview_offsetfromdp(6293104);
        xsim_sc_channel<0, bool > *p_3_m_axis_rd_tvalid = new xsim_sc_channel<0, bool >();
        sc_inst_3->m_axis_rd_tvalid.bind(*p_3_m_axis_rd_tvalid);
        p_3_m_axis_rd_tvalid->set_sv_netview_offsetfromdp(6293160);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_3_s_axi_awaddr_mon = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_3->s_axi_awaddr_mon.bind(*p_3_s_axi_awaddr_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_3_s_axi_awaddr_mon);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_3_s_axi_awprot_mon = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_3->s_axi_awprot_mon.bind(*p_3_s_axi_awprot_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_3_s_axi_awprot_mon);
        xsim_sc_channel<0, bool > *p_3_s_axi_awvalid_mon = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_awvalid_mon.bind(*p_3_s_axi_awvalid_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_3_s_axi_awvalid_mon);
        xsim_sc_channel<0, bool > *p_3_s_axi_awready_mon = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_awready_mon.bind(*p_3_s_axi_awready_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_3_s_axi_awready_mon);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_3_s_axi_wdata_mon = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_3->s_axi_wdata_mon.bind(*p_3_s_axi_wdata_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_3_s_axi_wdata_mon);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_3_s_axi_wstrb_mon = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_3->s_axi_wstrb_mon.bind(*p_3_s_axi_wstrb_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_3_s_axi_wstrb_mon);
        xsim_sc_channel<0, bool > *p_3_s_axi_wvalid_mon = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_wvalid_mon.bind(*p_3_s_axi_wvalid_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_3_s_axi_wvalid_mon);
        xsim_sc_channel<0, bool > *p_3_s_axi_wready_mon = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_wready_mon.bind(*p_3_s_axi_wready_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_3_s_axi_wready_mon);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_3_s_axi_bresp_mon = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_3->s_axi_bresp_mon.bind(*p_3_s_axi_bresp_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_3_s_axi_bresp_mon);
        xsim_sc_channel<0, bool > *p_3_s_axi_bvalid_mon = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_bvalid_mon.bind(*p_3_s_axi_bvalid_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_3_s_axi_bvalid_mon);
        xsim_sc_channel<0, bool > *p_3_s_axi_bready_mon = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_bready_mon.bind(*p_3_s_axi_bready_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_3_s_axi_bready_mon);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_3_s_axi_araddr_mon = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_3->s_axi_araddr_mon.bind(*p_3_s_axi_araddr_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_3_s_axi_araddr_mon);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_3_s_axi_arprot_mon = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_3->s_axi_arprot_mon.bind(*p_3_s_axi_arprot_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_3_s_axi_arprot_mon);
        xsim_sc_channel<0, bool > *p_3_s_axi_arvalid_mon = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_arvalid_mon.bind(*p_3_s_axi_arvalid_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_3_s_axi_arvalid_mon);
        xsim_sc_channel<0, bool > *p_3_s_axi_arready_mon = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_arready_mon.bind(*p_3_s_axi_arready_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_3_s_axi_arready_mon);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_3_s_axi_rdata_mon = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_3->s_axi_rdata_mon.bind(*p_3_s_axi_rdata_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_3_s_axi_rdata_mon);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_3_s_axi_rresp_mon = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_3->s_axi_rresp_mon.bind(*p_3_s_axi_rresp_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_3_s_axi_rresp_mon);
        xsim_sc_channel<0, bool > *p_3_s_axi_rvalid_mon = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_rvalid_mon.bind(*p_3_s_axi_rvalid_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_3_s_axi_rvalid_mon);
        xsim_sc_channel<0, bool > *p_3_s_axi_rready_mon = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_rready_mon.bind(*p_3_s_axi_rready_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_3_s_axi_rready_mon);
        sc_inst_4 = new pfm_dynamic_dpa_mon2_0(".emu_wrapper.emu_i.dynamic_region.System_DPA.dpa_mon2");
        sc_inst_4->xsim_set_dbg_index(535);
        xsim_sc_channel<0, bool > *p_4_mon_clk = new xsim_sc_channel<0, bool >();
        sc_inst_4->mon_clk.bind(*p_4_mon_clk);
        (*_glb_hdl_sc_channel_map).push_back(p_4_mon_clk);
        xsim_sc_channel<0, bool > *p_4_mon_resetn = new xsim_sc_channel<0, bool >();
        sc_inst_4->mon_resetn.bind(*p_4_mon_resetn);
        (*_glb_hdl_sc_channel_map).push_back(p_4_mon_resetn);
        xsim_sc_channel<0, bool > *p_4_trace_clk = new xsim_sc_channel<0, bool >();
        sc_inst_4->trace_clk.bind(*p_4_trace_clk);
        (*_glb_hdl_sc_channel_map).push_back(p_4_trace_clk);
        xsim_sc_channel<0, bool > *p_4_trace_rst = new xsim_sc_channel<0, bool >();
        sc_inst_4->trace_rst.bind(*p_4_trace_rst);
        (*_glb_hdl_sc_channel_map).push_back(p_4_trace_rst);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_4_s_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_4->s_axi_awaddr.bind(*p_4_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_4_s_axi_awaddr);
        xsim_sc_channel<0, bool > *p_4_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_4->s_axi_awvalid.bind(*p_4_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_4_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_4_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_4->s_axi_awready.bind(*p_4_s_axi_awready);
        p_4_s_axi_awready->set_sv_netview_offsetfromdp(6294664);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_4_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_4->s_axi_wdata.bind(*p_4_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_4_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_4_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_4->s_axi_wstrb.bind(*p_4_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_4_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_4_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_4->s_axi_wvalid.bind(*p_4_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_4_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_4_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_4->s_axi_wready.bind(*p_4_s_axi_wready);
        p_4_s_axi_wready->set_sv_netview_offsetfromdp(6294888);
        xsim_sc_channel<0, bool > *p_4_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_4->s_axi_bvalid.bind(*p_4_s_axi_bvalid);
        p_4_s_axi_bvalid->set_sv_netview_offsetfromdp(6294944);
        xsim_sc_channel<0, bool > *p_4_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_4->s_axi_bready.bind(*p_4_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_4_s_axi_bready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_4_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_4->s_axi_bresp.bind(*p_4_s_axi_bresp);
        p_4_s_axi_bresp->set_sv_netview_offsetfromdp(6295056);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_4_s_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_4->s_axi_araddr.bind(*p_4_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_4_s_axi_araddr);
        xsim_sc_channel<0, bool > *p_4_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_4->s_axi_arvalid.bind(*p_4_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_4_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_4_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_4->s_axi_arready.bind(*p_4_s_axi_arready);
        p_4_s_axi_arready->set_sv_netview_offsetfromdp(6295224);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_4_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_4->s_axi_rdata.bind(*p_4_s_axi_rdata);
        p_4_s_axi_rdata->set_sv_netview_offsetfromdp(6295280);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_4_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_4->s_axi_rresp.bind(*p_4_s_axi_rresp);
        p_4_s_axi_rresp->set_sv_netview_offsetfromdp(6295336);
        xsim_sc_channel<0, bool > *p_4_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_4->s_axi_rvalid.bind(*p_4_s_axi_rvalid);
        p_4_s_axi_rvalid->set_sv_netview_offsetfromdp(6295392);
        xsim_sc_channel<0, bool > *p_4_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_4->s_axi_rready.bind(*p_4_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_4_s_axi_rready);
        xsim_sc_channel<0, bool > *p_4_mon_AWVALID = new xsim_sc_channel<0, bool >();
        sc_inst_4->mon_AWVALID.bind(*p_4_mon_AWVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_4_mon_AWVALID);
        xsim_sc_channel<0, bool > *p_4_mon_AWREADY = new xsim_sc_channel<0, bool >();
        sc_inst_4->mon_AWREADY.bind(*p_4_mon_AWREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_4_mon_AWREADY);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_4_mon_AWADDR = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_4->mon_AWADDR.bind(*p_4_mon_AWADDR);
        (*_glb_hdl_sc_channel_map).push_back(p_4_mon_AWADDR);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_mon_AWID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->mon_AWID.bind(*p_4_mon_AWID);
        (*_glb_hdl_sc_channel_map).push_back(p_4_mon_AWID);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_4_mon_AWLEN = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_4->mon_AWLEN.bind(*p_4_mon_AWLEN);
        (*_glb_hdl_sc_channel_map).push_back(p_4_mon_AWLEN);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_4_mon_AWSIZE = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_4->mon_AWSIZE.bind(*p_4_mon_AWSIZE);
        (*_glb_hdl_sc_channel_map).push_back(p_4_mon_AWSIZE);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_4_mon_AWBURST = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_4->mon_AWBURST.bind(*p_4_mon_AWBURST);
        (*_glb_hdl_sc_channel_map).push_back(p_4_mon_AWBURST);
        xsim_sc_channel<0, bool > *p_4_mon_WVALID = new xsim_sc_channel<0, bool >();
        sc_inst_4->mon_WVALID.bind(*p_4_mon_WVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_4_mon_WVALID);
        xsim_sc_channel<0, bool > *p_4_mon_WREADY = new xsim_sc_channel<0, bool >();
        sc_inst_4->mon_WREADY.bind(*p_4_mon_WREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_4_mon_WREADY);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_4_mon_WDATA = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_4->mon_WDATA.bind(*p_4_mon_WDATA);
        (*_glb_hdl_sc_channel_map).push_back(p_4_mon_WDATA);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_4_mon_WSTRB = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_4->mon_WSTRB.bind(*p_4_mon_WSTRB);
        (*_glb_hdl_sc_channel_map).push_back(p_4_mon_WSTRB);
        xsim_sc_channel<0, bool > *p_4_mon_WLAST = new xsim_sc_channel<0, bool >();
        sc_inst_4->mon_WLAST.bind(*p_4_mon_WLAST);
        (*_glb_hdl_sc_channel_map).push_back(p_4_mon_WLAST);
        xsim_sc_channel<0, bool > *p_4_mon_ARVALID = new xsim_sc_channel<0, bool >();
        sc_inst_4->mon_ARVALID.bind(*p_4_mon_ARVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_4_mon_ARVALID);
        xsim_sc_channel<0, bool > *p_4_mon_ARREADY = new xsim_sc_channel<0, bool >();
        sc_inst_4->mon_ARREADY.bind(*p_4_mon_ARREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_4_mon_ARREADY);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_4_mon_ARADDR = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_4->mon_ARADDR.bind(*p_4_mon_ARADDR);
        (*_glb_hdl_sc_channel_map).push_back(p_4_mon_ARADDR);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_mon_ARID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->mon_ARID.bind(*p_4_mon_ARID);
        (*_glb_hdl_sc_channel_map).push_back(p_4_mon_ARID);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_4_mon_ARLEN = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_4->mon_ARLEN.bind(*p_4_mon_ARLEN);
        (*_glb_hdl_sc_channel_map).push_back(p_4_mon_ARLEN);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_4_mon_ARSIZE = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_4->mon_ARSIZE.bind(*p_4_mon_ARSIZE);
        (*_glb_hdl_sc_channel_map).push_back(p_4_mon_ARSIZE);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_4_mon_ARBURST = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_4->mon_ARBURST.bind(*p_4_mon_ARBURST);
        (*_glb_hdl_sc_channel_map).push_back(p_4_mon_ARBURST);
        xsim_sc_channel<0, bool > *p_4_mon_RVALID = new xsim_sc_channel<0, bool >();
        sc_inst_4->mon_RVALID.bind(*p_4_mon_RVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_4_mon_RVALID);
        xsim_sc_channel<0, bool > *p_4_mon_RREADY = new xsim_sc_channel<0, bool >();
        sc_inst_4->mon_RREADY.bind(*p_4_mon_RREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_4_mon_RREADY);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_4_mon_RDATA = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_4->mon_RDATA.bind(*p_4_mon_RDATA);
        (*_glb_hdl_sc_channel_map).push_back(p_4_mon_RDATA);
        xsim_sc_channel<0, bool > *p_4_mon_RLAST = new xsim_sc_channel<0, bool >();
        sc_inst_4->mon_RLAST.bind(*p_4_mon_RLAST);
        (*_glb_hdl_sc_channel_map).push_back(p_4_mon_RLAST);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_mon_RID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->mon_RID.bind(*p_4_mon_RID);
        (*_glb_hdl_sc_channel_map).push_back(p_4_mon_RID);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_4_mon_RRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_4->mon_RRESP.bind(*p_4_mon_RRESP);
        (*_glb_hdl_sc_channel_map).push_back(p_4_mon_RRESP);
        xsim_sc_channel<0, bool > *p_4_mon_BVALID = new xsim_sc_channel<0, bool >();
        sc_inst_4->mon_BVALID.bind(*p_4_mon_BVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_4_mon_BVALID);
        xsim_sc_channel<0, bool > *p_4_mon_BREADY = new xsim_sc_channel<0, bool >();
        sc_inst_4->mon_BREADY.bind(*p_4_mon_BREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_4_mon_BREADY);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_4_mon_BRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_4->mon_BRESP.bind(*p_4_mon_BRESP);
        (*_glb_hdl_sc_channel_map).push_back(p_4_mon_BRESP);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_mon_BID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->mon_BID.bind(*p_4_mon_BID);
        (*_glb_hdl_sc_channel_map).push_back(p_4_mon_BID);
        xsim_sc_channel<0, bool > *p_4_m_axis_rd_tready = new xsim_sc_channel<0, bool >();
        sc_inst_4->m_axis_rd_tready.bind(*p_4_m_axis_rd_tready);
        (*_glb_hdl_sc_channel_map).push_back(p_4_m_axis_rd_tready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_4_m_axis_rd_tdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_4->m_axis_rd_tdata.bind(*p_4_m_axis_rd_tdata);
        p_4_m_axis_rd_tdata->set_sv_netview_offsetfromdp(6297184);
        xsim_sc_channel<0, bool > *p_4_m_axis_rd_tlast = new xsim_sc_channel<0, bool >();
        sc_inst_4->m_axis_rd_tlast.bind(*p_4_m_axis_rd_tlast);
        p_4_m_axis_rd_tlast->set_sv_netview_offsetfromdp(6297240);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_4_m_axis_rd_tid = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_4->m_axis_rd_tid.bind(*p_4_m_axis_rd_tid);
        p_4_m_axis_rd_tid->set_sv_netview_offsetfromdp(6297296);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_4_m_axis_rd_tdest = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_4->m_axis_rd_tdest.bind(*p_4_m_axis_rd_tdest);
        p_4_m_axis_rd_tdest->set_sv_netview_offsetfromdp(6297352);
        xsim_sc_channel<0, bool > *p_4_m_axis_wr_tready = new xsim_sc_channel<0, bool >();
        sc_inst_4->m_axis_wr_tready.bind(*p_4_m_axis_wr_tready);
        (*_glb_hdl_sc_channel_map).push_back(p_4_m_axis_wr_tready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_4_m_axis_wr_tdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_4->m_axis_wr_tdata.bind(*p_4_m_axis_wr_tdata);
        p_4_m_axis_wr_tdata->set_sv_netview_offsetfromdp(6297464);
        xsim_sc_channel<0, bool > *p_4_m_axis_wr_tlast = new xsim_sc_channel<0, bool >();
        sc_inst_4->m_axis_wr_tlast.bind(*p_4_m_axis_wr_tlast);
        p_4_m_axis_wr_tlast->set_sv_netview_offsetfromdp(6297520);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_4_m_axis_wr_tid = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_4->m_axis_wr_tid.bind(*p_4_m_axis_wr_tid);
        p_4_m_axis_wr_tid->set_sv_netview_offsetfromdp(6297576);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_4_m_axis_wr_tdest = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_4->m_axis_wr_tdest.bind(*p_4_m_axis_wr_tdest);
        p_4_m_axis_wr_tdest->set_sv_netview_offsetfromdp(6297632);
        xsim_sc_channel<0, bool > *p_4_m_axis_wr_tvalid = new xsim_sc_channel<0, bool >();
        sc_inst_4->m_axis_wr_tvalid.bind(*p_4_m_axis_wr_tvalid);
        p_4_m_axis_wr_tvalid->set_sv_netview_offsetfromdp(6297688);
        xsim_sc_channel<0, bool > *p_4_m_axis_rd_tvalid = new xsim_sc_channel<0, bool >();
        sc_inst_4->m_axis_rd_tvalid.bind(*p_4_m_axis_rd_tvalid);
        p_4_m_axis_rd_tvalid->set_sv_netview_offsetfromdp(6297744);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_4_s_axi_awaddr_mon = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_4->s_axi_awaddr_mon.bind(*p_4_s_axi_awaddr_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_4_s_axi_awaddr_mon);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_4_s_axi_awprot_mon = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_4->s_axi_awprot_mon.bind(*p_4_s_axi_awprot_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_4_s_axi_awprot_mon);
        xsim_sc_channel<0, bool > *p_4_s_axi_awvalid_mon = new xsim_sc_channel<0, bool >();
        sc_inst_4->s_axi_awvalid_mon.bind(*p_4_s_axi_awvalid_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_4_s_axi_awvalid_mon);
        xsim_sc_channel<0, bool > *p_4_s_axi_awready_mon = new xsim_sc_channel<0, bool >();
        sc_inst_4->s_axi_awready_mon.bind(*p_4_s_axi_awready_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_4_s_axi_awready_mon);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_4_s_axi_wdata_mon = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_4->s_axi_wdata_mon.bind(*p_4_s_axi_wdata_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_4_s_axi_wdata_mon);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_4_s_axi_wstrb_mon = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_4->s_axi_wstrb_mon.bind(*p_4_s_axi_wstrb_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_4_s_axi_wstrb_mon);
        xsim_sc_channel<0, bool > *p_4_s_axi_wvalid_mon = new xsim_sc_channel<0, bool >();
        sc_inst_4->s_axi_wvalid_mon.bind(*p_4_s_axi_wvalid_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_4_s_axi_wvalid_mon);
        xsim_sc_channel<0, bool > *p_4_s_axi_wready_mon = new xsim_sc_channel<0, bool >();
        sc_inst_4->s_axi_wready_mon.bind(*p_4_s_axi_wready_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_4_s_axi_wready_mon);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_4_s_axi_bresp_mon = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_4->s_axi_bresp_mon.bind(*p_4_s_axi_bresp_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_4_s_axi_bresp_mon);
        xsim_sc_channel<0, bool > *p_4_s_axi_bvalid_mon = new xsim_sc_channel<0, bool >();
        sc_inst_4->s_axi_bvalid_mon.bind(*p_4_s_axi_bvalid_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_4_s_axi_bvalid_mon);
        xsim_sc_channel<0, bool > *p_4_s_axi_bready_mon = new xsim_sc_channel<0, bool >();
        sc_inst_4->s_axi_bready_mon.bind(*p_4_s_axi_bready_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_4_s_axi_bready_mon);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_4_s_axi_araddr_mon = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_4->s_axi_araddr_mon.bind(*p_4_s_axi_araddr_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_4_s_axi_araddr_mon);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_4_s_axi_arprot_mon = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_4->s_axi_arprot_mon.bind(*p_4_s_axi_arprot_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_4_s_axi_arprot_mon);
        xsim_sc_channel<0, bool > *p_4_s_axi_arvalid_mon = new xsim_sc_channel<0, bool >();
        sc_inst_4->s_axi_arvalid_mon.bind(*p_4_s_axi_arvalid_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_4_s_axi_arvalid_mon);
        xsim_sc_channel<0, bool > *p_4_s_axi_arready_mon = new xsim_sc_channel<0, bool >();
        sc_inst_4->s_axi_arready_mon.bind(*p_4_s_axi_arready_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_4_s_axi_arready_mon);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_4_s_axi_rdata_mon = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_4->s_axi_rdata_mon.bind(*p_4_s_axi_rdata_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_4_s_axi_rdata_mon);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_4_s_axi_rresp_mon = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_4->s_axi_rresp_mon.bind(*p_4_s_axi_rresp_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_4_s_axi_rresp_mon);
        xsim_sc_channel<0, bool > *p_4_s_axi_rvalid_mon = new xsim_sc_channel<0, bool >();
        sc_inst_4->s_axi_rvalid_mon.bind(*p_4_s_axi_rvalid_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_4_s_axi_rvalid_mon);
        xsim_sc_channel<0, bool > *p_4_s_axi_rready_mon = new xsim_sc_channel<0, bool >();
        sc_inst_4->s_axi_rready_mon.bind(*p_4_s_axi_rready_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_4_s_axi_rready_mon);
        sc_inst_5 = new pfm_dynamic_memory_subsystem_0(".emu_wrapper.emu_i.dynamic_region.memory_subsystem");
        sc_inst_5->xsim_set_dbg_index(30);
        xsim_sc_channel<0, bool > *p_5_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_5->aclk.bind(*p_5_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_5_aclk);
        xsim_sc_channel<0, bool > *p_5_aclk1 = new xsim_sc_channel<0, bool >();
        sc_inst_5->aclk1.bind(*p_5_aclk1);
        (*_glb_hdl_sc_channel_map).push_back(p_5_aclk1);
        xsim_sc_channel<0, bool > *p_5_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_5->aresetn.bind(*p_5_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_5_aresetn);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_S00_AXI_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->S00_AXI_awid.bind(*p_5_S00_AXI_awid);
        (*_glb_hdl_sc_channel_map).push_back(p_5_S00_AXI_awid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_5_S00_AXI_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_5->S00_AXI_awaddr.bind(*p_5_S00_AXI_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_5_S00_AXI_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_5_S00_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_5->S00_AXI_awlen.bind(*p_5_S00_AXI_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_5_S00_AXI_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_5_S00_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_5->S00_AXI_awsize.bind(*p_5_S00_AXI_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_5_S00_AXI_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_5_S00_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_5->S00_AXI_awburst.bind(*p_5_S00_AXI_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_5_S00_AXI_awburst);
        xsim_sc_channel<0, bool > *p_5_S00_AXI_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_5->S00_AXI_awlock.bind(*p_5_S00_AXI_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_5_S00_AXI_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_5_S00_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_5->S00_AXI_awcache.bind(*p_5_S00_AXI_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_5_S00_AXI_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_5_S00_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_5->S00_AXI_awprot.bind(*p_5_S00_AXI_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_5_S00_AXI_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_5_S00_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_5->S00_AXI_awqos.bind(*p_5_S00_AXI_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_5_S00_AXI_awqos);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_S00_AXI_awuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->S00_AXI_awuser.bind(*p_5_S00_AXI_awuser);
        (*_glb_hdl_sc_channel_map).push_back(p_5_S00_AXI_awuser);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_S00_AXI_awvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->S00_AXI_awvalid.bind(*p_5_S00_AXI_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_5_S00_AXI_awvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_S00_AXI_awready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->S00_AXI_awready.bind(*p_5_S00_AXI_awready);
        p_5_S00_AXI_awready->set_sv_netview_offsetfromdp(6834000);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_5_S00_AXI_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_5->S00_AXI_wdata.bind(*p_5_S00_AXI_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_5_S00_AXI_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_5_S00_AXI_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_5->S00_AXI_wstrb.bind(*p_5_S00_AXI_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_5_S00_AXI_wstrb);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_S00_AXI_wlast = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->S00_AXI_wlast.bind(*p_5_S00_AXI_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_5_S00_AXI_wlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_S00_AXI_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->S00_AXI_wuser.bind(*p_5_S00_AXI_wuser);
        (*_glb_hdl_sc_channel_map).push_back(p_5_S00_AXI_wuser);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_S00_AXI_wvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->S00_AXI_wvalid.bind(*p_5_S00_AXI_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_5_S00_AXI_wvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_S00_AXI_wready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->S00_AXI_wready.bind(*p_5_S00_AXI_wready);
        p_5_S00_AXI_wready->set_sv_netview_offsetfromdp(6834336);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_S00_AXI_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->S00_AXI_bid.bind(*p_5_S00_AXI_bid);
        p_5_S00_AXI_bid->set_sv_netview_offsetfromdp(6834392);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_5_S00_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_5->S00_AXI_bresp.bind(*p_5_S00_AXI_bresp);
        p_5_S00_AXI_bresp->set_sv_netview_offsetfromdp(6834448);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_S00_AXI_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->S00_AXI_buser.bind(*p_5_S00_AXI_buser);
        p_5_S00_AXI_buser->set_sv_netview_offsetfromdp(6834504);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_S00_AXI_bvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->S00_AXI_bvalid.bind(*p_5_S00_AXI_bvalid);
        p_5_S00_AXI_bvalid->set_sv_netview_offsetfromdp(6834560);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_S00_AXI_bready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->S00_AXI_bready.bind(*p_5_S00_AXI_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_5_S00_AXI_bready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_S00_AXI_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->S00_AXI_arid.bind(*p_5_S00_AXI_arid);
        (*_glb_hdl_sc_channel_map).push_back(p_5_S00_AXI_arid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_5_S00_AXI_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_5->S00_AXI_araddr.bind(*p_5_S00_AXI_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_5_S00_AXI_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_5_S00_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_5->S00_AXI_arlen.bind(*p_5_S00_AXI_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_5_S00_AXI_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_5_S00_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_5->S00_AXI_arsize.bind(*p_5_S00_AXI_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_5_S00_AXI_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_5_S00_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_5->S00_AXI_arburst.bind(*p_5_S00_AXI_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_5_S00_AXI_arburst);
        xsim_sc_channel<0, bool > *p_5_S00_AXI_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_5->S00_AXI_arlock.bind(*p_5_S00_AXI_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_5_S00_AXI_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_5_S00_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_5->S00_AXI_arcache.bind(*p_5_S00_AXI_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_5_S00_AXI_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_5_S00_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_5->S00_AXI_arprot.bind(*p_5_S00_AXI_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_5_S00_AXI_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_5_S00_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_5->S00_AXI_arqos.bind(*p_5_S00_AXI_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_5_S00_AXI_arqos);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_S00_AXI_aruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->S00_AXI_aruser.bind(*p_5_S00_AXI_aruser);
        (*_glb_hdl_sc_channel_map).push_back(p_5_S00_AXI_aruser);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_S00_AXI_arvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->S00_AXI_arvalid.bind(*p_5_S00_AXI_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_5_S00_AXI_arvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_S00_AXI_arready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->S00_AXI_arready.bind(*p_5_S00_AXI_arready);
        p_5_S00_AXI_arready->set_sv_netview_offsetfromdp(6835288);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_S00_AXI_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->S00_AXI_rid.bind(*p_5_S00_AXI_rid);
        p_5_S00_AXI_rid->set_sv_netview_offsetfromdp(6835344);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_5_S00_AXI_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_5->S00_AXI_rdata.bind(*p_5_S00_AXI_rdata);
        p_5_S00_AXI_rdata->set_sv_netview_offsetfromdp(6835400);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_5_S00_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_5->S00_AXI_rresp.bind(*p_5_S00_AXI_rresp);
        p_5_S00_AXI_rresp->set_sv_netview_offsetfromdp(6835456);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_S00_AXI_rlast = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->S00_AXI_rlast.bind(*p_5_S00_AXI_rlast);
        p_5_S00_AXI_rlast->set_sv_netview_offsetfromdp(6835512);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_S00_AXI_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->S00_AXI_ruser.bind(*p_5_S00_AXI_ruser);
        p_5_S00_AXI_ruser->set_sv_netview_offsetfromdp(6835568);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_S00_AXI_rvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->S00_AXI_rvalid.bind(*p_5_S00_AXI_rvalid);
        p_5_S00_AXI_rvalid->set_sv_netview_offsetfromdp(6835624);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_S00_AXI_rready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->S00_AXI_rready.bind(*p_5_S00_AXI_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_5_S00_AXI_rready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_S01_AXI_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->S01_AXI_awid.bind(*p_5_S01_AXI_awid);
        (*_glb_hdl_sc_channel_map).push_back(p_5_S01_AXI_awid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_5_S01_AXI_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_5->S01_AXI_awaddr.bind(*p_5_S01_AXI_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_5_S01_AXI_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_5_S01_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_5->S01_AXI_awlen.bind(*p_5_S01_AXI_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_5_S01_AXI_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_5_S01_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_5->S01_AXI_awsize.bind(*p_5_S01_AXI_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_5_S01_AXI_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_5_S01_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_5->S01_AXI_awburst.bind(*p_5_S01_AXI_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_5_S01_AXI_awburst);
        xsim_sc_channel<0, bool > *p_5_S01_AXI_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_5->S01_AXI_awlock.bind(*p_5_S01_AXI_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_5_S01_AXI_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_5_S01_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_5->S01_AXI_awcache.bind(*p_5_S01_AXI_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_5_S01_AXI_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_5_S01_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_5->S01_AXI_awprot.bind(*p_5_S01_AXI_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_5_S01_AXI_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_5_S01_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_5->S01_AXI_awqos.bind(*p_5_S01_AXI_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_5_S01_AXI_awqos);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_S01_AXI_awuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->S01_AXI_awuser.bind(*p_5_S01_AXI_awuser);
        (*_glb_hdl_sc_channel_map).push_back(p_5_S01_AXI_awuser);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_S01_AXI_awvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->S01_AXI_awvalid.bind(*p_5_S01_AXI_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_5_S01_AXI_awvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_S01_AXI_awready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->S01_AXI_awready.bind(*p_5_S01_AXI_awready);
        p_5_S01_AXI_awready->set_sv_netview_offsetfromdp(6836352);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_5_S01_AXI_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_5->S01_AXI_wdata.bind(*p_5_S01_AXI_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_5_S01_AXI_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_5_S01_AXI_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_5->S01_AXI_wstrb.bind(*p_5_S01_AXI_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_5_S01_AXI_wstrb);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_S01_AXI_wlast = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->S01_AXI_wlast.bind(*p_5_S01_AXI_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_5_S01_AXI_wlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_S01_AXI_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->S01_AXI_wuser.bind(*p_5_S01_AXI_wuser);
        (*_glb_hdl_sc_channel_map).push_back(p_5_S01_AXI_wuser);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_S01_AXI_wvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->S01_AXI_wvalid.bind(*p_5_S01_AXI_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_5_S01_AXI_wvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_S01_AXI_wready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->S01_AXI_wready.bind(*p_5_S01_AXI_wready);
        p_5_S01_AXI_wready->set_sv_netview_offsetfromdp(6836688);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_S01_AXI_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->S01_AXI_bid.bind(*p_5_S01_AXI_bid);
        p_5_S01_AXI_bid->set_sv_netview_offsetfromdp(6836744);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_5_S01_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_5->S01_AXI_bresp.bind(*p_5_S01_AXI_bresp);
        p_5_S01_AXI_bresp->set_sv_netview_offsetfromdp(6836800);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_S01_AXI_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->S01_AXI_buser.bind(*p_5_S01_AXI_buser);
        p_5_S01_AXI_buser->set_sv_netview_offsetfromdp(6836856);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_S01_AXI_bvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->S01_AXI_bvalid.bind(*p_5_S01_AXI_bvalid);
        p_5_S01_AXI_bvalid->set_sv_netview_offsetfromdp(6836912);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_S01_AXI_bready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->S01_AXI_bready.bind(*p_5_S01_AXI_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_5_S01_AXI_bready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_S01_AXI_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->S01_AXI_arid.bind(*p_5_S01_AXI_arid);
        (*_glb_hdl_sc_channel_map).push_back(p_5_S01_AXI_arid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_5_S01_AXI_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_5->S01_AXI_araddr.bind(*p_5_S01_AXI_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_5_S01_AXI_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_5_S01_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_5->S01_AXI_arlen.bind(*p_5_S01_AXI_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_5_S01_AXI_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_5_S01_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_5->S01_AXI_arsize.bind(*p_5_S01_AXI_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_5_S01_AXI_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_5_S01_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_5->S01_AXI_arburst.bind(*p_5_S01_AXI_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_5_S01_AXI_arburst);
        xsim_sc_channel<0, bool > *p_5_S01_AXI_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_5->S01_AXI_arlock.bind(*p_5_S01_AXI_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_5_S01_AXI_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_5_S01_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_5->S01_AXI_arcache.bind(*p_5_S01_AXI_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_5_S01_AXI_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_5_S01_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_5->S01_AXI_arprot.bind(*p_5_S01_AXI_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_5_S01_AXI_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_5_S01_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_5->S01_AXI_arqos.bind(*p_5_S01_AXI_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_5_S01_AXI_arqos);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_S01_AXI_aruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->S01_AXI_aruser.bind(*p_5_S01_AXI_aruser);
        (*_glb_hdl_sc_channel_map).push_back(p_5_S01_AXI_aruser);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_S01_AXI_arvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->S01_AXI_arvalid.bind(*p_5_S01_AXI_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_5_S01_AXI_arvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_S01_AXI_arready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->S01_AXI_arready.bind(*p_5_S01_AXI_arready);
        p_5_S01_AXI_arready->set_sv_netview_offsetfromdp(6837640);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_S01_AXI_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->S01_AXI_rid.bind(*p_5_S01_AXI_rid);
        p_5_S01_AXI_rid->set_sv_netview_offsetfromdp(6837696);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_5_S01_AXI_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_5->S01_AXI_rdata.bind(*p_5_S01_AXI_rdata);
        p_5_S01_AXI_rdata->set_sv_netview_offsetfromdp(6837752);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_5_S01_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_5->S01_AXI_rresp.bind(*p_5_S01_AXI_rresp);
        p_5_S01_AXI_rresp->set_sv_netview_offsetfromdp(6837808);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_S01_AXI_rlast = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->S01_AXI_rlast.bind(*p_5_S01_AXI_rlast);
        p_5_S01_AXI_rlast->set_sv_netview_offsetfromdp(6837864);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_S01_AXI_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->S01_AXI_ruser.bind(*p_5_S01_AXI_ruser);
        p_5_S01_AXI_ruser->set_sv_netview_offsetfromdp(6837920);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_S01_AXI_rvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->S01_AXI_rvalid.bind(*p_5_S01_AXI_rvalid);
        p_5_S01_AXI_rvalid->set_sv_netview_offsetfromdp(6837976);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_S01_AXI_rready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->S01_AXI_rready.bind(*p_5_S01_AXI_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_5_S01_AXI_rready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_S02_AXI_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->S02_AXI_awid.bind(*p_5_S02_AXI_awid);
        (*_glb_hdl_sc_channel_map).push_back(p_5_S02_AXI_awid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_5_S02_AXI_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_5->S02_AXI_awaddr.bind(*p_5_S02_AXI_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_5_S02_AXI_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_5_S02_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_5->S02_AXI_awlen.bind(*p_5_S02_AXI_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_5_S02_AXI_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_5_S02_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_5->S02_AXI_awsize.bind(*p_5_S02_AXI_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_5_S02_AXI_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_5_S02_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_5->S02_AXI_awburst.bind(*p_5_S02_AXI_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_5_S02_AXI_awburst);
        xsim_sc_channel<0, bool > *p_5_S02_AXI_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_5->S02_AXI_awlock.bind(*p_5_S02_AXI_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_5_S02_AXI_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_5_S02_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_5->S02_AXI_awcache.bind(*p_5_S02_AXI_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_5_S02_AXI_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_5_S02_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_5->S02_AXI_awprot.bind(*p_5_S02_AXI_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_5_S02_AXI_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_5_S02_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_5->S02_AXI_awqos.bind(*p_5_S02_AXI_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_5_S02_AXI_awqos);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_S02_AXI_awuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->S02_AXI_awuser.bind(*p_5_S02_AXI_awuser);
        (*_glb_hdl_sc_channel_map).push_back(p_5_S02_AXI_awuser);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_S02_AXI_awvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->S02_AXI_awvalid.bind(*p_5_S02_AXI_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_5_S02_AXI_awvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_S02_AXI_awready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->S02_AXI_awready.bind(*p_5_S02_AXI_awready);
        p_5_S02_AXI_awready->set_sv_netview_offsetfromdp(6838704);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_5_S02_AXI_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_5->S02_AXI_wdata.bind(*p_5_S02_AXI_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_5_S02_AXI_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_5_S02_AXI_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_5->S02_AXI_wstrb.bind(*p_5_S02_AXI_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_5_S02_AXI_wstrb);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_S02_AXI_wlast = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->S02_AXI_wlast.bind(*p_5_S02_AXI_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_5_S02_AXI_wlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_S02_AXI_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->S02_AXI_wuser.bind(*p_5_S02_AXI_wuser);
        (*_glb_hdl_sc_channel_map).push_back(p_5_S02_AXI_wuser);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_S02_AXI_wvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->S02_AXI_wvalid.bind(*p_5_S02_AXI_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_5_S02_AXI_wvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_S02_AXI_wready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->S02_AXI_wready.bind(*p_5_S02_AXI_wready);
        p_5_S02_AXI_wready->set_sv_netview_offsetfromdp(6839040);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_S02_AXI_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->S02_AXI_bid.bind(*p_5_S02_AXI_bid);
        p_5_S02_AXI_bid->set_sv_netview_offsetfromdp(6839096);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_5_S02_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_5->S02_AXI_bresp.bind(*p_5_S02_AXI_bresp);
        p_5_S02_AXI_bresp->set_sv_netview_offsetfromdp(6839152);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_S02_AXI_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->S02_AXI_buser.bind(*p_5_S02_AXI_buser);
        p_5_S02_AXI_buser->set_sv_netview_offsetfromdp(6839208);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_S02_AXI_bvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->S02_AXI_bvalid.bind(*p_5_S02_AXI_bvalid);
        p_5_S02_AXI_bvalid->set_sv_netview_offsetfromdp(6839264);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_S02_AXI_bready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->S02_AXI_bready.bind(*p_5_S02_AXI_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_5_S02_AXI_bready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_S02_AXI_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->S02_AXI_arid.bind(*p_5_S02_AXI_arid);
        (*_glb_hdl_sc_channel_map).push_back(p_5_S02_AXI_arid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_5_S02_AXI_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_5->S02_AXI_araddr.bind(*p_5_S02_AXI_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_5_S02_AXI_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_5_S02_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_5->S02_AXI_arlen.bind(*p_5_S02_AXI_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_5_S02_AXI_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_5_S02_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_5->S02_AXI_arsize.bind(*p_5_S02_AXI_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_5_S02_AXI_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_5_S02_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_5->S02_AXI_arburst.bind(*p_5_S02_AXI_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_5_S02_AXI_arburst);
        xsim_sc_channel<0, bool > *p_5_S02_AXI_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_5->S02_AXI_arlock.bind(*p_5_S02_AXI_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_5_S02_AXI_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_5_S02_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_5->S02_AXI_arcache.bind(*p_5_S02_AXI_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_5_S02_AXI_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_5_S02_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_5->S02_AXI_arprot.bind(*p_5_S02_AXI_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_5_S02_AXI_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_5_S02_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_5->S02_AXI_arqos.bind(*p_5_S02_AXI_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_5_S02_AXI_arqos);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_S02_AXI_aruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->S02_AXI_aruser.bind(*p_5_S02_AXI_aruser);
        (*_glb_hdl_sc_channel_map).push_back(p_5_S02_AXI_aruser);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_S02_AXI_arvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->S02_AXI_arvalid.bind(*p_5_S02_AXI_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_5_S02_AXI_arvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_S02_AXI_arready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->S02_AXI_arready.bind(*p_5_S02_AXI_arready);
        p_5_S02_AXI_arready->set_sv_netview_offsetfromdp(6839992);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_S02_AXI_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->S02_AXI_rid.bind(*p_5_S02_AXI_rid);
        p_5_S02_AXI_rid->set_sv_netview_offsetfromdp(6840048);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_5_S02_AXI_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_5->S02_AXI_rdata.bind(*p_5_S02_AXI_rdata);
        p_5_S02_AXI_rdata->set_sv_netview_offsetfromdp(6840104);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_5_S02_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_5->S02_AXI_rresp.bind(*p_5_S02_AXI_rresp);
        p_5_S02_AXI_rresp->set_sv_netview_offsetfromdp(6840160);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_S02_AXI_rlast = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->S02_AXI_rlast.bind(*p_5_S02_AXI_rlast);
        p_5_S02_AXI_rlast->set_sv_netview_offsetfromdp(6840216);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_S02_AXI_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->S02_AXI_ruser.bind(*p_5_S02_AXI_ruser);
        p_5_S02_AXI_ruser->set_sv_netview_offsetfromdp(6840272);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_S02_AXI_rvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->S02_AXI_rvalid.bind(*p_5_S02_AXI_rvalid);
        p_5_S02_AXI_rvalid->set_sv_netview_offsetfromdp(6840328);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_S02_AXI_rready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->S02_AXI_rready.bind(*p_5_S02_AXI_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_5_S02_AXI_rready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_S03_AXI_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->S03_AXI_awid.bind(*p_5_S03_AXI_awid);
        (*_glb_hdl_sc_channel_map).push_back(p_5_S03_AXI_awid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_5_S03_AXI_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_5->S03_AXI_awaddr.bind(*p_5_S03_AXI_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_5_S03_AXI_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_5_S03_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_5->S03_AXI_awlen.bind(*p_5_S03_AXI_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_5_S03_AXI_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_5_S03_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_5->S03_AXI_awsize.bind(*p_5_S03_AXI_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_5_S03_AXI_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_5_S03_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_5->S03_AXI_awburst.bind(*p_5_S03_AXI_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_5_S03_AXI_awburst);
        xsim_sc_channel<0, bool > *p_5_S03_AXI_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_5->S03_AXI_awlock.bind(*p_5_S03_AXI_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_5_S03_AXI_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_5_S03_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_5->S03_AXI_awcache.bind(*p_5_S03_AXI_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_5_S03_AXI_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_5_S03_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_5->S03_AXI_awprot.bind(*p_5_S03_AXI_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_5_S03_AXI_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_5_S03_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_5->S03_AXI_awqos.bind(*p_5_S03_AXI_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_5_S03_AXI_awqos);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_S03_AXI_awuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->S03_AXI_awuser.bind(*p_5_S03_AXI_awuser);
        (*_glb_hdl_sc_channel_map).push_back(p_5_S03_AXI_awuser);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_S03_AXI_awvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->S03_AXI_awvalid.bind(*p_5_S03_AXI_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_5_S03_AXI_awvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_S03_AXI_awready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->S03_AXI_awready.bind(*p_5_S03_AXI_awready);
        p_5_S03_AXI_awready->set_sv_netview_offsetfromdp(6841056);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_5_S03_AXI_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_5->S03_AXI_wdata.bind(*p_5_S03_AXI_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_5_S03_AXI_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_5_S03_AXI_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_5->S03_AXI_wstrb.bind(*p_5_S03_AXI_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_5_S03_AXI_wstrb);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_S03_AXI_wlast = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->S03_AXI_wlast.bind(*p_5_S03_AXI_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_5_S03_AXI_wlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_S03_AXI_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->S03_AXI_wuser.bind(*p_5_S03_AXI_wuser);
        (*_glb_hdl_sc_channel_map).push_back(p_5_S03_AXI_wuser);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_S03_AXI_wvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->S03_AXI_wvalid.bind(*p_5_S03_AXI_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_5_S03_AXI_wvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_S03_AXI_wready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->S03_AXI_wready.bind(*p_5_S03_AXI_wready);
        p_5_S03_AXI_wready->set_sv_netview_offsetfromdp(6841392);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_S03_AXI_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->S03_AXI_bid.bind(*p_5_S03_AXI_bid);
        p_5_S03_AXI_bid->set_sv_netview_offsetfromdp(6841448);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_5_S03_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_5->S03_AXI_bresp.bind(*p_5_S03_AXI_bresp);
        p_5_S03_AXI_bresp->set_sv_netview_offsetfromdp(6841504);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_S03_AXI_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->S03_AXI_buser.bind(*p_5_S03_AXI_buser);
        p_5_S03_AXI_buser->set_sv_netview_offsetfromdp(6841560);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_S03_AXI_bvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->S03_AXI_bvalid.bind(*p_5_S03_AXI_bvalid);
        p_5_S03_AXI_bvalid->set_sv_netview_offsetfromdp(6841616);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_S03_AXI_bready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->S03_AXI_bready.bind(*p_5_S03_AXI_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_5_S03_AXI_bready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_S03_AXI_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->S03_AXI_arid.bind(*p_5_S03_AXI_arid);
        (*_glb_hdl_sc_channel_map).push_back(p_5_S03_AXI_arid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_5_S03_AXI_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_5->S03_AXI_araddr.bind(*p_5_S03_AXI_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_5_S03_AXI_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_5_S03_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_5->S03_AXI_arlen.bind(*p_5_S03_AXI_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_5_S03_AXI_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_5_S03_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_5->S03_AXI_arsize.bind(*p_5_S03_AXI_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_5_S03_AXI_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_5_S03_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_5->S03_AXI_arburst.bind(*p_5_S03_AXI_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_5_S03_AXI_arburst);
        xsim_sc_channel<0, bool > *p_5_S03_AXI_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_5->S03_AXI_arlock.bind(*p_5_S03_AXI_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_5_S03_AXI_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_5_S03_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_5->S03_AXI_arcache.bind(*p_5_S03_AXI_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_5_S03_AXI_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_5_S03_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_5->S03_AXI_arprot.bind(*p_5_S03_AXI_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_5_S03_AXI_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_5_S03_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_5->S03_AXI_arqos.bind(*p_5_S03_AXI_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_5_S03_AXI_arqos);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_S03_AXI_aruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->S03_AXI_aruser.bind(*p_5_S03_AXI_aruser);
        (*_glb_hdl_sc_channel_map).push_back(p_5_S03_AXI_aruser);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_S03_AXI_arvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->S03_AXI_arvalid.bind(*p_5_S03_AXI_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_5_S03_AXI_arvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_S03_AXI_arready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->S03_AXI_arready.bind(*p_5_S03_AXI_arready);
        p_5_S03_AXI_arready->set_sv_netview_offsetfromdp(6842344);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_S03_AXI_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->S03_AXI_rid.bind(*p_5_S03_AXI_rid);
        p_5_S03_AXI_rid->set_sv_netview_offsetfromdp(6842400);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_5_S03_AXI_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_5->S03_AXI_rdata.bind(*p_5_S03_AXI_rdata);
        p_5_S03_AXI_rdata->set_sv_netview_offsetfromdp(6842456);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_5_S03_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_5->S03_AXI_rresp.bind(*p_5_S03_AXI_rresp);
        p_5_S03_AXI_rresp->set_sv_netview_offsetfromdp(6842512);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_S03_AXI_rlast = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->S03_AXI_rlast.bind(*p_5_S03_AXI_rlast);
        p_5_S03_AXI_rlast->set_sv_netview_offsetfromdp(6842568);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_S03_AXI_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->S03_AXI_ruser.bind(*p_5_S03_AXI_ruser);
        p_5_S03_AXI_ruser->set_sv_netview_offsetfromdp(6842624);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_S03_AXI_rvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->S03_AXI_rvalid.bind(*p_5_S03_AXI_rvalid);
        p_5_S03_AXI_rvalid->set_sv_netview_offsetfromdp(6842680);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_S03_AXI_rready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->S03_AXI_rready.bind(*p_5_S03_AXI_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_5_S03_AXI_rready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_5_S04_AXI_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_5->S04_AXI_awaddr.bind(*p_5_S04_AXI_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_5_S04_AXI_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_5_S04_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_5->S04_AXI_awlen.bind(*p_5_S04_AXI_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_5_S04_AXI_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_5_S04_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_5->S04_AXI_awsize.bind(*p_5_S04_AXI_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_5_S04_AXI_awsize);
        xsim_sc_channel<0, bool > *p_5_S04_AXI_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_5->S04_AXI_awlock.bind(*p_5_S04_AXI_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_5_S04_AXI_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_5_S04_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_5->S04_AXI_awcache.bind(*p_5_S04_AXI_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_5_S04_AXI_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_5_S04_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_5->S04_AXI_awprot.bind(*p_5_S04_AXI_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_5_S04_AXI_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_5_S04_AXI_awregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_5->S04_AXI_awregion.bind(*p_5_S04_AXI_awregion);
        (*_glb_hdl_sc_channel_map).push_back(p_5_S04_AXI_awregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_5_S04_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_5->S04_AXI_awqos.bind(*p_5_S04_AXI_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_5_S04_AXI_awqos);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_S04_AXI_awvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->S04_AXI_awvalid.bind(*p_5_S04_AXI_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_5_S04_AXI_awvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_S04_AXI_awready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->S04_AXI_awready.bind(*p_5_S04_AXI_awready);
        p_5_S04_AXI_awready->set_sv_netview_offsetfromdp(6843296);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_5_S04_AXI_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_5->S04_AXI_wdata.bind(*p_5_S04_AXI_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_5_S04_AXI_wdata);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_5_S04_AXI_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_5->S04_AXI_wstrb.bind(*p_5_S04_AXI_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_5_S04_AXI_wstrb);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_S04_AXI_wlast = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->S04_AXI_wlast.bind(*p_5_S04_AXI_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_5_S04_AXI_wlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_S04_AXI_wvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->S04_AXI_wvalid.bind(*p_5_S04_AXI_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_5_S04_AXI_wvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_S04_AXI_wready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->S04_AXI_wready.bind(*p_5_S04_AXI_wready);
        p_5_S04_AXI_wready->set_sv_netview_offsetfromdp(6843576);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_5_S04_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_5->S04_AXI_bresp.bind(*p_5_S04_AXI_bresp);
        p_5_S04_AXI_bresp->set_sv_netview_offsetfromdp(6843632);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_S04_AXI_bvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->S04_AXI_bvalid.bind(*p_5_S04_AXI_bvalid);
        p_5_S04_AXI_bvalid->set_sv_netview_offsetfromdp(6843688);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_S04_AXI_bready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->S04_AXI_bready.bind(*p_5_S04_AXI_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_5_S04_AXI_bready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_5_S04_AXI_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_5->S04_AXI_araddr.bind(*p_5_S04_AXI_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_5_S04_AXI_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_5_S04_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_5->S04_AXI_arlen.bind(*p_5_S04_AXI_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_5_S04_AXI_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_5_S04_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_5->S04_AXI_arsize.bind(*p_5_S04_AXI_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_5_S04_AXI_arsize);
        xsim_sc_channel<0, bool > *p_5_S04_AXI_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_5->S04_AXI_arlock.bind(*p_5_S04_AXI_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_5_S04_AXI_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_5_S04_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_5->S04_AXI_arcache.bind(*p_5_S04_AXI_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_5_S04_AXI_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_5_S04_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_5->S04_AXI_arprot.bind(*p_5_S04_AXI_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_5_S04_AXI_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_5_S04_AXI_arregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_5->S04_AXI_arregion.bind(*p_5_S04_AXI_arregion);
        (*_glb_hdl_sc_channel_map).push_back(p_5_S04_AXI_arregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_5_S04_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_5->S04_AXI_arqos.bind(*p_5_S04_AXI_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_5_S04_AXI_arqos);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_S04_AXI_arvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->S04_AXI_arvalid.bind(*p_5_S04_AXI_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_5_S04_AXI_arvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_S04_AXI_arready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->S04_AXI_arready.bind(*p_5_S04_AXI_arready);
        p_5_S04_AXI_arready->set_sv_netview_offsetfromdp(6844304);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_5_S04_AXI_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_5->S04_AXI_rdata.bind(*p_5_S04_AXI_rdata);
        p_5_S04_AXI_rdata->set_sv_netview_offsetfromdp(6844360);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_5_S04_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_5->S04_AXI_rresp.bind(*p_5_S04_AXI_rresp);
        p_5_S04_AXI_rresp->set_sv_netview_offsetfromdp(6844416);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_S04_AXI_rlast = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->S04_AXI_rlast.bind(*p_5_S04_AXI_rlast);
        p_5_S04_AXI_rlast->set_sv_netview_offsetfromdp(6844472);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_S04_AXI_rvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->S04_AXI_rvalid.bind(*p_5_S04_AXI_rvalid);
        p_5_S04_AXI_rvalid->set_sv_netview_offsetfromdp(6844528);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_S04_AXI_rready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->S04_AXI_rready.bind(*p_5_S04_AXI_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_5_S04_AXI_rready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_5_S05_AXI_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_5->S05_AXI_awaddr.bind(*p_5_S05_AXI_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_5_S05_AXI_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_5_S05_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_5->S05_AXI_awlen.bind(*p_5_S05_AXI_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_5_S05_AXI_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_5_S05_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_5->S05_AXI_awsize.bind(*p_5_S05_AXI_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_5_S05_AXI_awsize);
        xsim_sc_channel<0, bool > *p_5_S05_AXI_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_5->S05_AXI_awlock.bind(*p_5_S05_AXI_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_5_S05_AXI_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_5_S05_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_5->S05_AXI_awcache.bind(*p_5_S05_AXI_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_5_S05_AXI_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_5_S05_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_5->S05_AXI_awprot.bind(*p_5_S05_AXI_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_5_S05_AXI_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_5_S05_AXI_awregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_5->S05_AXI_awregion.bind(*p_5_S05_AXI_awregion);
        (*_glb_hdl_sc_channel_map).push_back(p_5_S05_AXI_awregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_5_S05_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_5->S05_AXI_awqos.bind(*p_5_S05_AXI_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_5_S05_AXI_awqos);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_S05_AXI_awvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->S05_AXI_awvalid.bind(*p_5_S05_AXI_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_5_S05_AXI_awvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_S05_AXI_awready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->S05_AXI_awready.bind(*p_5_S05_AXI_awready);
        p_5_S05_AXI_awready->set_sv_netview_offsetfromdp(6845144);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_5_S05_AXI_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_5->S05_AXI_wdata.bind(*p_5_S05_AXI_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_5_S05_AXI_wdata);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_5_S05_AXI_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_5->S05_AXI_wstrb.bind(*p_5_S05_AXI_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_5_S05_AXI_wstrb);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_S05_AXI_wlast = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->S05_AXI_wlast.bind(*p_5_S05_AXI_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_5_S05_AXI_wlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_S05_AXI_wvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->S05_AXI_wvalid.bind(*p_5_S05_AXI_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_5_S05_AXI_wvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_S05_AXI_wready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->S05_AXI_wready.bind(*p_5_S05_AXI_wready);
        p_5_S05_AXI_wready->set_sv_netview_offsetfromdp(6845424);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_5_S05_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_5->S05_AXI_bresp.bind(*p_5_S05_AXI_bresp);
        p_5_S05_AXI_bresp->set_sv_netview_offsetfromdp(6845480);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_S05_AXI_bvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->S05_AXI_bvalid.bind(*p_5_S05_AXI_bvalid);
        p_5_S05_AXI_bvalid->set_sv_netview_offsetfromdp(6845536);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_S05_AXI_bready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->S05_AXI_bready.bind(*p_5_S05_AXI_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_5_S05_AXI_bready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_5_S05_AXI_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_5->S05_AXI_araddr.bind(*p_5_S05_AXI_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_5_S05_AXI_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_5_S05_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_5->S05_AXI_arlen.bind(*p_5_S05_AXI_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_5_S05_AXI_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_5_S05_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_5->S05_AXI_arsize.bind(*p_5_S05_AXI_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_5_S05_AXI_arsize);
        xsim_sc_channel<0, bool > *p_5_S05_AXI_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_5->S05_AXI_arlock.bind(*p_5_S05_AXI_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_5_S05_AXI_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_5_S05_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_5->S05_AXI_arcache.bind(*p_5_S05_AXI_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_5_S05_AXI_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_5_S05_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_5->S05_AXI_arprot.bind(*p_5_S05_AXI_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_5_S05_AXI_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_5_S05_AXI_arregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_5->S05_AXI_arregion.bind(*p_5_S05_AXI_arregion);
        (*_glb_hdl_sc_channel_map).push_back(p_5_S05_AXI_arregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_5_S05_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_5->S05_AXI_arqos.bind(*p_5_S05_AXI_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_5_S05_AXI_arqos);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_S05_AXI_arvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->S05_AXI_arvalid.bind(*p_5_S05_AXI_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_5_S05_AXI_arvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_S05_AXI_arready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->S05_AXI_arready.bind(*p_5_S05_AXI_arready);
        p_5_S05_AXI_arready->set_sv_netview_offsetfromdp(6846152);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_5_S05_AXI_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_5->S05_AXI_rdata.bind(*p_5_S05_AXI_rdata);
        p_5_S05_AXI_rdata->set_sv_netview_offsetfromdp(6846208);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_5_S05_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_5->S05_AXI_rresp.bind(*p_5_S05_AXI_rresp);
        p_5_S05_AXI_rresp->set_sv_netview_offsetfromdp(6846264);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_S05_AXI_rlast = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->S05_AXI_rlast.bind(*p_5_S05_AXI_rlast);
        p_5_S05_AXI_rlast->set_sv_netview_offsetfromdp(6846320);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_S05_AXI_rvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->S05_AXI_rvalid.bind(*p_5_S05_AXI_rvalid);
        p_5_S05_AXI_rvalid->set_sv_netview_offsetfromdp(6846376);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_S05_AXI_rready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->S05_AXI_rready.bind(*p_5_S05_AXI_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_5_S05_AXI_rready);
        xsim_sc_channel<0, bool > *p_5_ddr4_mem_calib_complete = new xsim_sc_channel<0, bool >();
        sc_inst_5->ddr4_mem_calib_complete.bind(*p_5_ddr4_mem_calib_complete);
        p_5_ddr4_mem_calib_complete->set_sv_netview_offsetfromdp(6846488);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_5_M00_AXI_awid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_5->M00_AXI_awid.bind(*p_5_M00_AXI_awid);
        p_5_M00_AXI_awid->set_sv_netview_offsetfromdp(6846544);
        xsim_sc_channel<34, sc_dt::sc_bv<34> > *p_5_M00_AXI_awaddr = new xsim_sc_channel<34, sc_dt::sc_bv<34> >();
        sc_inst_5->M00_AXI_awaddr.bind(*p_5_M00_AXI_awaddr);
        p_5_M00_AXI_awaddr->set_sv_netview_offsetfromdp(6846600);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_5_M00_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_5->M00_AXI_awlen.bind(*p_5_M00_AXI_awlen);
        p_5_M00_AXI_awlen->set_sv_netview_offsetfromdp(6846656);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_5_M00_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_5->M00_AXI_awsize.bind(*p_5_M00_AXI_awsize);
        p_5_M00_AXI_awsize->set_sv_netview_offsetfromdp(6846712);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_5_M00_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_5->M00_AXI_awburst.bind(*p_5_M00_AXI_awburst);
        p_5_M00_AXI_awburst->set_sv_netview_offsetfromdp(6846768);
        xsim_sc_channel<0, bool > *p_5_M00_AXI_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_5->M00_AXI_awlock.bind(*p_5_M00_AXI_awlock);
        p_5_M00_AXI_awlock->set_sv_netview_offsetfromdp(6846824);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_5_M00_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_5->M00_AXI_awcache.bind(*p_5_M00_AXI_awcache);
        p_5_M00_AXI_awcache->set_sv_netview_offsetfromdp(6846880);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_5_M00_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_5->M00_AXI_awprot.bind(*p_5_M00_AXI_awprot);
        p_5_M00_AXI_awprot->set_sv_netview_offsetfromdp(6846936);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_5_M00_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_5->M00_AXI_awqos.bind(*p_5_M00_AXI_awqos);
        p_5_M00_AXI_awqos->set_sv_netview_offsetfromdp(6846992);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_5_M00_AXI_awuser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_5->M00_AXI_awuser.bind(*p_5_M00_AXI_awuser);
        p_5_M00_AXI_awuser->set_sv_netview_offsetfromdp(6847048);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_M00_AXI_awvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->M00_AXI_awvalid.bind(*p_5_M00_AXI_awvalid);
        p_5_M00_AXI_awvalid->set_sv_netview_offsetfromdp(6847104);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_M00_AXI_awready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->M00_AXI_awready.bind(*p_5_M00_AXI_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_5_M00_AXI_awready);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_5_M00_AXI_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_5->M00_AXI_wdata.bind(*p_5_M00_AXI_wdata);
        p_5_M00_AXI_wdata->set_sv_netview_offsetfromdp(6847216);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_5_M00_AXI_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_5->M00_AXI_wstrb.bind(*p_5_M00_AXI_wstrb);
        p_5_M00_AXI_wstrb->set_sv_netview_offsetfromdp(6847272);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_M00_AXI_wlast = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->M00_AXI_wlast.bind(*p_5_M00_AXI_wlast);
        p_5_M00_AXI_wlast->set_sv_netview_offsetfromdp(6847328);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_M00_AXI_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->M00_AXI_wuser.bind(*p_5_M00_AXI_wuser);
        p_5_M00_AXI_wuser->set_sv_netview_offsetfromdp(6847384);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_M00_AXI_wvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->M00_AXI_wvalid.bind(*p_5_M00_AXI_wvalid);
        p_5_M00_AXI_wvalid->set_sv_netview_offsetfromdp(6847440);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_M00_AXI_wready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->M00_AXI_wready.bind(*p_5_M00_AXI_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_5_M00_AXI_wready);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_5_M00_AXI_bid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_5->M00_AXI_bid.bind(*p_5_M00_AXI_bid);
        (*_glb_hdl_sc_channel_map).push_back(p_5_M00_AXI_bid);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_5_M00_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_5->M00_AXI_bresp.bind(*p_5_M00_AXI_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_5_M00_AXI_bresp);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_M00_AXI_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->M00_AXI_buser.bind(*p_5_M00_AXI_buser);
        (*_glb_hdl_sc_channel_map).push_back(p_5_M00_AXI_buser);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_M00_AXI_bvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->M00_AXI_bvalid.bind(*p_5_M00_AXI_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_5_M00_AXI_bvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_M00_AXI_bready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->M00_AXI_bready.bind(*p_5_M00_AXI_bready);
        p_5_M00_AXI_bready->set_sv_netview_offsetfromdp(6847776);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_5_M00_AXI_arid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_5->M00_AXI_arid.bind(*p_5_M00_AXI_arid);
        p_5_M00_AXI_arid->set_sv_netview_offsetfromdp(6847832);
        xsim_sc_channel<34, sc_dt::sc_bv<34> > *p_5_M00_AXI_araddr = new xsim_sc_channel<34, sc_dt::sc_bv<34> >();
        sc_inst_5->M00_AXI_araddr.bind(*p_5_M00_AXI_araddr);
        p_5_M00_AXI_araddr->set_sv_netview_offsetfromdp(6847888);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_5_M00_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_5->M00_AXI_arlen.bind(*p_5_M00_AXI_arlen);
        p_5_M00_AXI_arlen->set_sv_netview_offsetfromdp(6847944);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_5_M00_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_5->M00_AXI_arsize.bind(*p_5_M00_AXI_arsize);
        p_5_M00_AXI_arsize->set_sv_netview_offsetfromdp(6848000);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_5_M00_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_5->M00_AXI_arburst.bind(*p_5_M00_AXI_arburst);
        p_5_M00_AXI_arburst->set_sv_netview_offsetfromdp(6848056);
        xsim_sc_channel<0, bool > *p_5_M00_AXI_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_5->M00_AXI_arlock.bind(*p_5_M00_AXI_arlock);
        p_5_M00_AXI_arlock->set_sv_netview_offsetfromdp(6848112);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_5_M00_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_5->M00_AXI_arcache.bind(*p_5_M00_AXI_arcache);
        p_5_M00_AXI_arcache->set_sv_netview_offsetfromdp(6848168);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_5_M00_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_5->M00_AXI_arprot.bind(*p_5_M00_AXI_arprot);
        p_5_M00_AXI_arprot->set_sv_netview_offsetfromdp(6848224);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_5_M00_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_5->M00_AXI_arqos.bind(*p_5_M00_AXI_arqos);
        p_5_M00_AXI_arqos->set_sv_netview_offsetfromdp(6848280);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_5_M00_AXI_aruser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_5->M00_AXI_aruser.bind(*p_5_M00_AXI_aruser);
        p_5_M00_AXI_aruser->set_sv_netview_offsetfromdp(6848336);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_M00_AXI_arvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->M00_AXI_arvalid.bind(*p_5_M00_AXI_arvalid);
        p_5_M00_AXI_arvalid->set_sv_netview_offsetfromdp(6848392);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_M00_AXI_arready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->M00_AXI_arready.bind(*p_5_M00_AXI_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_5_M00_AXI_arready);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_5_M00_AXI_rid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_5->M00_AXI_rid.bind(*p_5_M00_AXI_rid);
        (*_glb_hdl_sc_channel_map).push_back(p_5_M00_AXI_rid);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_5_M00_AXI_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_5->M00_AXI_rdata.bind(*p_5_M00_AXI_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_5_M00_AXI_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_5_M00_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_5->M00_AXI_rresp.bind(*p_5_M00_AXI_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_5_M00_AXI_rresp);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_M00_AXI_rlast = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->M00_AXI_rlast.bind(*p_5_M00_AXI_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_5_M00_AXI_rlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_M00_AXI_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->M00_AXI_ruser.bind(*p_5_M00_AXI_ruser);
        (*_glb_hdl_sc_channel_map).push_back(p_5_M00_AXI_ruser);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_M00_AXI_rvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->M00_AXI_rvalid.bind(*p_5_M00_AXI_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_5_M00_AXI_rvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_M00_AXI_rready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->M00_AXI_rready.bind(*p_5_M00_AXI_rready);
        p_5_M00_AXI_rready->set_sv_netview_offsetfromdp(6848840);
        xsim_sc_channel<35, sc_dt::sc_bv<35> > *p_5_M01_AXI_awaddr = new xsim_sc_channel<35, sc_dt::sc_bv<35> >();
        sc_inst_5->M01_AXI_awaddr.bind(*p_5_M01_AXI_awaddr);
        p_5_M01_AXI_awaddr->set_sv_netview_offsetfromdp(6848896);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_5_M01_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_5->M01_AXI_awlen.bind(*p_5_M01_AXI_awlen);
        p_5_M01_AXI_awlen->set_sv_netview_offsetfromdp(6848952);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_5_M01_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_5->M01_AXI_awsize.bind(*p_5_M01_AXI_awsize);
        p_5_M01_AXI_awsize->set_sv_netview_offsetfromdp(6849008);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_5_M01_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_5->M01_AXI_awburst.bind(*p_5_M01_AXI_awburst);
        p_5_M01_AXI_awburst->set_sv_netview_offsetfromdp(6849064);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_5_M01_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_5->M01_AXI_awprot.bind(*p_5_M01_AXI_awprot);
        p_5_M01_AXI_awprot->set_sv_netview_offsetfromdp(6849120);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_M01_AXI_awvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->M01_AXI_awvalid.bind(*p_5_M01_AXI_awvalid);
        p_5_M01_AXI_awvalid->set_sv_netview_offsetfromdp(6849176);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_M01_AXI_awready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->M01_AXI_awready.bind(*p_5_M01_AXI_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_5_M01_AXI_awready);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_5_M01_AXI_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_5->M01_AXI_wdata.bind(*p_5_M01_AXI_wdata);
        p_5_M01_AXI_wdata->set_sv_netview_offsetfromdp(6849288);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_5_M01_AXI_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_5->M01_AXI_wstrb.bind(*p_5_M01_AXI_wstrb);
        p_5_M01_AXI_wstrb->set_sv_netview_offsetfromdp(6849344);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_M01_AXI_wlast = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->M01_AXI_wlast.bind(*p_5_M01_AXI_wlast);
        p_5_M01_AXI_wlast->set_sv_netview_offsetfromdp(6849400);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_M01_AXI_wvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->M01_AXI_wvalid.bind(*p_5_M01_AXI_wvalid);
        p_5_M01_AXI_wvalid->set_sv_netview_offsetfromdp(6849456);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_M01_AXI_wready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->M01_AXI_wready.bind(*p_5_M01_AXI_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_5_M01_AXI_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_5_M01_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_5->M01_AXI_bresp.bind(*p_5_M01_AXI_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_5_M01_AXI_bresp);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_M01_AXI_bvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->M01_AXI_bvalid.bind(*p_5_M01_AXI_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_5_M01_AXI_bvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_M01_AXI_bready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->M01_AXI_bready.bind(*p_5_M01_AXI_bready);
        p_5_M01_AXI_bready->set_sv_netview_offsetfromdp(6849680);
        xsim_sc_channel<35, sc_dt::sc_bv<35> > *p_5_M01_AXI_araddr = new xsim_sc_channel<35, sc_dt::sc_bv<35> >();
        sc_inst_5->M01_AXI_araddr.bind(*p_5_M01_AXI_araddr);
        p_5_M01_AXI_araddr->set_sv_netview_offsetfromdp(6849736);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_5_M01_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_5->M01_AXI_arlen.bind(*p_5_M01_AXI_arlen);
        p_5_M01_AXI_arlen->set_sv_netview_offsetfromdp(6849792);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_5_M01_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_5->M01_AXI_arsize.bind(*p_5_M01_AXI_arsize);
        p_5_M01_AXI_arsize->set_sv_netview_offsetfromdp(6849848);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_5_M01_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_5->M01_AXI_arburst.bind(*p_5_M01_AXI_arburst);
        p_5_M01_AXI_arburst->set_sv_netview_offsetfromdp(6849904);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_5_M01_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_5->M01_AXI_arprot.bind(*p_5_M01_AXI_arprot);
        p_5_M01_AXI_arprot->set_sv_netview_offsetfromdp(6849960);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_M01_AXI_arvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->M01_AXI_arvalid.bind(*p_5_M01_AXI_arvalid);
        p_5_M01_AXI_arvalid->set_sv_netview_offsetfromdp(6850016);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_M01_AXI_arready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->M01_AXI_arready.bind(*p_5_M01_AXI_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_5_M01_AXI_arready);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_5_M01_AXI_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_5->M01_AXI_rdata.bind(*p_5_M01_AXI_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_5_M01_AXI_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_5_M01_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_5->M01_AXI_rresp.bind(*p_5_M01_AXI_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_5_M01_AXI_rresp);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_M01_AXI_rlast = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->M01_AXI_rlast.bind(*p_5_M01_AXI_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_5_M01_AXI_rlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_M01_AXI_rvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->M01_AXI_rvalid.bind(*p_5_M01_AXI_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_5_M01_AXI_rvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_M01_AXI_rready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->M01_AXI_rready.bind(*p_5_M01_AXI_rready);
        p_5_M01_AXI_rready->set_sv_netview_offsetfromdp(6850352);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_5_M02_AXI_awid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_5->M02_AXI_awid.bind(*p_5_M02_AXI_awid);
        p_5_M02_AXI_awid->set_sv_netview_offsetfromdp(6850408);
        xsim_sc_channel<34, sc_dt::sc_bv<34> > *p_5_M02_AXI_awaddr = new xsim_sc_channel<34, sc_dt::sc_bv<34> >();
        sc_inst_5->M02_AXI_awaddr.bind(*p_5_M02_AXI_awaddr);
        p_5_M02_AXI_awaddr->set_sv_netview_offsetfromdp(6850464);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_5_M02_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_5->M02_AXI_awlen.bind(*p_5_M02_AXI_awlen);
        p_5_M02_AXI_awlen->set_sv_netview_offsetfromdp(6850520);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_5_M02_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_5->M02_AXI_awsize.bind(*p_5_M02_AXI_awsize);
        p_5_M02_AXI_awsize->set_sv_netview_offsetfromdp(6850576);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_5_M02_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_5->M02_AXI_awburst.bind(*p_5_M02_AXI_awburst);
        p_5_M02_AXI_awburst->set_sv_netview_offsetfromdp(6850632);
        xsim_sc_channel<0, bool > *p_5_M02_AXI_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_5->M02_AXI_awlock.bind(*p_5_M02_AXI_awlock);
        p_5_M02_AXI_awlock->set_sv_netview_offsetfromdp(6850688);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_5_M02_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_5->M02_AXI_awcache.bind(*p_5_M02_AXI_awcache);
        p_5_M02_AXI_awcache->set_sv_netview_offsetfromdp(6850744);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_5_M02_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_5->M02_AXI_awprot.bind(*p_5_M02_AXI_awprot);
        p_5_M02_AXI_awprot->set_sv_netview_offsetfromdp(6850800);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_5_M02_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_5->M02_AXI_awqos.bind(*p_5_M02_AXI_awqos);
        p_5_M02_AXI_awqos->set_sv_netview_offsetfromdp(6850856);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_5_M02_AXI_awuser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_5->M02_AXI_awuser.bind(*p_5_M02_AXI_awuser);
        p_5_M02_AXI_awuser->set_sv_netview_offsetfromdp(6850912);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_M02_AXI_awvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->M02_AXI_awvalid.bind(*p_5_M02_AXI_awvalid);
        p_5_M02_AXI_awvalid->set_sv_netview_offsetfromdp(6850968);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_M02_AXI_awready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->M02_AXI_awready.bind(*p_5_M02_AXI_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_5_M02_AXI_awready);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_5_M02_AXI_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_5->M02_AXI_wdata.bind(*p_5_M02_AXI_wdata);
        p_5_M02_AXI_wdata->set_sv_netview_offsetfromdp(6851080);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_5_M02_AXI_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_5->M02_AXI_wstrb.bind(*p_5_M02_AXI_wstrb);
        p_5_M02_AXI_wstrb->set_sv_netview_offsetfromdp(6851136);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_M02_AXI_wlast = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->M02_AXI_wlast.bind(*p_5_M02_AXI_wlast);
        p_5_M02_AXI_wlast->set_sv_netview_offsetfromdp(6851192);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_M02_AXI_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->M02_AXI_wuser.bind(*p_5_M02_AXI_wuser);
        p_5_M02_AXI_wuser->set_sv_netview_offsetfromdp(6851248);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_M02_AXI_wvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->M02_AXI_wvalid.bind(*p_5_M02_AXI_wvalid);
        p_5_M02_AXI_wvalid->set_sv_netview_offsetfromdp(6851304);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_M02_AXI_wready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->M02_AXI_wready.bind(*p_5_M02_AXI_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_5_M02_AXI_wready);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_5_M02_AXI_bid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_5->M02_AXI_bid.bind(*p_5_M02_AXI_bid);
        (*_glb_hdl_sc_channel_map).push_back(p_5_M02_AXI_bid);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_5_M02_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_5->M02_AXI_bresp.bind(*p_5_M02_AXI_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_5_M02_AXI_bresp);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_M02_AXI_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->M02_AXI_buser.bind(*p_5_M02_AXI_buser);
        (*_glb_hdl_sc_channel_map).push_back(p_5_M02_AXI_buser);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_M02_AXI_bvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->M02_AXI_bvalid.bind(*p_5_M02_AXI_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_5_M02_AXI_bvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_M02_AXI_bready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->M02_AXI_bready.bind(*p_5_M02_AXI_bready);
        p_5_M02_AXI_bready->set_sv_netview_offsetfromdp(6851640);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_5_M02_AXI_arid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_5->M02_AXI_arid.bind(*p_5_M02_AXI_arid);
        p_5_M02_AXI_arid->set_sv_netview_offsetfromdp(6851696);
        xsim_sc_channel<34, sc_dt::sc_bv<34> > *p_5_M02_AXI_araddr = new xsim_sc_channel<34, sc_dt::sc_bv<34> >();
        sc_inst_5->M02_AXI_araddr.bind(*p_5_M02_AXI_araddr);
        p_5_M02_AXI_araddr->set_sv_netview_offsetfromdp(6851752);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_5_M02_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_5->M02_AXI_arlen.bind(*p_5_M02_AXI_arlen);
        p_5_M02_AXI_arlen->set_sv_netview_offsetfromdp(6851808);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_5_M02_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_5->M02_AXI_arsize.bind(*p_5_M02_AXI_arsize);
        p_5_M02_AXI_arsize->set_sv_netview_offsetfromdp(6851864);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_5_M02_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_5->M02_AXI_arburst.bind(*p_5_M02_AXI_arburst);
        p_5_M02_AXI_arburst->set_sv_netview_offsetfromdp(6851920);
        xsim_sc_channel<0, bool > *p_5_M02_AXI_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_5->M02_AXI_arlock.bind(*p_5_M02_AXI_arlock);
        p_5_M02_AXI_arlock->set_sv_netview_offsetfromdp(6851976);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_5_M02_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_5->M02_AXI_arcache.bind(*p_5_M02_AXI_arcache);
        p_5_M02_AXI_arcache->set_sv_netview_offsetfromdp(6852032);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_5_M02_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_5->M02_AXI_arprot.bind(*p_5_M02_AXI_arprot);
        p_5_M02_AXI_arprot->set_sv_netview_offsetfromdp(6852088);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_5_M02_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_5->M02_AXI_arqos.bind(*p_5_M02_AXI_arqos);
        p_5_M02_AXI_arqos->set_sv_netview_offsetfromdp(6852144);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_5_M02_AXI_aruser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_5->M02_AXI_aruser.bind(*p_5_M02_AXI_aruser);
        p_5_M02_AXI_aruser->set_sv_netview_offsetfromdp(6852200);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_M02_AXI_arvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->M02_AXI_arvalid.bind(*p_5_M02_AXI_arvalid);
        p_5_M02_AXI_arvalid->set_sv_netview_offsetfromdp(6852256);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_M02_AXI_arready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->M02_AXI_arready.bind(*p_5_M02_AXI_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_5_M02_AXI_arready);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_5_M02_AXI_rid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_5->M02_AXI_rid.bind(*p_5_M02_AXI_rid);
        (*_glb_hdl_sc_channel_map).push_back(p_5_M02_AXI_rid);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_5_M02_AXI_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_5->M02_AXI_rdata.bind(*p_5_M02_AXI_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_5_M02_AXI_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_5_M02_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_5->M02_AXI_rresp.bind(*p_5_M02_AXI_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_5_M02_AXI_rresp);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_M02_AXI_rlast = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->M02_AXI_rlast.bind(*p_5_M02_AXI_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_5_M02_AXI_rlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_M02_AXI_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->M02_AXI_ruser.bind(*p_5_M02_AXI_ruser);
        (*_glb_hdl_sc_channel_map).push_back(p_5_M02_AXI_ruser);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_M02_AXI_rvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->M02_AXI_rvalid.bind(*p_5_M02_AXI_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_5_M02_AXI_rvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_M02_AXI_rready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->M02_AXI_rready.bind(*p_5_M02_AXI_rready);
        p_5_M02_AXI_rready->set_sv_netview_offsetfromdp(6852704);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_5_M03_AXI_awid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_5->M03_AXI_awid.bind(*p_5_M03_AXI_awid);
        p_5_M03_AXI_awid->set_sv_netview_offsetfromdp(6852760);
        xsim_sc_channel<34, sc_dt::sc_bv<34> > *p_5_M03_AXI_awaddr = new xsim_sc_channel<34, sc_dt::sc_bv<34> >();
        sc_inst_5->M03_AXI_awaddr.bind(*p_5_M03_AXI_awaddr);
        p_5_M03_AXI_awaddr->set_sv_netview_offsetfromdp(6852816);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_5_M03_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_5->M03_AXI_awlen.bind(*p_5_M03_AXI_awlen);
        p_5_M03_AXI_awlen->set_sv_netview_offsetfromdp(6852872);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_5_M03_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_5->M03_AXI_awsize.bind(*p_5_M03_AXI_awsize);
        p_5_M03_AXI_awsize->set_sv_netview_offsetfromdp(6852928);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_5_M03_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_5->M03_AXI_awburst.bind(*p_5_M03_AXI_awburst);
        p_5_M03_AXI_awburst->set_sv_netview_offsetfromdp(6852984);
        xsim_sc_channel<0, bool > *p_5_M03_AXI_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_5->M03_AXI_awlock.bind(*p_5_M03_AXI_awlock);
        p_5_M03_AXI_awlock->set_sv_netview_offsetfromdp(6853040);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_5_M03_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_5->M03_AXI_awcache.bind(*p_5_M03_AXI_awcache);
        p_5_M03_AXI_awcache->set_sv_netview_offsetfromdp(6853096);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_5_M03_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_5->M03_AXI_awprot.bind(*p_5_M03_AXI_awprot);
        p_5_M03_AXI_awprot->set_sv_netview_offsetfromdp(6853152);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_5_M03_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_5->M03_AXI_awqos.bind(*p_5_M03_AXI_awqos);
        p_5_M03_AXI_awqos->set_sv_netview_offsetfromdp(6853208);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_5_M03_AXI_awuser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_5->M03_AXI_awuser.bind(*p_5_M03_AXI_awuser);
        p_5_M03_AXI_awuser->set_sv_netview_offsetfromdp(6853264);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_M03_AXI_awvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->M03_AXI_awvalid.bind(*p_5_M03_AXI_awvalid);
        p_5_M03_AXI_awvalid->set_sv_netview_offsetfromdp(6853320);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_M03_AXI_awready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->M03_AXI_awready.bind(*p_5_M03_AXI_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_5_M03_AXI_awready);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_5_M03_AXI_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_5->M03_AXI_wdata.bind(*p_5_M03_AXI_wdata);
        p_5_M03_AXI_wdata->set_sv_netview_offsetfromdp(6853432);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_5_M03_AXI_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_5->M03_AXI_wstrb.bind(*p_5_M03_AXI_wstrb);
        p_5_M03_AXI_wstrb->set_sv_netview_offsetfromdp(6853488);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_M03_AXI_wlast = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->M03_AXI_wlast.bind(*p_5_M03_AXI_wlast);
        p_5_M03_AXI_wlast->set_sv_netview_offsetfromdp(6853544);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_M03_AXI_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->M03_AXI_wuser.bind(*p_5_M03_AXI_wuser);
        p_5_M03_AXI_wuser->set_sv_netview_offsetfromdp(6853600);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_M03_AXI_wvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->M03_AXI_wvalid.bind(*p_5_M03_AXI_wvalid);
        p_5_M03_AXI_wvalid->set_sv_netview_offsetfromdp(6853656);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_M03_AXI_wready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->M03_AXI_wready.bind(*p_5_M03_AXI_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_5_M03_AXI_wready);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_5_M03_AXI_bid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_5->M03_AXI_bid.bind(*p_5_M03_AXI_bid);
        (*_glb_hdl_sc_channel_map).push_back(p_5_M03_AXI_bid);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_5_M03_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_5->M03_AXI_bresp.bind(*p_5_M03_AXI_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_5_M03_AXI_bresp);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_M03_AXI_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->M03_AXI_buser.bind(*p_5_M03_AXI_buser);
        (*_glb_hdl_sc_channel_map).push_back(p_5_M03_AXI_buser);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_M03_AXI_bvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->M03_AXI_bvalid.bind(*p_5_M03_AXI_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_5_M03_AXI_bvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_M03_AXI_bready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->M03_AXI_bready.bind(*p_5_M03_AXI_bready);
        p_5_M03_AXI_bready->set_sv_netview_offsetfromdp(6853992);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_5_M03_AXI_arid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_5->M03_AXI_arid.bind(*p_5_M03_AXI_arid);
        p_5_M03_AXI_arid->set_sv_netview_offsetfromdp(6854048);
        xsim_sc_channel<34, sc_dt::sc_bv<34> > *p_5_M03_AXI_araddr = new xsim_sc_channel<34, sc_dt::sc_bv<34> >();
        sc_inst_5->M03_AXI_araddr.bind(*p_5_M03_AXI_araddr);
        p_5_M03_AXI_araddr->set_sv_netview_offsetfromdp(6854104);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_5_M03_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_5->M03_AXI_arlen.bind(*p_5_M03_AXI_arlen);
        p_5_M03_AXI_arlen->set_sv_netview_offsetfromdp(6854160);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_5_M03_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_5->M03_AXI_arsize.bind(*p_5_M03_AXI_arsize);
        p_5_M03_AXI_arsize->set_sv_netview_offsetfromdp(6854216);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_5_M03_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_5->M03_AXI_arburst.bind(*p_5_M03_AXI_arburst);
        p_5_M03_AXI_arburst->set_sv_netview_offsetfromdp(6854272);
        xsim_sc_channel<0, bool > *p_5_M03_AXI_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_5->M03_AXI_arlock.bind(*p_5_M03_AXI_arlock);
        p_5_M03_AXI_arlock->set_sv_netview_offsetfromdp(6854328);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_5_M03_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_5->M03_AXI_arcache.bind(*p_5_M03_AXI_arcache);
        p_5_M03_AXI_arcache->set_sv_netview_offsetfromdp(6854384);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_5_M03_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_5->M03_AXI_arprot.bind(*p_5_M03_AXI_arprot);
        p_5_M03_AXI_arprot->set_sv_netview_offsetfromdp(6854440);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_5_M03_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_5->M03_AXI_arqos.bind(*p_5_M03_AXI_arqos);
        p_5_M03_AXI_arqos->set_sv_netview_offsetfromdp(6854496);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_5_M03_AXI_aruser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_5->M03_AXI_aruser.bind(*p_5_M03_AXI_aruser);
        p_5_M03_AXI_aruser->set_sv_netview_offsetfromdp(6854552);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_M03_AXI_arvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->M03_AXI_arvalid.bind(*p_5_M03_AXI_arvalid);
        p_5_M03_AXI_arvalid->set_sv_netview_offsetfromdp(6854608);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_M03_AXI_arready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->M03_AXI_arready.bind(*p_5_M03_AXI_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_5_M03_AXI_arready);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_5_M03_AXI_rid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_5->M03_AXI_rid.bind(*p_5_M03_AXI_rid);
        (*_glb_hdl_sc_channel_map).push_back(p_5_M03_AXI_rid);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_5_M03_AXI_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_5->M03_AXI_rdata.bind(*p_5_M03_AXI_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_5_M03_AXI_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_5_M03_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_5->M03_AXI_rresp.bind(*p_5_M03_AXI_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_5_M03_AXI_rresp);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_M03_AXI_rlast = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->M03_AXI_rlast.bind(*p_5_M03_AXI_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_5_M03_AXI_rlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_M03_AXI_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->M03_AXI_ruser.bind(*p_5_M03_AXI_ruser);
        (*_glb_hdl_sc_channel_map).push_back(p_5_M03_AXI_ruser);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_M03_AXI_rvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->M03_AXI_rvalid.bind(*p_5_M03_AXI_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_5_M03_AXI_rvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_M03_AXI_rready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->M03_AXI_rready.bind(*p_5_M03_AXI_rready);
        p_5_M03_AXI_rready->set_sv_netview_offsetfromdp(6855056);
        sc_inst_6 = new pfm_dynamic_sci(".emu_wrapper.emu_i.dynamic_region.pfm_dynamic_sci_inst");
        sc_inst_6->xsim_set_dbg_index(31);
        sc_inst_7 = new pfm_dynamic_sim_ddr_0_0(".emu_wrapper.emu_i.dynamic_region.sim_ddr_0");
        sc_inst_7->xsim_set_dbg_index(32);
        xsim_sc_channel<0, bool > *p_7_c0_ui_clk = new xsim_sc_channel<0, bool >();
        sc_inst_7->c0_ui_clk.bind(*p_7_c0_ui_clk);
        (*_glb_hdl_sc_channel_map).push_back(p_7_c0_ui_clk);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_7_c0_ddr_saxi_awid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_7->c0_ddr_saxi_awid.bind(*p_7_c0_ddr_saxi_awid);
        (*_glb_hdl_sc_channel_map).push_back(p_7_c0_ddr_saxi_awid);
        xsim_sc_channel<34, sc_dt::sc_bv<34> > *p_7_c0_ddr_saxi_awaddr = new xsim_sc_channel<34, sc_dt::sc_bv<34> >();
        sc_inst_7->c0_ddr_saxi_awaddr.bind(*p_7_c0_ddr_saxi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_7_c0_ddr_saxi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_7_c0_ddr_saxi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_7->c0_ddr_saxi_awlen.bind(*p_7_c0_ddr_saxi_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_7_c0_ddr_saxi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_7_c0_ddr_saxi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_7->c0_ddr_saxi_awsize.bind(*p_7_c0_ddr_saxi_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_7_c0_ddr_saxi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_7_c0_ddr_saxi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_7->c0_ddr_saxi_awburst.bind(*p_7_c0_ddr_saxi_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_7_c0_ddr_saxi_awburst);
        xsim_sc_channel<0, bool > *p_7_c0_ddr_saxi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_7->c0_ddr_saxi_awlock.bind(*p_7_c0_ddr_saxi_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_7_c0_ddr_saxi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_7_c0_ddr_saxi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_7->c0_ddr_saxi_awcache.bind(*p_7_c0_ddr_saxi_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_7_c0_ddr_saxi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_7_c0_ddr_saxi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_7->c0_ddr_saxi_awprot.bind(*p_7_c0_ddr_saxi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_7_c0_ddr_saxi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_7_c0_ddr_saxi_awregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_7->c0_ddr_saxi_awregion.bind(*p_7_c0_ddr_saxi_awregion);
        (*_glb_hdl_sc_channel_map).push_back(p_7_c0_ddr_saxi_awregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_7_c0_ddr_saxi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_7->c0_ddr_saxi_awqos.bind(*p_7_c0_ddr_saxi_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_7_c0_ddr_saxi_awqos);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_7_c0_ddr_saxi_awuser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_7->c0_ddr_saxi_awuser.bind(*p_7_c0_ddr_saxi_awuser);
        (*_glb_hdl_sc_channel_map).push_back(p_7_c0_ddr_saxi_awuser);
        xsim_sc_channel<0, bool > *p_7_c0_ddr_saxi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_7->c0_ddr_saxi_awvalid.bind(*p_7_c0_ddr_saxi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_7_c0_ddr_saxi_awvalid);
        xsim_sc_channel<0, bool > *p_7_c0_ddr_saxi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_7->c0_ddr_saxi_awready.bind(*p_7_c0_ddr_saxi_awready);
        p_7_c0_ddr_saxi_awready->set_sv_netview_offsetfromdp(6855936);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_7_c0_ddr_saxi_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_7->c0_ddr_saxi_wdata.bind(*p_7_c0_ddr_saxi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_7_c0_ddr_saxi_wdata);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_7_c0_ddr_saxi_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_7->c0_ddr_saxi_wstrb.bind(*p_7_c0_ddr_saxi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_7_c0_ddr_saxi_wstrb);
        xsim_sc_channel<0, bool > *p_7_c0_ddr_saxi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_7->c0_ddr_saxi_wlast.bind(*p_7_c0_ddr_saxi_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_7_c0_ddr_saxi_wlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_7_c0_ddr_saxi_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_7->c0_ddr_saxi_wuser.bind(*p_7_c0_ddr_saxi_wuser);
        (*_glb_hdl_sc_channel_map).push_back(p_7_c0_ddr_saxi_wuser);
        xsim_sc_channel<0, bool > *p_7_c0_ddr_saxi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_7->c0_ddr_saxi_wvalid.bind(*p_7_c0_ddr_saxi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_7_c0_ddr_saxi_wvalid);
        xsim_sc_channel<0, bool > *p_7_c0_ddr_saxi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_7->c0_ddr_saxi_wready.bind(*p_7_c0_ddr_saxi_wready);
        p_7_c0_ddr_saxi_wready->set_sv_netview_offsetfromdp(6856272);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_7_c0_ddr_saxi_bid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_7->c0_ddr_saxi_bid.bind(*p_7_c0_ddr_saxi_bid);
        p_7_c0_ddr_saxi_bid->set_sv_netview_offsetfromdp(6856328);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_7_c0_ddr_saxi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_7->c0_ddr_saxi_bresp.bind(*p_7_c0_ddr_saxi_bresp);
        p_7_c0_ddr_saxi_bresp->set_sv_netview_offsetfromdp(6856384);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_7_c0_ddr_saxi_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_7->c0_ddr_saxi_buser.bind(*p_7_c0_ddr_saxi_buser);
        p_7_c0_ddr_saxi_buser->set_sv_netview_offsetfromdp(6856440);
        xsim_sc_channel<0, bool > *p_7_c0_ddr_saxi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_7->c0_ddr_saxi_bvalid.bind(*p_7_c0_ddr_saxi_bvalid);
        p_7_c0_ddr_saxi_bvalid->set_sv_netview_offsetfromdp(6856496);
        xsim_sc_channel<0, bool > *p_7_c0_ddr_saxi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_7->c0_ddr_saxi_bready.bind(*p_7_c0_ddr_saxi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_7_c0_ddr_saxi_bready);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_7_c0_ddr_saxi_arid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_7->c0_ddr_saxi_arid.bind(*p_7_c0_ddr_saxi_arid);
        (*_glb_hdl_sc_channel_map).push_back(p_7_c0_ddr_saxi_arid);
        xsim_sc_channel<34, sc_dt::sc_bv<34> > *p_7_c0_ddr_saxi_araddr = new xsim_sc_channel<34, sc_dt::sc_bv<34> >();
        sc_inst_7->c0_ddr_saxi_araddr.bind(*p_7_c0_ddr_saxi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_7_c0_ddr_saxi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_7_c0_ddr_saxi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_7->c0_ddr_saxi_arlen.bind(*p_7_c0_ddr_saxi_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_7_c0_ddr_saxi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_7_c0_ddr_saxi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_7->c0_ddr_saxi_arsize.bind(*p_7_c0_ddr_saxi_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_7_c0_ddr_saxi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_7_c0_ddr_saxi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_7->c0_ddr_saxi_arburst.bind(*p_7_c0_ddr_saxi_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_7_c0_ddr_saxi_arburst);
        xsim_sc_channel<0, bool > *p_7_c0_ddr_saxi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_7->c0_ddr_saxi_arlock.bind(*p_7_c0_ddr_saxi_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_7_c0_ddr_saxi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_7_c0_ddr_saxi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_7->c0_ddr_saxi_arcache.bind(*p_7_c0_ddr_saxi_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_7_c0_ddr_saxi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_7_c0_ddr_saxi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_7->c0_ddr_saxi_arprot.bind(*p_7_c0_ddr_saxi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_7_c0_ddr_saxi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_7_c0_ddr_saxi_arregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_7->c0_ddr_saxi_arregion.bind(*p_7_c0_ddr_saxi_arregion);
        (*_glb_hdl_sc_channel_map).push_back(p_7_c0_ddr_saxi_arregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_7_c0_ddr_saxi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_7->c0_ddr_saxi_arqos.bind(*p_7_c0_ddr_saxi_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_7_c0_ddr_saxi_arqos);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_7_c0_ddr_saxi_aruser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_7->c0_ddr_saxi_aruser.bind(*p_7_c0_ddr_saxi_aruser);
        (*_glb_hdl_sc_channel_map).push_back(p_7_c0_ddr_saxi_aruser);
        xsim_sc_channel<0, bool > *p_7_c0_ddr_saxi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_7->c0_ddr_saxi_arvalid.bind(*p_7_c0_ddr_saxi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_7_c0_ddr_saxi_arvalid);
        xsim_sc_channel<0, bool > *p_7_c0_ddr_saxi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_7->c0_ddr_saxi_arready.bind(*p_7_c0_ddr_saxi_arready);
        p_7_c0_ddr_saxi_arready->set_sv_netview_offsetfromdp(6857280);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_7_c0_ddr_saxi_rid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_7->c0_ddr_saxi_rid.bind(*p_7_c0_ddr_saxi_rid);
        p_7_c0_ddr_saxi_rid->set_sv_netview_offsetfromdp(6857336);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_7_c0_ddr_saxi_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_7->c0_ddr_saxi_rdata.bind(*p_7_c0_ddr_saxi_rdata);
        p_7_c0_ddr_saxi_rdata->set_sv_netview_offsetfromdp(6857392);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_7_c0_ddr_saxi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_7->c0_ddr_saxi_rresp.bind(*p_7_c0_ddr_saxi_rresp);
        p_7_c0_ddr_saxi_rresp->set_sv_netview_offsetfromdp(6857448);
        xsim_sc_channel<0, bool > *p_7_c0_ddr_saxi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_7->c0_ddr_saxi_rlast.bind(*p_7_c0_ddr_saxi_rlast);
        p_7_c0_ddr_saxi_rlast->set_sv_netview_offsetfromdp(6857504);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_7_c0_ddr_saxi_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_7->c0_ddr_saxi_ruser.bind(*p_7_c0_ddr_saxi_ruser);
        p_7_c0_ddr_saxi_ruser->set_sv_netview_offsetfromdp(6857560);
        xsim_sc_channel<0, bool > *p_7_c0_ddr_saxi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_7->c0_ddr_saxi_rvalid.bind(*p_7_c0_ddr_saxi_rvalid);
        p_7_c0_ddr_saxi_rvalid->set_sv_netview_offsetfromdp(6857616);
        xsim_sc_channel<0, bool > *p_7_c0_ddr_saxi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_7->c0_ddr_saxi_rready.bind(*p_7_c0_ddr_saxi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_7_c0_ddr_saxi_rready);
        xsim_sc_channel<0, bool > *p_7_c0_ddr_saxi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_7->c0_ddr_saxi_aclk.bind(*p_7_c0_ddr_saxi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_7_c0_ddr_saxi_aclk);
        xsim_sc_channel<0, bool > *p_7_c0_ddr_saxi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_7->c0_ddr_saxi_aresetn.bind(*p_7_c0_ddr_saxi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_7_c0_ddr_saxi_aresetn);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_7_s_xdma_axi_awid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_7->s_xdma_axi_awid.bind(*p_7_s_xdma_axi_awid);
        (*_glb_hdl_sc_channel_map).push_back(p_7_s_xdma_axi_awid);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_7_s_xdma_axi_awaddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_7->s_xdma_axi_awaddr.bind(*p_7_s_xdma_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_7_s_xdma_axi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_7_s_xdma_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_7->s_xdma_axi_awlen.bind(*p_7_s_xdma_axi_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_7_s_xdma_axi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_7_s_xdma_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_7->s_xdma_axi_awsize.bind(*p_7_s_xdma_axi_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_7_s_xdma_axi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_7_s_xdma_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_7->s_xdma_axi_awburst.bind(*p_7_s_xdma_axi_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_7_s_xdma_axi_awburst);
        xsim_sc_channel<0, bool > *p_7_s_xdma_axi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_7->s_xdma_axi_awlock.bind(*p_7_s_xdma_axi_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_7_s_xdma_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_7_s_xdma_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_7->s_xdma_axi_awcache.bind(*p_7_s_xdma_axi_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_7_s_xdma_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_7_s_xdma_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_7->s_xdma_axi_awprot.bind(*p_7_s_xdma_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_7_s_xdma_axi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_7_s_xdma_axi_awregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_7->s_xdma_axi_awregion.bind(*p_7_s_xdma_axi_awregion);
        (*_glb_hdl_sc_channel_map).push_back(p_7_s_xdma_axi_awregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_7_s_xdma_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_7->s_xdma_axi_awqos.bind(*p_7_s_xdma_axi_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_7_s_xdma_axi_awqos);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_7_s_xdma_axi_awuser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_7->s_xdma_axi_awuser.bind(*p_7_s_xdma_axi_awuser);
        (*_glb_hdl_sc_channel_map).push_back(p_7_s_xdma_axi_awuser);
        xsim_sc_channel<0, bool > *p_7_s_xdma_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_7->s_xdma_axi_awvalid.bind(*p_7_s_xdma_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_7_s_xdma_axi_awvalid);
        xsim_sc_channel<0, bool > *p_7_s_xdma_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_7->s_xdma_axi_awready.bind(*p_7_s_xdma_axi_awready);
        p_7_s_xdma_axi_awready->set_sv_netview_offsetfromdp(6858512);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_7_s_xdma_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_7->s_xdma_axi_wdata.bind(*p_7_s_xdma_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_7_s_xdma_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_7_s_xdma_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_7->s_xdma_axi_wstrb.bind(*p_7_s_xdma_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_7_s_xdma_axi_wstrb);
        xsim_sc_channel<0, bool > *p_7_s_xdma_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_7->s_xdma_axi_wlast.bind(*p_7_s_xdma_axi_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_7_s_xdma_axi_wlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_7_s_xdma_axi_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_7->s_xdma_axi_wuser.bind(*p_7_s_xdma_axi_wuser);
        (*_glb_hdl_sc_channel_map).push_back(p_7_s_xdma_axi_wuser);
        xsim_sc_channel<0, bool > *p_7_s_xdma_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_7->s_xdma_axi_wvalid.bind(*p_7_s_xdma_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_7_s_xdma_axi_wvalid);
        xsim_sc_channel<0, bool > *p_7_s_xdma_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_7->s_xdma_axi_wready.bind(*p_7_s_xdma_axi_wready);
        p_7_s_xdma_axi_wready->set_sv_netview_offsetfromdp(6858848);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_7_s_xdma_axi_bid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_7->s_xdma_axi_bid.bind(*p_7_s_xdma_axi_bid);
        p_7_s_xdma_axi_bid->set_sv_netview_offsetfromdp(6858904);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_7_s_xdma_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_7->s_xdma_axi_bresp.bind(*p_7_s_xdma_axi_bresp);
        p_7_s_xdma_axi_bresp->set_sv_netview_offsetfromdp(6858960);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_7_s_xdma_axi_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_7->s_xdma_axi_buser.bind(*p_7_s_xdma_axi_buser);
        p_7_s_xdma_axi_buser->set_sv_netview_offsetfromdp(6859016);
        xsim_sc_channel<0, bool > *p_7_s_xdma_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_7->s_xdma_axi_bvalid.bind(*p_7_s_xdma_axi_bvalid);
        p_7_s_xdma_axi_bvalid->set_sv_netview_offsetfromdp(6859072);
        xsim_sc_channel<0, bool > *p_7_s_xdma_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_7->s_xdma_axi_bready.bind(*p_7_s_xdma_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_7_s_xdma_axi_bready);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_7_s_xdma_axi_arid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_7->s_xdma_axi_arid.bind(*p_7_s_xdma_axi_arid);
        (*_glb_hdl_sc_channel_map).push_back(p_7_s_xdma_axi_arid);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_7_s_xdma_axi_araddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_7->s_xdma_axi_araddr.bind(*p_7_s_xdma_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_7_s_xdma_axi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_7_s_xdma_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_7->s_xdma_axi_arlen.bind(*p_7_s_xdma_axi_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_7_s_xdma_axi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_7_s_xdma_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_7->s_xdma_axi_arsize.bind(*p_7_s_xdma_axi_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_7_s_xdma_axi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_7_s_xdma_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_7->s_xdma_axi_arburst.bind(*p_7_s_xdma_axi_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_7_s_xdma_axi_arburst);
        xsim_sc_channel<0, bool > *p_7_s_xdma_axi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_7->s_xdma_axi_arlock.bind(*p_7_s_xdma_axi_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_7_s_xdma_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_7_s_xdma_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_7->s_xdma_axi_arcache.bind(*p_7_s_xdma_axi_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_7_s_xdma_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_7_s_xdma_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_7->s_xdma_axi_arprot.bind(*p_7_s_xdma_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_7_s_xdma_axi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_7_s_xdma_axi_arregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_7->s_xdma_axi_arregion.bind(*p_7_s_xdma_axi_arregion);
        (*_glb_hdl_sc_channel_map).push_back(p_7_s_xdma_axi_arregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_7_s_xdma_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_7->s_xdma_axi_arqos.bind(*p_7_s_xdma_axi_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_7_s_xdma_axi_arqos);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_7_s_xdma_axi_aruser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_7->s_xdma_axi_aruser.bind(*p_7_s_xdma_axi_aruser);
        (*_glb_hdl_sc_channel_map).push_back(p_7_s_xdma_axi_aruser);
        xsim_sc_channel<0, bool > *p_7_s_xdma_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_7->s_xdma_axi_arvalid.bind(*p_7_s_xdma_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_7_s_xdma_axi_arvalid);
        xsim_sc_channel<0, bool > *p_7_s_xdma_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_7->s_xdma_axi_arready.bind(*p_7_s_xdma_axi_arready);
        p_7_s_xdma_axi_arready->set_sv_netview_offsetfromdp(6859856);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_7_s_xdma_axi_rid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_7->s_xdma_axi_rid.bind(*p_7_s_xdma_axi_rid);
        p_7_s_xdma_axi_rid->set_sv_netview_offsetfromdp(6859912);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_7_s_xdma_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_7->s_xdma_axi_rdata.bind(*p_7_s_xdma_axi_rdata);
        p_7_s_xdma_axi_rdata->set_sv_netview_offsetfromdp(6859968);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_7_s_xdma_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_7->s_xdma_axi_rresp.bind(*p_7_s_xdma_axi_rresp);
        p_7_s_xdma_axi_rresp->set_sv_netview_offsetfromdp(6860024);
        xsim_sc_channel<0, bool > *p_7_s_xdma_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_7->s_xdma_axi_rlast.bind(*p_7_s_xdma_axi_rlast);
        p_7_s_xdma_axi_rlast->set_sv_netview_offsetfromdp(6860080);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_7_s_xdma_axi_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_7->s_xdma_axi_ruser.bind(*p_7_s_xdma_axi_ruser);
        p_7_s_xdma_axi_ruser->set_sv_netview_offsetfromdp(6860136);
        xsim_sc_channel<0, bool > *p_7_s_xdma_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_7->s_xdma_axi_rvalid.bind(*p_7_s_xdma_axi_rvalid);
        p_7_s_xdma_axi_rvalid->set_sv_netview_offsetfromdp(6860192);
        xsim_sc_channel<0, bool > *p_7_s_xdma_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_7->s_xdma_axi_rready.bind(*p_7_s_xdma_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_7_s_xdma_axi_rready);
        xsim_sc_channel<0, bool > *p_7_s_xdma_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_7->s_xdma_axi_aclk.bind(*p_7_s_xdma_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_7_s_xdma_axi_aclk);
        xsim_sc_channel<0, bool > *p_7_s_xdma_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_7->s_xdma_axi_aresetn.bind(*p_7_s_xdma_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_7_s_xdma_axi_aresetn);
        sc_inst_8 = new pfm_dynamic_sim_ddr_2_0(".emu_wrapper.emu_i.dynamic_region.sim_ddr_2");
        sc_inst_8->xsim_set_dbg_index(33);
        xsim_sc_channel<0, bool > *p_8_c0_ui_clk = new xsim_sc_channel<0, bool >();
        sc_inst_8->c0_ui_clk.bind(*p_8_c0_ui_clk);
        (*_glb_hdl_sc_channel_map).push_back(p_8_c0_ui_clk);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_8_c0_ddr_saxi_awid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_8->c0_ddr_saxi_awid.bind(*p_8_c0_ddr_saxi_awid);
        (*_glb_hdl_sc_channel_map).push_back(p_8_c0_ddr_saxi_awid);
        xsim_sc_channel<34, sc_dt::sc_bv<34> > *p_8_c0_ddr_saxi_awaddr = new xsim_sc_channel<34, sc_dt::sc_bv<34> >();
        sc_inst_8->c0_ddr_saxi_awaddr.bind(*p_8_c0_ddr_saxi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_8_c0_ddr_saxi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_8_c0_ddr_saxi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_8->c0_ddr_saxi_awlen.bind(*p_8_c0_ddr_saxi_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_8_c0_ddr_saxi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_8_c0_ddr_saxi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_8->c0_ddr_saxi_awsize.bind(*p_8_c0_ddr_saxi_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_8_c0_ddr_saxi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_8_c0_ddr_saxi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_8->c0_ddr_saxi_awburst.bind(*p_8_c0_ddr_saxi_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_8_c0_ddr_saxi_awburst);
        xsim_sc_channel<0, bool > *p_8_c0_ddr_saxi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_8->c0_ddr_saxi_awlock.bind(*p_8_c0_ddr_saxi_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_8_c0_ddr_saxi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_8_c0_ddr_saxi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_8->c0_ddr_saxi_awcache.bind(*p_8_c0_ddr_saxi_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_8_c0_ddr_saxi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_8_c0_ddr_saxi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_8->c0_ddr_saxi_awprot.bind(*p_8_c0_ddr_saxi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_8_c0_ddr_saxi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_8_c0_ddr_saxi_awregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_8->c0_ddr_saxi_awregion.bind(*p_8_c0_ddr_saxi_awregion);
        (*_glb_hdl_sc_channel_map).push_back(p_8_c0_ddr_saxi_awregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_8_c0_ddr_saxi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_8->c0_ddr_saxi_awqos.bind(*p_8_c0_ddr_saxi_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_8_c0_ddr_saxi_awqos);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_8_c0_ddr_saxi_awuser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_8->c0_ddr_saxi_awuser.bind(*p_8_c0_ddr_saxi_awuser);
        (*_glb_hdl_sc_channel_map).push_back(p_8_c0_ddr_saxi_awuser);
        xsim_sc_channel<0, bool > *p_8_c0_ddr_saxi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_8->c0_ddr_saxi_awvalid.bind(*p_8_c0_ddr_saxi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_8_c0_ddr_saxi_awvalid);
        xsim_sc_channel<0, bool > *p_8_c0_ddr_saxi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_8->c0_ddr_saxi_awready.bind(*p_8_c0_ddr_saxi_awready);
        p_8_c0_ddr_saxi_awready->set_sv_netview_offsetfromdp(6861192);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_8_c0_ddr_saxi_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_8->c0_ddr_saxi_wdata.bind(*p_8_c0_ddr_saxi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_8_c0_ddr_saxi_wdata);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_8_c0_ddr_saxi_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_8->c0_ddr_saxi_wstrb.bind(*p_8_c0_ddr_saxi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_8_c0_ddr_saxi_wstrb);
        xsim_sc_channel<0, bool > *p_8_c0_ddr_saxi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_8->c0_ddr_saxi_wlast.bind(*p_8_c0_ddr_saxi_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_8_c0_ddr_saxi_wlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_8_c0_ddr_saxi_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_8->c0_ddr_saxi_wuser.bind(*p_8_c0_ddr_saxi_wuser);
        (*_glb_hdl_sc_channel_map).push_back(p_8_c0_ddr_saxi_wuser);
        xsim_sc_channel<0, bool > *p_8_c0_ddr_saxi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_8->c0_ddr_saxi_wvalid.bind(*p_8_c0_ddr_saxi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_8_c0_ddr_saxi_wvalid);
        xsim_sc_channel<0, bool > *p_8_c0_ddr_saxi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_8->c0_ddr_saxi_wready.bind(*p_8_c0_ddr_saxi_wready);
        p_8_c0_ddr_saxi_wready->set_sv_netview_offsetfromdp(6861528);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_8_c0_ddr_saxi_bid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_8->c0_ddr_saxi_bid.bind(*p_8_c0_ddr_saxi_bid);
        p_8_c0_ddr_saxi_bid->set_sv_netview_offsetfromdp(6861584);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_8_c0_ddr_saxi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_8->c0_ddr_saxi_bresp.bind(*p_8_c0_ddr_saxi_bresp);
        p_8_c0_ddr_saxi_bresp->set_sv_netview_offsetfromdp(6861640);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_8_c0_ddr_saxi_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_8->c0_ddr_saxi_buser.bind(*p_8_c0_ddr_saxi_buser);
        p_8_c0_ddr_saxi_buser->set_sv_netview_offsetfromdp(6861696);
        xsim_sc_channel<0, bool > *p_8_c0_ddr_saxi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_8->c0_ddr_saxi_bvalid.bind(*p_8_c0_ddr_saxi_bvalid);
        p_8_c0_ddr_saxi_bvalid->set_sv_netview_offsetfromdp(6861752);
        xsim_sc_channel<0, bool > *p_8_c0_ddr_saxi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_8->c0_ddr_saxi_bready.bind(*p_8_c0_ddr_saxi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_8_c0_ddr_saxi_bready);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_8_c0_ddr_saxi_arid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_8->c0_ddr_saxi_arid.bind(*p_8_c0_ddr_saxi_arid);
        (*_glb_hdl_sc_channel_map).push_back(p_8_c0_ddr_saxi_arid);
        xsim_sc_channel<34, sc_dt::sc_bv<34> > *p_8_c0_ddr_saxi_araddr = new xsim_sc_channel<34, sc_dt::sc_bv<34> >();
        sc_inst_8->c0_ddr_saxi_araddr.bind(*p_8_c0_ddr_saxi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_8_c0_ddr_saxi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_8_c0_ddr_saxi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_8->c0_ddr_saxi_arlen.bind(*p_8_c0_ddr_saxi_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_8_c0_ddr_saxi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_8_c0_ddr_saxi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_8->c0_ddr_saxi_arsize.bind(*p_8_c0_ddr_saxi_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_8_c0_ddr_saxi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_8_c0_ddr_saxi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_8->c0_ddr_saxi_arburst.bind(*p_8_c0_ddr_saxi_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_8_c0_ddr_saxi_arburst);
        xsim_sc_channel<0, bool > *p_8_c0_ddr_saxi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_8->c0_ddr_saxi_arlock.bind(*p_8_c0_ddr_saxi_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_8_c0_ddr_saxi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_8_c0_ddr_saxi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_8->c0_ddr_saxi_arcache.bind(*p_8_c0_ddr_saxi_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_8_c0_ddr_saxi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_8_c0_ddr_saxi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_8->c0_ddr_saxi_arprot.bind(*p_8_c0_ddr_saxi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_8_c0_ddr_saxi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_8_c0_ddr_saxi_arregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_8->c0_ddr_saxi_arregion.bind(*p_8_c0_ddr_saxi_arregion);
        (*_glb_hdl_sc_channel_map).push_back(p_8_c0_ddr_saxi_arregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_8_c0_ddr_saxi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_8->c0_ddr_saxi_arqos.bind(*p_8_c0_ddr_saxi_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_8_c0_ddr_saxi_arqos);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_8_c0_ddr_saxi_aruser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_8->c0_ddr_saxi_aruser.bind(*p_8_c0_ddr_saxi_aruser);
        (*_glb_hdl_sc_channel_map).push_back(p_8_c0_ddr_saxi_aruser);
        xsim_sc_channel<0, bool > *p_8_c0_ddr_saxi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_8->c0_ddr_saxi_arvalid.bind(*p_8_c0_ddr_saxi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_8_c0_ddr_saxi_arvalid);
        xsim_sc_channel<0, bool > *p_8_c0_ddr_saxi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_8->c0_ddr_saxi_arready.bind(*p_8_c0_ddr_saxi_arready);
        p_8_c0_ddr_saxi_arready->set_sv_netview_offsetfromdp(6862536);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_8_c0_ddr_saxi_rid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_8->c0_ddr_saxi_rid.bind(*p_8_c0_ddr_saxi_rid);
        p_8_c0_ddr_saxi_rid->set_sv_netview_offsetfromdp(6862592);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_8_c0_ddr_saxi_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_8->c0_ddr_saxi_rdata.bind(*p_8_c0_ddr_saxi_rdata);
        p_8_c0_ddr_saxi_rdata->set_sv_netview_offsetfromdp(6862648);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_8_c0_ddr_saxi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_8->c0_ddr_saxi_rresp.bind(*p_8_c0_ddr_saxi_rresp);
        p_8_c0_ddr_saxi_rresp->set_sv_netview_offsetfromdp(6862704);
        xsim_sc_channel<0, bool > *p_8_c0_ddr_saxi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_8->c0_ddr_saxi_rlast.bind(*p_8_c0_ddr_saxi_rlast);
        p_8_c0_ddr_saxi_rlast->set_sv_netview_offsetfromdp(6862760);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_8_c0_ddr_saxi_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_8->c0_ddr_saxi_ruser.bind(*p_8_c0_ddr_saxi_ruser);
        p_8_c0_ddr_saxi_ruser->set_sv_netview_offsetfromdp(6862816);
        xsim_sc_channel<0, bool > *p_8_c0_ddr_saxi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_8->c0_ddr_saxi_rvalid.bind(*p_8_c0_ddr_saxi_rvalid);
        p_8_c0_ddr_saxi_rvalid->set_sv_netview_offsetfromdp(6862872);
        xsim_sc_channel<0, bool > *p_8_c0_ddr_saxi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_8->c0_ddr_saxi_rready.bind(*p_8_c0_ddr_saxi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_8_c0_ddr_saxi_rready);
        xsim_sc_channel<0, bool > *p_8_c0_ddr_saxi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_8->c0_ddr_saxi_aclk.bind(*p_8_c0_ddr_saxi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_8_c0_ddr_saxi_aclk);
        xsim_sc_channel<0, bool > *p_8_c0_ddr_saxi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_8->c0_ddr_saxi_aresetn.bind(*p_8_c0_ddr_saxi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_8_c0_ddr_saxi_aresetn);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_8_s_xdma_axi_awid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_8->s_xdma_axi_awid.bind(*p_8_s_xdma_axi_awid);
        (*_glb_hdl_sc_channel_map).push_back(p_8_s_xdma_axi_awid);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_8_s_xdma_axi_awaddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_8->s_xdma_axi_awaddr.bind(*p_8_s_xdma_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_8_s_xdma_axi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_8_s_xdma_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_8->s_xdma_axi_awlen.bind(*p_8_s_xdma_axi_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_8_s_xdma_axi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_8_s_xdma_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_8->s_xdma_axi_awsize.bind(*p_8_s_xdma_axi_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_8_s_xdma_axi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_8_s_xdma_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_8->s_xdma_axi_awburst.bind(*p_8_s_xdma_axi_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_8_s_xdma_axi_awburst);
        xsim_sc_channel<0, bool > *p_8_s_xdma_axi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_8->s_xdma_axi_awlock.bind(*p_8_s_xdma_axi_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_8_s_xdma_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_8_s_xdma_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_8->s_xdma_axi_awcache.bind(*p_8_s_xdma_axi_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_8_s_xdma_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_8_s_xdma_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_8->s_xdma_axi_awprot.bind(*p_8_s_xdma_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_8_s_xdma_axi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_8_s_xdma_axi_awregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_8->s_xdma_axi_awregion.bind(*p_8_s_xdma_axi_awregion);
        (*_glb_hdl_sc_channel_map).push_back(p_8_s_xdma_axi_awregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_8_s_xdma_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_8->s_xdma_axi_awqos.bind(*p_8_s_xdma_axi_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_8_s_xdma_axi_awqos);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_8_s_xdma_axi_awuser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_8->s_xdma_axi_awuser.bind(*p_8_s_xdma_axi_awuser);
        (*_glb_hdl_sc_channel_map).push_back(p_8_s_xdma_axi_awuser);
        xsim_sc_channel<0, bool > *p_8_s_xdma_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_8->s_xdma_axi_awvalid.bind(*p_8_s_xdma_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_8_s_xdma_axi_awvalid);
        xsim_sc_channel<0, bool > *p_8_s_xdma_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_8->s_xdma_axi_awready.bind(*p_8_s_xdma_axi_awready);
        p_8_s_xdma_axi_awready->set_sv_netview_offsetfromdp(6863768);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_8_s_xdma_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_8->s_xdma_axi_wdata.bind(*p_8_s_xdma_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_8_s_xdma_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_8_s_xdma_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_8->s_xdma_axi_wstrb.bind(*p_8_s_xdma_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_8_s_xdma_axi_wstrb);
        xsim_sc_channel<0, bool > *p_8_s_xdma_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_8->s_xdma_axi_wlast.bind(*p_8_s_xdma_axi_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_8_s_xdma_axi_wlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_8_s_xdma_axi_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_8->s_xdma_axi_wuser.bind(*p_8_s_xdma_axi_wuser);
        (*_glb_hdl_sc_channel_map).push_back(p_8_s_xdma_axi_wuser);
        xsim_sc_channel<0, bool > *p_8_s_xdma_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_8->s_xdma_axi_wvalid.bind(*p_8_s_xdma_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_8_s_xdma_axi_wvalid);
        xsim_sc_channel<0, bool > *p_8_s_xdma_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_8->s_xdma_axi_wready.bind(*p_8_s_xdma_axi_wready);
        p_8_s_xdma_axi_wready->set_sv_netview_offsetfromdp(6864104);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_8_s_xdma_axi_bid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_8->s_xdma_axi_bid.bind(*p_8_s_xdma_axi_bid);
        p_8_s_xdma_axi_bid->set_sv_netview_offsetfromdp(6864160);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_8_s_xdma_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_8->s_xdma_axi_bresp.bind(*p_8_s_xdma_axi_bresp);
        p_8_s_xdma_axi_bresp->set_sv_netview_offsetfromdp(6864216);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_8_s_xdma_axi_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_8->s_xdma_axi_buser.bind(*p_8_s_xdma_axi_buser);
        p_8_s_xdma_axi_buser->set_sv_netview_offsetfromdp(6864272);
        xsim_sc_channel<0, bool > *p_8_s_xdma_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_8->s_xdma_axi_bvalid.bind(*p_8_s_xdma_axi_bvalid);
        p_8_s_xdma_axi_bvalid->set_sv_netview_offsetfromdp(6864328);
        xsim_sc_channel<0, bool > *p_8_s_xdma_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_8->s_xdma_axi_bready.bind(*p_8_s_xdma_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_8_s_xdma_axi_bready);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_8_s_xdma_axi_arid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_8->s_xdma_axi_arid.bind(*p_8_s_xdma_axi_arid);
        (*_glb_hdl_sc_channel_map).push_back(p_8_s_xdma_axi_arid);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_8_s_xdma_axi_araddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_8->s_xdma_axi_araddr.bind(*p_8_s_xdma_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_8_s_xdma_axi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_8_s_xdma_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_8->s_xdma_axi_arlen.bind(*p_8_s_xdma_axi_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_8_s_xdma_axi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_8_s_xdma_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_8->s_xdma_axi_arsize.bind(*p_8_s_xdma_axi_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_8_s_xdma_axi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_8_s_xdma_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_8->s_xdma_axi_arburst.bind(*p_8_s_xdma_axi_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_8_s_xdma_axi_arburst);
        xsim_sc_channel<0, bool > *p_8_s_xdma_axi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_8->s_xdma_axi_arlock.bind(*p_8_s_xdma_axi_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_8_s_xdma_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_8_s_xdma_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_8->s_xdma_axi_arcache.bind(*p_8_s_xdma_axi_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_8_s_xdma_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_8_s_xdma_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_8->s_xdma_axi_arprot.bind(*p_8_s_xdma_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_8_s_xdma_axi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_8_s_xdma_axi_arregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_8->s_xdma_axi_arregion.bind(*p_8_s_xdma_axi_arregion);
        (*_glb_hdl_sc_channel_map).push_back(p_8_s_xdma_axi_arregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_8_s_xdma_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_8->s_xdma_axi_arqos.bind(*p_8_s_xdma_axi_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_8_s_xdma_axi_arqos);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_8_s_xdma_axi_aruser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_8->s_xdma_axi_aruser.bind(*p_8_s_xdma_axi_aruser);
        (*_glb_hdl_sc_channel_map).push_back(p_8_s_xdma_axi_aruser);
        xsim_sc_channel<0, bool > *p_8_s_xdma_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_8->s_xdma_axi_arvalid.bind(*p_8_s_xdma_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_8_s_xdma_axi_arvalid);
        xsim_sc_channel<0, bool > *p_8_s_xdma_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_8->s_xdma_axi_arready.bind(*p_8_s_xdma_axi_arready);
        p_8_s_xdma_axi_arready->set_sv_netview_offsetfromdp(6865112);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_8_s_xdma_axi_rid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_8->s_xdma_axi_rid.bind(*p_8_s_xdma_axi_rid);
        p_8_s_xdma_axi_rid->set_sv_netview_offsetfromdp(6865168);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_8_s_xdma_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_8->s_xdma_axi_rdata.bind(*p_8_s_xdma_axi_rdata);
        p_8_s_xdma_axi_rdata->set_sv_netview_offsetfromdp(6865224);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_8_s_xdma_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_8->s_xdma_axi_rresp.bind(*p_8_s_xdma_axi_rresp);
        p_8_s_xdma_axi_rresp->set_sv_netview_offsetfromdp(6865280);
        xsim_sc_channel<0, bool > *p_8_s_xdma_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_8->s_xdma_axi_rlast.bind(*p_8_s_xdma_axi_rlast);
        p_8_s_xdma_axi_rlast->set_sv_netview_offsetfromdp(6865336);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_8_s_xdma_axi_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_8->s_xdma_axi_ruser.bind(*p_8_s_xdma_axi_ruser);
        p_8_s_xdma_axi_ruser->set_sv_netview_offsetfromdp(6865392);
        xsim_sc_channel<0, bool > *p_8_s_xdma_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_8->s_xdma_axi_rvalid.bind(*p_8_s_xdma_axi_rvalid);
        p_8_s_xdma_axi_rvalid->set_sv_netview_offsetfromdp(6865448);
        xsim_sc_channel<0, bool > *p_8_s_xdma_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_8->s_xdma_axi_rready.bind(*p_8_s_xdma_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_8_s_xdma_axi_rready);
        xsim_sc_channel<0, bool > *p_8_s_xdma_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_8->s_xdma_axi_aclk.bind(*p_8_s_xdma_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_8_s_xdma_axi_aclk);
        xsim_sc_channel<0, bool > *p_8_s_xdma_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_8->s_xdma_axi_aresetn.bind(*p_8_s_xdma_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_8_s_xdma_axi_aresetn);
        sc_inst_9 = new pfm_dynamic_sim_ddr_3_0(".emu_wrapper.emu_i.dynamic_region.sim_ddr_3");
        sc_inst_9->xsim_set_dbg_index(34);
        xsim_sc_channel<0, bool > *p_9_c0_ui_clk = new xsim_sc_channel<0, bool >();
        sc_inst_9->c0_ui_clk.bind(*p_9_c0_ui_clk);
        (*_glb_hdl_sc_channel_map).push_back(p_9_c0_ui_clk);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_9_c0_ddr_saxi_awid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_9->c0_ddr_saxi_awid.bind(*p_9_c0_ddr_saxi_awid);
        (*_glb_hdl_sc_channel_map).push_back(p_9_c0_ddr_saxi_awid);
        xsim_sc_channel<34, sc_dt::sc_bv<34> > *p_9_c0_ddr_saxi_awaddr = new xsim_sc_channel<34, sc_dt::sc_bv<34> >();
        sc_inst_9->c0_ddr_saxi_awaddr.bind(*p_9_c0_ddr_saxi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_9_c0_ddr_saxi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_9_c0_ddr_saxi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_9->c0_ddr_saxi_awlen.bind(*p_9_c0_ddr_saxi_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_9_c0_ddr_saxi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_9_c0_ddr_saxi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_9->c0_ddr_saxi_awsize.bind(*p_9_c0_ddr_saxi_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_9_c0_ddr_saxi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_9_c0_ddr_saxi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_9->c0_ddr_saxi_awburst.bind(*p_9_c0_ddr_saxi_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_9_c0_ddr_saxi_awburst);
        xsim_sc_channel<0, bool > *p_9_c0_ddr_saxi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_9->c0_ddr_saxi_awlock.bind(*p_9_c0_ddr_saxi_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_9_c0_ddr_saxi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_9_c0_ddr_saxi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_9->c0_ddr_saxi_awcache.bind(*p_9_c0_ddr_saxi_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_9_c0_ddr_saxi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_9_c0_ddr_saxi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_9->c0_ddr_saxi_awprot.bind(*p_9_c0_ddr_saxi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_9_c0_ddr_saxi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_9_c0_ddr_saxi_awregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_9->c0_ddr_saxi_awregion.bind(*p_9_c0_ddr_saxi_awregion);
        (*_glb_hdl_sc_channel_map).push_back(p_9_c0_ddr_saxi_awregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_9_c0_ddr_saxi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_9->c0_ddr_saxi_awqos.bind(*p_9_c0_ddr_saxi_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_9_c0_ddr_saxi_awqos);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_9_c0_ddr_saxi_awuser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_9->c0_ddr_saxi_awuser.bind(*p_9_c0_ddr_saxi_awuser);
        (*_glb_hdl_sc_channel_map).push_back(p_9_c0_ddr_saxi_awuser);
        xsim_sc_channel<0, bool > *p_9_c0_ddr_saxi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_9->c0_ddr_saxi_awvalid.bind(*p_9_c0_ddr_saxi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_9_c0_ddr_saxi_awvalid);
        xsim_sc_channel<0, bool > *p_9_c0_ddr_saxi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_9->c0_ddr_saxi_awready.bind(*p_9_c0_ddr_saxi_awready);
        p_9_c0_ddr_saxi_awready->set_sv_netview_offsetfromdp(6866448);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_9_c0_ddr_saxi_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_9->c0_ddr_saxi_wdata.bind(*p_9_c0_ddr_saxi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_9_c0_ddr_saxi_wdata);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_9_c0_ddr_saxi_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_9->c0_ddr_saxi_wstrb.bind(*p_9_c0_ddr_saxi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_9_c0_ddr_saxi_wstrb);
        xsim_sc_channel<0, bool > *p_9_c0_ddr_saxi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_9->c0_ddr_saxi_wlast.bind(*p_9_c0_ddr_saxi_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_9_c0_ddr_saxi_wlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_9_c0_ddr_saxi_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_9->c0_ddr_saxi_wuser.bind(*p_9_c0_ddr_saxi_wuser);
        (*_glb_hdl_sc_channel_map).push_back(p_9_c0_ddr_saxi_wuser);
        xsim_sc_channel<0, bool > *p_9_c0_ddr_saxi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_9->c0_ddr_saxi_wvalid.bind(*p_9_c0_ddr_saxi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_9_c0_ddr_saxi_wvalid);
        xsim_sc_channel<0, bool > *p_9_c0_ddr_saxi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_9->c0_ddr_saxi_wready.bind(*p_9_c0_ddr_saxi_wready);
        p_9_c0_ddr_saxi_wready->set_sv_netview_offsetfromdp(6866784);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_9_c0_ddr_saxi_bid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_9->c0_ddr_saxi_bid.bind(*p_9_c0_ddr_saxi_bid);
        p_9_c0_ddr_saxi_bid->set_sv_netview_offsetfromdp(6866840);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_9_c0_ddr_saxi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_9->c0_ddr_saxi_bresp.bind(*p_9_c0_ddr_saxi_bresp);
        p_9_c0_ddr_saxi_bresp->set_sv_netview_offsetfromdp(6866896);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_9_c0_ddr_saxi_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_9->c0_ddr_saxi_buser.bind(*p_9_c0_ddr_saxi_buser);
        p_9_c0_ddr_saxi_buser->set_sv_netview_offsetfromdp(6866952);
        xsim_sc_channel<0, bool > *p_9_c0_ddr_saxi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_9->c0_ddr_saxi_bvalid.bind(*p_9_c0_ddr_saxi_bvalid);
        p_9_c0_ddr_saxi_bvalid->set_sv_netview_offsetfromdp(6867008);
        xsim_sc_channel<0, bool > *p_9_c0_ddr_saxi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_9->c0_ddr_saxi_bready.bind(*p_9_c0_ddr_saxi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_9_c0_ddr_saxi_bready);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_9_c0_ddr_saxi_arid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_9->c0_ddr_saxi_arid.bind(*p_9_c0_ddr_saxi_arid);
        (*_glb_hdl_sc_channel_map).push_back(p_9_c0_ddr_saxi_arid);
        xsim_sc_channel<34, sc_dt::sc_bv<34> > *p_9_c0_ddr_saxi_araddr = new xsim_sc_channel<34, sc_dt::sc_bv<34> >();
        sc_inst_9->c0_ddr_saxi_araddr.bind(*p_9_c0_ddr_saxi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_9_c0_ddr_saxi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_9_c0_ddr_saxi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_9->c0_ddr_saxi_arlen.bind(*p_9_c0_ddr_saxi_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_9_c0_ddr_saxi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_9_c0_ddr_saxi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_9->c0_ddr_saxi_arsize.bind(*p_9_c0_ddr_saxi_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_9_c0_ddr_saxi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_9_c0_ddr_saxi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_9->c0_ddr_saxi_arburst.bind(*p_9_c0_ddr_saxi_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_9_c0_ddr_saxi_arburst);
        xsim_sc_channel<0, bool > *p_9_c0_ddr_saxi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_9->c0_ddr_saxi_arlock.bind(*p_9_c0_ddr_saxi_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_9_c0_ddr_saxi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_9_c0_ddr_saxi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_9->c0_ddr_saxi_arcache.bind(*p_9_c0_ddr_saxi_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_9_c0_ddr_saxi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_9_c0_ddr_saxi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_9->c0_ddr_saxi_arprot.bind(*p_9_c0_ddr_saxi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_9_c0_ddr_saxi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_9_c0_ddr_saxi_arregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_9->c0_ddr_saxi_arregion.bind(*p_9_c0_ddr_saxi_arregion);
        (*_glb_hdl_sc_channel_map).push_back(p_9_c0_ddr_saxi_arregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_9_c0_ddr_saxi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_9->c0_ddr_saxi_arqos.bind(*p_9_c0_ddr_saxi_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_9_c0_ddr_saxi_arqos);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_9_c0_ddr_saxi_aruser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_9->c0_ddr_saxi_aruser.bind(*p_9_c0_ddr_saxi_aruser);
        (*_glb_hdl_sc_channel_map).push_back(p_9_c0_ddr_saxi_aruser);
        xsim_sc_channel<0, bool > *p_9_c0_ddr_saxi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_9->c0_ddr_saxi_arvalid.bind(*p_9_c0_ddr_saxi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_9_c0_ddr_saxi_arvalid);
        xsim_sc_channel<0, bool > *p_9_c0_ddr_saxi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_9->c0_ddr_saxi_arready.bind(*p_9_c0_ddr_saxi_arready);
        p_9_c0_ddr_saxi_arready->set_sv_netview_offsetfromdp(6867792);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_9_c0_ddr_saxi_rid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_9->c0_ddr_saxi_rid.bind(*p_9_c0_ddr_saxi_rid);
        p_9_c0_ddr_saxi_rid->set_sv_netview_offsetfromdp(6867848);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_9_c0_ddr_saxi_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_9->c0_ddr_saxi_rdata.bind(*p_9_c0_ddr_saxi_rdata);
        p_9_c0_ddr_saxi_rdata->set_sv_netview_offsetfromdp(6867904);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_9_c0_ddr_saxi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_9->c0_ddr_saxi_rresp.bind(*p_9_c0_ddr_saxi_rresp);
        p_9_c0_ddr_saxi_rresp->set_sv_netview_offsetfromdp(6867960);
        xsim_sc_channel<0, bool > *p_9_c0_ddr_saxi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_9->c0_ddr_saxi_rlast.bind(*p_9_c0_ddr_saxi_rlast);
        p_9_c0_ddr_saxi_rlast->set_sv_netview_offsetfromdp(6868016);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_9_c0_ddr_saxi_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_9->c0_ddr_saxi_ruser.bind(*p_9_c0_ddr_saxi_ruser);
        p_9_c0_ddr_saxi_ruser->set_sv_netview_offsetfromdp(6868072);
        xsim_sc_channel<0, bool > *p_9_c0_ddr_saxi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_9->c0_ddr_saxi_rvalid.bind(*p_9_c0_ddr_saxi_rvalid);
        p_9_c0_ddr_saxi_rvalid->set_sv_netview_offsetfromdp(6868128);
        xsim_sc_channel<0, bool > *p_9_c0_ddr_saxi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_9->c0_ddr_saxi_rready.bind(*p_9_c0_ddr_saxi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_9_c0_ddr_saxi_rready);
        xsim_sc_channel<0, bool > *p_9_c0_ddr_saxi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_9->c0_ddr_saxi_aclk.bind(*p_9_c0_ddr_saxi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_9_c0_ddr_saxi_aclk);
        xsim_sc_channel<0, bool > *p_9_c0_ddr_saxi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_9->c0_ddr_saxi_aresetn.bind(*p_9_c0_ddr_saxi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_9_c0_ddr_saxi_aresetn);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_9_s_xdma_axi_awid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_9->s_xdma_axi_awid.bind(*p_9_s_xdma_axi_awid);
        (*_glb_hdl_sc_channel_map).push_back(p_9_s_xdma_axi_awid);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_9_s_xdma_axi_awaddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_9->s_xdma_axi_awaddr.bind(*p_9_s_xdma_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_9_s_xdma_axi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_9_s_xdma_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_9->s_xdma_axi_awlen.bind(*p_9_s_xdma_axi_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_9_s_xdma_axi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_9_s_xdma_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_9->s_xdma_axi_awsize.bind(*p_9_s_xdma_axi_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_9_s_xdma_axi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_9_s_xdma_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_9->s_xdma_axi_awburst.bind(*p_9_s_xdma_axi_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_9_s_xdma_axi_awburst);
        xsim_sc_channel<0, bool > *p_9_s_xdma_axi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_9->s_xdma_axi_awlock.bind(*p_9_s_xdma_axi_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_9_s_xdma_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_9_s_xdma_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_9->s_xdma_axi_awcache.bind(*p_9_s_xdma_axi_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_9_s_xdma_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_9_s_xdma_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_9->s_xdma_axi_awprot.bind(*p_9_s_xdma_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_9_s_xdma_axi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_9_s_xdma_axi_awregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_9->s_xdma_axi_awregion.bind(*p_9_s_xdma_axi_awregion);
        (*_glb_hdl_sc_channel_map).push_back(p_9_s_xdma_axi_awregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_9_s_xdma_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_9->s_xdma_axi_awqos.bind(*p_9_s_xdma_axi_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_9_s_xdma_axi_awqos);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_9_s_xdma_axi_awuser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_9->s_xdma_axi_awuser.bind(*p_9_s_xdma_axi_awuser);
        (*_glb_hdl_sc_channel_map).push_back(p_9_s_xdma_axi_awuser);
        xsim_sc_channel<0, bool > *p_9_s_xdma_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_9->s_xdma_axi_awvalid.bind(*p_9_s_xdma_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_9_s_xdma_axi_awvalid);
        xsim_sc_channel<0, bool > *p_9_s_xdma_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_9->s_xdma_axi_awready.bind(*p_9_s_xdma_axi_awready);
        p_9_s_xdma_axi_awready->set_sv_netview_offsetfromdp(6869024);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_9_s_xdma_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_9->s_xdma_axi_wdata.bind(*p_9_s_xdma_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_9_s_xdma_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_9_s_xdma_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_9->s_xdma_axi_wstrb.bind(*p_9_s_xdma_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_9_s_xdma_axi_wstrb);
        xsim_sc_channel<0, bool > *p_9_s_xdma_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_9->s_xdma_axi_wlast.bind(*p_9_s_xdma_axi_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_9_s_xdma_axi_wlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_9_s_xdma_axi_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_9->s_xdma_axi_wuser.bind(*p_9_s_xdma_axi_wuser);
        (*_glb_hdl_sc_channel_map).push_back(p_9_s_xdma_axi_wuser);
        xsim_sc_channel<0, bool > *p_9_s_xdma_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_9->s_xdma_axi_wvalid.bind(*p_9_s_xdma_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_9_s_xdma_axi_wvalid);
        xsim_sc_channel<0, bool > *p_9_s_xdma_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_9->s_xdma_axi_wready.bind(*p_9_s_xdma_axi_wready);
        p_9_s_xdma_axi_wready->set_sv_netview_offsetfromdp(6869360);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_9_s_xdma_axi_bid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_9->s_xdma_axi_bid.bind(*p_9_s_xdma_axi_bid);
        p_9_s_xdma_axi_bid->set_sv_netview_offsetfromdp(6869416);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_9_s_xdma_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_9->s_xdma_axi_bresp.bind(*p_9_s_xdma_axi_bresp);
        p_9_s_xdma_axi_bresp->set_sv_netview_offsetfromdp(6869472);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_9_s_xdma_axi_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_9->s_xdma_axi_buser.bind(*p_9_s_xdma_axi_buser);
        p_9_s_xdma_axi_buser->set_sv_netview_offsetfromdp(6869528);
        xsim_sc_channel<0, bool > *p_9_s_xdma_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_9->s_xdma_axi_bvalid.bind(*p_9_s_xdma_axi_bvalid);
        p_9_s_xdma_axi_bvalid->set_sv_netview_offsetfromdp(6869584);
        xsim_sc_channel<0, bool > *p_9_s_xdma_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_9->s_xdma_axi_bready.bind(*p_9_s_xdma_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_9_s_xdma_axi_bready);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_9_s_xdma_axi_arid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_9->s_xdma_axi_arid.bind(*p_9_s_xdma_axi_arid);
        (*_glb_hdl_sc_channel_map).push_back(p_9_s_xdma_axi_arid);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_9_s_xdma_axi_araddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_9->s_xdma_axi_araddr.bind(*p_9_s_xdma_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_9_s_xdma_axi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_9_s_xdma_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_9->s_xdma_axi_arlen.bind(*p_9_s_xdma_axi_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_9_s_xdma_axi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_9_s_xdma_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_9->s_xdma_axi_arsize.bind(*p_9_s_xdma_axi_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_9_s_xdma_axi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_9_s_xdma_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_9->s_xdma_axi_arburst.bind(*p_9_s_xdma_axi_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_9_s_xdma_axi_arburst);
        xsim_sc_channel<0, bool > *p_9_s_xdma_axi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_9->s_xdma_axi_arlock.bind(*p_9_s_xdma_axi_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_9_s_xdma_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_9_s_xdma_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_9->s_xdma_axi_arcache.bind(*p_9_s_xdma_axi_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_9_s_xdma_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_9_s_xdma_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_9->s_xdma_axi_arprot.bind(*p_9_s_xdma_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_9_s_xdma_axi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_9_s_xdma_axi_arregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_9->s_xdma_axi_arregion.bind(*p_9_s_xdma_axi_arregion);
        (*_glb_hdl_sc_channel_map).push_back(p_9_s_xdma_axi_arregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_9_s_xdma_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_9->s_xdma_axi_arqos.bind(*p_9_s_xdma_axi_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_9_s_xdma_axi_arqos);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_9_s_xdma_axi_aruser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_9->s_xdma_axi_aruser.bind(*p_9_s_xdma_axi_aruser);
        (*_glb_hdl_sc_channel_map).push_back(p_9_s_xdma_axi_aruser);
        xsim_sc_channel<0, bool > *p_9_s_xdma_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_9->s_xdma_axi_arvalid.bind(*p_9_s_xdma_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_9_s_xdma_axi_arvalid);
        xsim_sc_channel<0, bool > *p_9_s_xdma_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_9->s_xdma_axi_arready.bind(*p_9_s_xdma_axi_arready);
        p_9_s_xdma_axi_arready->set_sv_netview_offsetfromdp(6870368);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_9_s_xdma_axi_rid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_9->s_xdma_axi_rid.bind(*p_9_s_xdma_axi_rid);
        p_9_s_xdma_axi_rid->set_sv_netview_offsetfromdp(6870424);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_9_s_xdma_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_9->s_xdma_axi_rdata.bind(*p_9_s_xdma_axi_rdata);
        p_9_s_xdma_axi_rdata->set_sv_netview_offsetfromdp(6870480);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_9_s_xdma_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_9->s_xdma_axi_rresp.bind(*p_9_s_xdma_axi_rresp);
        p_9_s_xdma_axi_rresp->set_sv_netview_offsetfromdp(6870536);
        xsim_sc_channel<0, bool > *p_9_s_xdma_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_9->s_xdma_axi_rlast.bind(*p_9_s_xdma_axi_rlast);
        p_9_s_xdma_axi_rlast->set_sv_netview_offsetfromdp(6870592);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_9_s_xdma_axi_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_9->s_xdma_axi_ruser.bind(*p_9_s_xdma_axi_ruser);
        p_9_s_xdma_axi_ruser->set_sv_netview_offsetfromdp(6870648);
        xsim_sc_channel<0, bool > *p_9_s_xdma_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_9->s_xdma_axi_rvalid.bind(*p_9_s_xdma_axi_rvalid);
        p_9_s_xdma_axi_rvalid->set_sv_netview_offsetfromdp(6870704);
        xsim_sc_channel<0, bool > *p_9_s_xdma_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_9->s_xdma_axi_rready.bind(*p_9_s_xdma_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_9_s_xdma_axi_rready);
        xsim_sc_channel<0, bool > *p_9_s_xdma_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_9->s_xdma_axi_aclk.bind(*p_9_s_xdma_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_9_s_xdma_axi_aclk);
        xsim_sc_channel<0, bool > *p_9_s_xdma_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_9->s_xdma_axi_aresetn.bind(*p_9_s_xdma_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_9_s_xdma_axi_aresetn);
        sc_inst_10 = new pfm_dynamic_icn_pass_0_0(".emu_wrapper.emu_i.dynamic_region.slr0.icn_pass_0");
        sc_inst_10->xsim_set_dbg_index(667);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_10_s00_axi_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_10->s00_axi_awid.bind(*p_10_s00_axi_awid);
        (*_glb_hdl_sc_channel_map).push_back(p_10_s00_axi_awid);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_10_s00_axi_awaddr = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_10->s00_axi_awaddr.bind(*p_10_s00_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_10_s00_axi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_10_s00_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_10->s00_axi_awlen.bind(*p_10_s00_axi_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_10_s00_axi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_10_s00_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_10->s00_axi_awsize.bind(*p_10_s00_axi_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_10_s00_axi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_10_s00_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_10->s00_axi_awburst.bind(*p_10_s00_axi_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_10_s00_axi_awburst);
        xsim_sc_channel<0, bool > *p_10_s00_axi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_10->s00_axi_awlock.bind(*p_10_s00_axi_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_10_s00_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_10_s00_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_10->s00_axi_awcache.bind(*p_10_s00_axi_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_10_s00_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_10_s00_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_10->s00_axi_awprot.bind(*p_10_s00_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_10_s00_axi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_10_s00_axi_awregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_10->s00_axi_awregion.bind(*p_10_s00_axi_awregion);
        (*_glb_hdl_sc_channel_map).push_back(p_10_s00_axi_awregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_10_s00_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_10->s00_axi_awqos.bind(*p_10_s00_axi_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_10_s00_axi_awqos);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_10_s00_axi_awuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_10->s00_axi_awuser.bind(*p_10_s00_axi_awuser);
        (*_glb_hdl_sc_channel_map).push_back(p_10_s00_axi_awuser);
        xsim_sc_channel<0, bool > *p_10_s00_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_10->s00_axi_awvalid.bind(*p_10_s00_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_10_s00_axi_awvalid);
        xsim_sc_channel<0, bool > *p_10_s00_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_10->s00_axi_awready.bind(*p_10_s00_axi_awready);
        p_10_s00_axi_awready->set_sv_netview_offsetfromdp(6941952);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_10_s00_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_10->s00_axi_wdata.bind(*p_10_s00_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_10_s00_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_10_s00_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_10->s00_axi_wstrb.bind(*p_10_s00_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_10_s00_axi_wstrb);
        xsim_sc_channel<0, bool > *p_10_s00_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_10->s00_axi_wlast.bind(*p_10_s00_axi_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_10_s00_axi_wlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_10_s00_axi_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_10->s00_axi_wuser.bind(*p_10_s00_axi_wuser);
        (*_glb_hdl_sc_channel_map).push_back(p_10_s00_axi_wuser);
        xsim_sc_channel<0, bool > *p_10_s00_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_10->s00_axi_wvalid.bind(*p_10_s00_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_10_s00_axi_wvalid);
        xsim_sc_channel<0, bool > *p_10_s00_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_10->s00_axi_wready.bind(*p_10_s00_axi_wready);
        p_10_s00_axi_wready->set_sv_netview_offsetfromdp(6942288);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_10_s00_axi_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_10->s00_axi_bid.bind(*p_10_s00_axi_bid);
        p_10_s00_axi_bid->set_sv_netview_offsetfromdp(6942344);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_10_s00_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_10->s00_axi_bresp.bind(*p_10_s00_axi_bresp);
        p_10_s00_axi_bresp->set_sv_netview_offsetfromdp(6942400);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_10_s00_axi_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_10->s00_axi_buser.bind(*p_10_s00_axi_buser);
        p_10_s00_axi_buser->set_sv_netview_offsetfromdp(6942456);
        xsim_sc_channel<0, bool > *p_10_s00_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_10->s00_axi_bvalid.bind(*p_10_s00_axi_bvalid);
        p_10_s00_axi_bvalid->set_sv_netview_offsetfromdp(6942512);
        xsim_sc_channel<0, bool > *p_10_s00_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_10->s00_axi_bready.bind(*p_10_s00_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_10_s00_axi_bready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_10_s00_axi_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_10->s00_axi_arid.bind(*p_10_s00_axi_arid);
        (*_glb_hdl_sc_channel_map).push_back(p_10_s00_axi_arid);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_10_s00_axi_araddr = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_10->s00_axi_araddr.bind(*p_10_s00_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_10_s00_axi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_10_s00_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_10->s00_axi_arlen.bind(*p_10_s00_axi_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_10_s00_axi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_10_s00_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_10->s00_axi_arsize.bind(*p_10_s00_axi_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_10_s00_axi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_10_s00_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_10->s00_axi_arburst.bind(*p_10_s00_axi_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_10_s00_axi_arburst);
        xsim_sc_channel<0, bool > *p_10_s00_axi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_10->s00_axi_arlock.bind(*p_10_s00_axi_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_10_s00_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_10_s00_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_10->s00_axi_arcache.bind(*p_10_s00_axi_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_10_s00_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_10_s00_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_10->s00_axi_arprot.bind(*p_10_s00_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_10_s00_axi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_10_s00_axi_arregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_10->s00_axi_arregion.bind(*p_10_s00_axi_arregion);
        (*_glb_hdl_sc_channel_map).push_back(p_10_s00_axi_arregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_10_s00_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_10->s00_axi_arqos.bind(*p_10_s00_axi_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_10_s00_axi_arqos);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_10_s00_axi_aruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_10->s00_axi_aruser.bind(*p_10_s00_axi_aruser);
        (*_glb_hdl_sc_channel_map).push_back(p_10_s00_axi_aruser);
        xsim_sc_channel<0, bool > *p_10_s00_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_10->s00_axi_arvalid.bind(*p_10_s00_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_10_s00_axi_arvalid);
        xsim_sc_channel<0, bool > *p_10_s00_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_10->s00_axi_arready.bind(*p_10_s00_axi_arready);
        p_10_s00_axi_arready->set_sv_netview_offsetfromdp(6943296);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_10_s00_axi_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_10->s00_axi_rid.bind(*p_10_s00_axi_rid);
        p_10_s00_axi_rid->set_sv_netview_offsetfromdp(6943352);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_10_s00_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_10->s00_axi_rdata.bind(*p_10_s00_axi_rdata);
        p_10_s00_axi_rdata->set_sv_netview_offsetfromdp(6943408);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_10_s00_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_10->s00_axi_rresp.bind(*p_10_s00_axi_rresp);
        p_10_s00_axi_rresp->set_sv_netview_offsetfromdp(6943464);
        xsim_sc_channel<0, bool > *p_10_s00_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_10->s00_axi_rlast.bind(*p_10_s00_axi_rlast);
        p_10_s00_axi_rlast->set_sv_netview_offsetfromdp(6943520);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_10_s00_axi_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_10->s00_axi_ruser.bind(*p_10_s00_axi_ruser);
        p_10_s00_axi_ruser->set_sv_netview_offsetfromdp(6943576);
        xsim_sc_channel<0, bool > *p_10_s00_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_10->s00_axi_rvalid.bind(*p_10_s00_axi_rvalid);
        p_10_s00_axi_rvalid->set_sv_netview_offsetfromdp(6943632);
        xsim_sc_channel<0, bool > *p_10_s00_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_10->s00_axi_rready.bind(*p_10_s00_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_10_s00_axi_rready);
        xsim_sc_channel<0, bool > *p_10_s00_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_10->s00_axi_aclk.bind(*p_10_s00_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_10_s00_axi_aclk);
        xsim_sc_channel<0, bool > *p_10_s00_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_10->s00_axi_aresetn.bind(*p_10_s00_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_10_s00_axi_aresetn);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_10_m00_axi_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_10->m00_axi_awid.bind(*p_10_m00_axi_awid);
        p_10_m00_axi_awid->set_sv_netview_offsetfromdp(6943856);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_10_m00_axi_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_10->m00_axi_awaddr.bind(*p_10_m00_axi_awaddr);
        p_10_m00_axi_awaddr->set_sv_netview_offsetfromdp(6943912);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_10_m00_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_10->m00_axi_awlen.bind(*p_10_m00_axi_awlen);
        p_10_m00_axi_awlen->set_sv_netview_offsetfromdp(6943968);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_10_m00_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_10->m00_axi_awsize.bind(*p_10_m00_axi_awsize);
        p_10_m00_axi_awsize->set_sv_netview_offsetfromdp(6944024);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_10_m00_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_10->m00_axi_awburst.bind(*p_10_m00_axi_awburst);
        p_10_m00_axi_awburst->set_sv_netview_offsetfromdp(6944080);
        xsim_sc_channel<0, bool > *p_10_m00_axi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_10->m00_axi_awlock.bind(*p_10_m00_axi_awlock);
        p_10_m00_axi_awlock->set_sv_netview_offsetfromdp(6944136);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_10_m00_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_10->m00_axi_awcache.bind(*p_10_m00_axi_awcache);
        p_10_m00_axi_awcache->set_sv_netview_offsetfromdp(6944192);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_10_m00_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_10->m00_axi_awprot.bind(*p_10_m00_axi_awprot);
        p_10_m00_axi_awprot->set_sv_netview_offsetfromdp(6944248);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_10_m00_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_10->m00_axi_awqos.bind(*p_10_m00_axi_awqos);
        p_10_m00_axi_awqos->set_sv_netview_offsetfromdp(6944304);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_10_m00_axi_awuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_10->m00_axi_awuser.bind(*p_10_m00_axi_awuser);
        p_10_m00_axi_awuser->set_sv_netview_offsetfromdp(6944360);
        xsim_sc_channel<0, bool > *p_10_m00_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_10->m00_axi_awvalid.bind(*p_10_m00_axi_awvalid);
        p_10_m00_axi_awvalid->set_sv_netview_offsetfromdp(6944416);
        xsim_sc_channel<0, bool > *p_10_m00_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_10->m00_axi_awready.bind(*p_10_m00_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_10_m00_axi_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_10_m00_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_10->m00_axi_wdata.bind(*p_10_m00_axi_wdata);
        p_10_m00_axi_wdata->set_sv_netview_offsetfromdp(6944528);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_10_m00_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_10->m00_axi_wstrb.bind(*p_10_m00_axi_wstrb);
        p_10_m00_axi_wstrb->set_sv_netview_offsetfromdp(6944584);
        xsim_sc_channel<0, bool > *p_10_m00_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_10->m00_axi_wlast.bind(*p_10_m00_axi_wlast);
        p_10_m00_axi_wlast->set_sv_netview_offsetfromdp(6944640);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_10_m00_axi_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_10->m00_axi_wuser.bind(*p_10_m00_axi_wuser);
        p_10_m00_axi_wuser->set_sv_netview_offsetfromdp(6944696);
        xsim_sc_channel<0, bool > *p_10_m00_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_10->m00_axi_wvalid.bind(*p_10_m00_axi_wvalid);
        p_10_m00_axi_wvalid->set_sv_netview_offsetfromdp(6944752);
        xsim_sc_channel<0, bool > *p_10_m00_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_10->m00_axi_wready.bind(*p_10_m00_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_10_m00_axi_wready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_10_m00_axi_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_10->m00_axi_bid.bind(*p_10_m00_axi_bid);
        (*_glb_hdl_sc_channel_map).push_back(p_10_m00_axi_bid);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_10_m00_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_10->m00_axi_bresp.bind(*p_10_m00_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_10_m00_axi_bresp);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_10_m00_axi_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_10->m00_axi_buser.bind(*p_10_m00_axi_buser);
        (*_glb_hdl_sc_channel_map).push_back(p_10_m00_axi_buser);
        xsim_sc_channel<0, bool > *p_10_m00_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_10->m00_axi_bvalid.bind(*p_10_m00_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_10_m00_axi_bvalid);
        xsim_sc_channel<0, bool > *p_10_m00_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_10->m00_axi_bready.bind(*p_10_m00_axi_bready);
        p_10_m00_axi_bready->set_sv_netview_offsetfromdp(6945088);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_10_m00_axi_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_10->m00_axi_arid.bind(*p_10_m00_axi_arid);
        p_10_m00_axi_arid->set_sv_netview_offsetfromdp(6945144);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_10_m00_axi_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_10->m00_axi_araddr.bind(*p_10_m00_axi_araddr);
        p_10_m00_axi_araddr->set_sv_netview_offsetfromdp(6945200);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_10_m00_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_10->m00_axi_arlen.bind(*p_10_m00_axi_arlen);
        p_10_m00_axi_arlen->set_sv_netview_offsetfromdp(6945256);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_10_m00_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_10->m00_axi_arsize.bind(*p_10_m00_axi_arsize);
        p_10_m00_axi_arsize->set_sv_netview_offsetfromdp(6945312);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_10_m00_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_10->m00_axi_arburst.bind(*p_10_m00_axi_arburst);
        p_10_m00_axi_arburst->set_sv_netview_offsetfromdp(6945368);
        xsim_sc_channel<0, bool > *p_10_m00_axi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_10->m00_axi_arlock.bind(*p_10_m00_axi_arlock);
        p_10_m00_axi_arlock->set_sv_netview_offsetfromdp(6945424);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_10_m00_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_10->m00_axi_arcache.bind(*p_10_m00_axi_arcache);
        p_10_m00_axi_arcache->set_sv_netview_offsetfromdp(6945480);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_10_m00_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_10->m00_axi_arprot.bind(*p_10_m00_axi_arprot);
        p_10_m00_axi_arprot->set_sv_netview_offsetfromdp(6945536);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_10_m00_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_10->m00_axi_arqos.bind(*p_10_m00_axi_arqos);
        p_10_m00_axi_arqos->set_sv_netview_offsetfromdp(6945592);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_10_m00_axi_aruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_10->m00_axi_aruser.bind(*p_10_m00_axi_aruser);
        p_10_m00_axi_aruser->set_sv_netview_offsetfromdp(6945648);
        xsim_sc_channel<0, bool > *p_10_m00_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_10->m00_axi_arvalid.bind(*p_10_m00_axi_arvalid);
        p_10_m00_axi_arvalid->set_sv_netview_offsetfromdp(6945704);
        xsim_sc_channel<0, bool > *p_10_m00_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_10->m00_axi_arready.bind(*p_10_m00_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_10_m00_axi_arready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_10_m00_axi_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_10->m00_axi_rid.bind(*p_10_m00_axi_rid);
        (*_glb_hdl_sc_channel_map).push_back(p_10_m00_axi_rid);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_10_m00_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_10->m00_axi_rdata.bind(*p_10_m00_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_10_m00_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_10_m00_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_10->m00_axi_rresp.bind(*p_10_m00_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_10_m00_axi_rresp);
        xsim_sc_channel<0, bool > *p_10_m00_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_10->m00_axi_rlast.bind(*p_10_m00_axi_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_10_m00_axi_rlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_10_m00_axi_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_10->m00_axi_ruser.bind(*p_10_m00_axi_ruser);
        (*_glb_hdl_sc_channel_map).push_back(p_10_m00_axi_ruser);
        xsim_sc_channel<0, bool > *p_10_m00_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_10->m00_axi_rvalid.bind(*p_10_m00_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_10_m00_axi_rvalid);
        xsim_sc_channel<0, bool > *p_10_m00_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_10->m00_axi_rready.bind(*p_10_m00_axi_rready);
        p_10_m00_axi_rready->set_sv_netview_offsetfromdp(6946152);
        xsim_sc_channel<0, bool > *p_10_m00_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_10->m00_axi_aclk.bind(*p_10_m00_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_10_m00_axi_aclk);
        xsim_sc_channel<0, bool > *p_10_m00_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_10->m00_axi_aresetn.bind(*p_10_m00_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_10_m00_axi_aresetn);
        sc_inst_11 = new pfm_dynamic_icn_pass_1_0(".emu_wrapper.emu_i.dynamic_region.slr1.icn_pass_1");
        sc_inst_11->xsim_set_dbg_index(821);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_11_s00_axi_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_11->s00_axi_awid.bind(*p_11_s00_axi_awid);
        (*_glb_hdl_sc_channel_map).push_back(p_11_s00_axi_awid);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_11_s00_axi_awaddr = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_11->s00_axi_awaddr.bind(*p_11_s00_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_11_s00_axi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_11_s00_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_11->s00_axi_awlen.bind(*p_11_s00_axi_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_11_s00_axi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_11_s00_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_11->s00_axi_awsize.bind(*p_11_s00_axi_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_11_s00_axi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_11_s00_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_11->s00_axi_awburst.bind(*p_11_s00_axi_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_11_s00_axi_awburst);
        xsim_sc_channel<0, bool > *p_11_s00_axi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_11->s00_axi_awlock.bind(*p_11_s00_axi_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_11_s00_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_11_s00_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_11->s00_axi_awcache.bind(*p_11_s00_axi_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_11_s00_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_11_s00_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_11->s00_axi_awprot.bind(*p_11_s00_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_11_s00_axi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_11_s00_axi_awregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_11->s00_axi_awregion.bind(*p_11_s00_axi_awregion);
        (*_glb_hdl_sc_channel_map).push_back(p_11_s00_axi_awregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_11_s00_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_11->s00_axi_awqos.bind(*p_11_s00_axi_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_11_s00_axi_awqos);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_11_s00_axi_awuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_11->s00_axi_awuser.bind(*p_11_s00_axi_awuser);
        (*_glb_hdl_sc_channel_map).push_back(p_11_s00_axi_awuser);
        xsim_sc_channel<0, bool > *p_11_s00_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_11->s00_axi_awvalid.bind(*p_11_s00_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_11_s00_axi_awvalid);
        xsim_sc_channel<0, bool > *p_11_s00_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_11->s00_axi_awready.bind(*p_11_s00_axi_awready);
        p_11_s00_axi_awready->set_sv_netview_offsetfromdp(7482920);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_11_s00_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_11->s00_axi_wdata.bind(*p_11_s00_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_11_s00_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_11_s00_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_11->s00_axi_wstrb.bind(*p_11_s00_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_11_s00_axi_wstrb);
        xsim_sc_channel<0, bool > *p_11_s00_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_11->s00_axi_wlast.bind(*p_11_s00_axi_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_11_s00_axi_wlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_11_s00_axi_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_11->s00_axi_wuser.bind(*p_11_s00_axi_wuser);
        (*_glb_hdl_sc_channel_map).push_back(p_11_s00_axi_wuser);
        xsim_sc_channel<0, bool > *p_11_s00_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_11->s00_axi_wvalid.bind(*p_11_s00_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_11_s00_axi_wvalid);
        xsim_sc_channel<0, bool > *p_11_s00_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_11->s00_axi_wready.bind(*p_11_s00_axi_wready);
        p_11_s00_axi_wready->set_sv_netview_offsetfromdp(7483256);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_11_s00_axi_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_11->s00_axi_bid.bind(*p_11_s00_axi_bid);
        p_11_s00_axi_bid->set_sv_netview_offsetfromdp(7483312);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_11_s00_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_11->s00_axi_bresp.bind(*p_11_s00_axi_bresp);
        p_11_s00_axi_bresp->set_sv_netview_offsetfromdp(7483368);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_11_s00_axi_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_11->s00_axi_buser.bind(*p_11_s00_axi_buser);
        p_11_s00_axi_buser->set_sv_netview_offsetfromdp(7483424);
        xsim_sc_channel<0, bool > *p_11_s00_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_11->s00_axi_bvalid.bind(*p_11_s00_axi_bvalid);
        p_11_s00_axi_bvalid->set_sv_netview_offsetfromdp(7483480);
        xsim_sc_channel<0, bool > *p_11_s00_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_11->s00_axi_bready.bind(*p_11_s00_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_11_s00_axi_bready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_11_s00_axi_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_11->s00_axi_arid.bind(*p_11_s00_axi_arid);
        (*_glb_hdl_sc_channel_map).push_back(p_11_s00_axi_arid);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_11_s00_axi_araddr = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_11->s00_axi_araddr.bind(*p_11_s00_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_11_s00_axi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_11_s00_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_11->s00_axi_arlen.bind(*p_11_s00_axi_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_11_s00_axi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_11_s00_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_11->s00_axi_arsize.bind(*p_11_s00_axi_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_11_s00_axi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_11_s00_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_11->s00_axi_arburst.bind(*p_11_s00_axi_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_11_s00_axi_arburst);
        xsim_sc_channel<0, bool > *p_11_s00_axi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_11->s00_axi_arlock.bind(*p_11_s00_axi_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_11_s00_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_11_s00_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_11->s00_axi_arcache.bind(*p_11_s00_axi_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_11_s00_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_11_s00_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_11->s00_axi_arprot.bind(*p_11_s00_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_11_s00_axi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_11_s00_axi_arregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_11->s00_axi_arregion.bind(*p_11_s00_axi_arregion);
        (*_glb_hdl_sc_channel_map).push_back(p_11_s00_axi_arregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_11_s00_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_11->s00_axi_arqos.bind(*p_11_s00_axi_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_11_s00_axi_arqos);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_11_s00_axi_aruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_11->s00_axi_aruser.bind(*p_11_s00_axi_aruser);
        (*_glb_hdl_sc_channel_map).push_back(p_11_s00_axi_aruser);
        xsim_sc_channel<0, bool > *p_11_s00_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_11->s00_axi_arvalid.bind(*p_11_s00_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_11_s00_axi_arvalid);
        xsim_sc_channel<0, bool > *p_11_s00_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_11->s00_axi_arready.bind(*p_11_s00_axi_arready);
        p_11_s00_axi_arready->set_sv_netview_offsetfromdp(7484264);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_11_s00_axi_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_11->s00_axi_rid.bind(*p_11_s00_axi_rid);
        p_11_s00_axi_rid->set_sv_netview_offsetfromdp(7484320);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_11_s00_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_11->s00_axi_rdata.bind(*p_11_s00_axi_rdata);
        p_11_s00_axi_rdata->set_sv_netview_offsetfromdp(7484376);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_11_s00_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_11->s00_axi_rresp.bind(*p_11_s00_axi_rresp);
        p_11_s00_axi_rresp->set_sv_netview_offsetfromdp(7484432);
        xsim_sc_channel<0, bool > *p_11_s00_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_11->s00_axi_rlast.bind(*p_11_s00_axi_rlast);
        p_11_s00_axi_rlast->set_sv_netview_offsetfromdp(7484488);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_11_s00_axi_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_11->s00_axi_ruser.bind(*p_11_s00_axi_ruser);
        p_11_s00_axi_ruser->set_sv_netview_offsetfromdp(7484544);
        xsim_sc_channel<0, bool > *p_11_s00_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_11->s00_axi_rvalid.bind(*p_11_s00_axi_rvalid);
        p_11_s00_axi_rvalid->set_sv_netview_offsetfromdp(7484600);
        xsim_sc_channel<0, bool > *p_11_s00_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_11->s00_axi_rready.bind(*p_11_s00_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_11_s00_axi_rready);
        xsim_sc_channel<0, bool > *p_11_s00_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_11->s00_axi_aclk.bind(*p_11_s00_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_11_s00_axi_aclk);
        xsim_sc_channel<0, bool > *p_11_s00_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_11->s00_axi_aresetn.bind(*p_11_s00_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_11_s00_axi_aresetn);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_11_m00_axi_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_11->m00_axi_awid.bind(*p_11_m00_axi_awid);
        p_11_m00_axi_awid->set_sv_netview_offsetfromdp(7484824);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_11_m00_axi_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_11->m00_axi_awaddr.bind(*p_11_m00_axi_awaddr);
        p_11_m00_axi_awaddr->set_sv_netview_offsetfromdp(7484880);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_11_m00_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_11->m00_axi_awlen.bind(*p_11_m00_axi_awlen);
        p_11_m00_axi_awlen->set_sv_netview_offsetfromdp(7484936);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_11_m00_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_11->m00_axi_awsize.bind(*p_11_m00_axi_awsize);
        p_11_m00_axi_awsize->set_sv_netview_offsetfromdp(7484992);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_11_m00_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_11->m00_axi_awburst.bind(*p_11_m00_axi_awburst);
        p_11_m00_axi_awburst->set_sv_netview_offsetfromdp(7485048);
        xsim_sc_channel<0, bool > *p_11_m00_axi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_11->m00_axi_awlock.bind(*p_11_m00_axi_awlock);
        p_11_m00_axi_awlock->set_sv_netview_offsetfromdp(7485104);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_11_m00_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_11->m00_axi_awcache.bind(*p_11_m00_axi_awcache);
        p_11_m00_axi_awcache->set_sv_netview_offsetfromdp(7485160);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_11_m00_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_11->m00_axi_awprot.bind(*p_11_m00_axi_awprot);
        p_11_m00_axi_awprot->set_sv_netview_offsetfromdp(7485216);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_11_m00_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_11->m00_axi_awqos.bind(*p_11_m00_axi_awqos);
        p_11_m00_axi_awqos->set_sv_netview_offsetfromdp(7485272);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_11_m00_axi_awuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_11->m00_axi_awuser.bind(*p_11_m00_axi_awuser);
        p_11_m00_axi_awuser->set_sv_netview_offsetfromdp(7485328);
        xsim_sc_channel<0, bool > *p_11_m00_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_11->m00_axi_awvalid.bind(*p_11_m00_axi_awvalid);
        p_11_m00_axi_awvalid->set_sv_netview_offsetfromdp(7485384);
        xsim_sc_channel<0, bool > *p_11_m00_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_11->m00_axi_awready.bind(*p_11_m00_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_11_m00_axi_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_11_m00_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_11->m00_axi_wdata.bind(*p_11_m00_axi_wdata);
        p_11_m00_axi_wdata->set_sv_netview_offsetfromdp(7485496);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_11_m00_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_11->m00_axi_wstrb.bind(*p_11_m00_axi_wstrb);
        p_11_m00_axi_wstrb->set_sv_netview_offsetfromdp(7485552);
        xsim_sc_channel<0, bool > *p_11_m00_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_11->m00_axi_wlast.bind(*p_11_m00_axi_wlast);
        p_11_m00_axi_wlast->set_sv_netview_offsetfromdp(7485608);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_11_m00_axi_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_11->m00_axi_wuser.bind(*p_11_m00_axi_wuser);
        p_11_m00_axi_wuser->set_sv_netview_offsetfromdp(7485664);
        xsim_sc_channel<0, bool > *p_11_m00_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_11->m00_axi_wvalid.bind(*p_11_m00_axi_wvalid);
        p_11_m00_axi_wvalid->set_sv_netview_offsetfromdp(7485720);
        xsim_sc_channel<0, bool > *p_11_m00_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_11->m00_axi_wready.bind(*p_11_m00_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_11_m00_axi_wready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_11_m00_axi_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_11->m00_axi_bid.bind(*p_11_m00_axi_bid);
        (*_glb_hdl_sc_channel_map).push_back(p_11_m00_axi_bid);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_11_m00_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_11->m00_axi_bresp.bind(*p_11_m00_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_11_m00_axi_bresp);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_11_m00_axi_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_11->m00_axi_buser.bind(*p_11_m00_axi_buser);
        (*_glb_hdl_sc_channel_map).push_back(p_11_m00_axi_buser);
        xsim_sc_channel<0, bool > *p_11_m00_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_11->m00_axi_bvalid.bind(*p_11_m00_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_11_m00_axi_bvalid);
        xsim_sc_channel<0, bool > *p_11_m00_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_11->m00_axi_bready.bind(*p_11_m00_axi_bready);
        p_11_m00_axi_bready->set_sv_netview_offsetfromdp(7486056);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_11_m00_axi_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_11->m00_axi_arid.bind(*p_11_m00_axi_arid);
        p_11_m00_axi_arid->set_sv_netview_offsetfromdp(7486112);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_11_m00_axi_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_11->m00_axi_araddr.bind(*p_11_m00_axi_araddr);
        p_11_m00_axi_araddr->set_sv_netview_offsetfromdp(7486168);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_11_m00_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_11->m00_axi_arlen.bind(*p_11_m00_axi_arlen);
        p_11_m00_axi_arlen->set_sv_netview_offsetfromdp(7486224);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_11_m00_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_11->m00_axi_arsize.bind(*p_11_m00_axi_arsize);
        p_11_m00_axi_arsize->set_sv_netview_offsetfromdp(7486280);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_11_m00_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_11->m00_axi_arburst.bind(*p_11_m00_axi_arburst);
        p_11_m00_axi_arburst->set_sv_netview_offsetfromdp(7486336);
        xsim_sc_channel<0, bool > *p_11_m00_axi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_11->m00_axi_arlock.bind(*p_11_m00_axi_arlock);
        p_11_m00_axi_arlock->set_sv_netview_offsetfromdp(7486392);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_11_m00_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_11->m00_axi_arcache.bind(*p_11_m00_axi_arcache);
        p_11_m00_axi_arcache->set_sv_netview_offsetfromdp(7486448);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_11_m00_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_11->m00_axi_arprot.bind(*p_11_m00_axi_arprot);
        p_11_m00_axi_arprot->set_sv_netview_offsetfromdp(7486504);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_11_m00_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_11->m00_axi_arqos.bind(*p_11_m00_axi_arqos);
        p_11_m00_axi_arqos->set_sv_netview_offsetfromdp(7486560);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_11_m00_axi_aruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_11->m00_axi_aruser.bind(*p_11_m00_axi_aruser);
        p_11_m00_axi_aruser->set_sv_netview_offsetfromdp(7486616);
        xsim_sc_channel<0, bool > *p_11_m00_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_11->m00_axi_arvalid.bind(*p_11_m00_axi_arvalid);
        p_11_m00_axi_arvalid->set_sv_netview_offsetfromdp(7486672);
        xsim_sc_channel<0, bool > *p_11_m00_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_11->m00_axi_arready.bind(*p_11_m00_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_11_m00_axi_arready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_11_m00_axi_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_11->m00_axi_rid.bind(*p_11_m00_axi_rid);
        (*_glb_hdl_sc_channel_map).push_back(p_11_m00_axi_rid);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_11_m00_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_11->m00_axi_rdata.bind(*p_11_m00_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_11_m00_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_11_m00_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_11->m00_axi_rresp.bind(*p_11_m00_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_11_m00_axi_rresp);
        xsim_sc_channel<0, bool > *p_11_m00_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_11->m00_axi_rlast.bind(*p_11_m00_axi_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_11_m00_axi_rlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_11_m00_axi_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_11->m00_axi_ruser.bind(*p_11_m00_axi_ruser);
        (*_glb_hdl_sc_channel_map).push_back(p_11_m00_axi_ruser);
        xsim_sc_channel<0, bool > *p_11_m00_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_11->m00_axi_rvalid.bind(*p_11_m00_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_11_m00_axi_rvalid);
        xsim_sc_channel<0, bool > *p_11_m00_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_11->m00_axi_rready.bind(*p_11_m00_axi_rready);
        p_11_m00_axi_rready->set_sv_netview_offsetfromdp(7487120);
        xsim_sc_channel<0, bool > *p_11_m00_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_11->m00_axi_aclk.bind(*p_11_m00_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_11_m00_axi_aclk);
        xsim_sc_channel<0, bool > *p_11_m00_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_11->m00_axi_aresetn.bind(*p_11_m00_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_11_m00_axi_aresetn);
        sc_inst_12 = new pfm_dynamic_icn_pass_2_0(".emu_wrapper.emu_i.dynamic_region.slr1.icn_pass_2");
        sc_inst_12->xsim_set_dbg_index(822);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_12_s00_axi_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_12->s00_axi_awid.bind(*p_12_s00_axi_awid);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s00_axi_awid);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_12_s00_axi_awaddr = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_12->s00_axi_awaddr.bind(*p_12_s00_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s00_axi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_12_s00_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_12->s00_axi_awlen.bind(*p_12_s00_axi_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s00_axi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_12_s00_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_12->s00_axi_awsize.bind(*p_12_s00_axi_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s00_axi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_12_s00_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_12->s00_axi_awburst.bind(*p_12_s00_axi_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s00_axi_awburst);
        xsim_sc_channel<0, bool > *p_12_s00_axi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_12->s00_axi_awlock.bind(*p_12_s00_axi_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s00_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_12_s00_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_12->s00_axi_awcache.bind(*p_12_s00_axi_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s00_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_12_s00_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_12->s00_axi_awprot.bind(*p_12_s00_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s00_axi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_12_s00_axi_awregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_12->s00_axi_awregion.bind(*p_12_s00_axi_awregion);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s00_axi_awregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_12_s00_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_12->s00_axi_awqos.bind(*p_12_s00_axi_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s00_axi_awqos);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_12_s00_axi_awuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_12->s00_axi_awuser.bind(*p_12_s00_axi_awuser);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s00_axi_awuser);
        xsim_sc_channel<0, bool > *p_12_s00_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_12->s00_axi_awvalid.bind(*p_12_s00_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s00_axi_awvalid);
        xsim_sc_channel<0, bool > *p_12_s00_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_12->s00_axi_awready.bind(*p_12_s00_axi_awready);
        p_12_s00_axi_awready->set_sv_netview_offsetfromdp(7488008);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_12_s00_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_12->s00_axi_wdata.bind(*p_12_s00_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s00_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_12_s00_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_12->s00_axi_wstrb.bind(*p_12_s00_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s00_axi_wstrb);
        xsim_sc_channel<0, bool > *p_12_s00_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_12->s00_axi_wlast.bind(*p_12_s00_axi_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s00_axi_wlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_12_s00_axi_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_12->s00_axi_wuser.bind(*p_12_s00_axi_wuser);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s00_axi_wuser);
        xsim_sc_channel<0, bool > *p_12_s00_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_12->s00_axi_wvalid.bind(*p_12_s00_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s00_axi_wvalid);
        xsim_sc_channel<0, bool > *p_12_s00_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_12->s00_axi_wready.bind(*p_12_s00_axi_wready);
        p_12_s00_axi_wready->set_sv_netview_offsetfromdp(7488344);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_12_s00_axi_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_12->s00_axi_bid.bind(*p_12_s00_axi_bid);
        p_12_s00_axi_bid->set_sv_netview_offsetfromdp(7488400);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_12_s00_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_12->s00_axi_bresp.bind(*p_12_s00_axi_bresp);
        p_12_s00_axi_bresp->set_sv_netview_offsetfromdp(7488456);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_12_s00_axi_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_12->s00_axi_buser.bind(*p_12_s00_axi_buser);
        p_12_s00_axi_buser->set_sv_netview_offsetfromdp(7488512);
        xsim_sc_channel<0, bool > *p_12_s00_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_12->s00_axi_bvalid.bind(*p_12_s00_axi_bvalid);
        p_12_s00_axi_bvalid->set_sv_netview_offsetfromdp(7488568);
        xsim_sc_channel<0, bool > *p_12_s00_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_12->s00_axi_bready.bind(*p_12_s00_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s00_axi_bready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_12_s00_axi_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_12->s00_axi_arid.bind(*p_12_s00_axi_arid);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s00_axi_arid);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_12_s00_axi_araddr = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_12->s00_axi_araddr.bind(*p_12_s00_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s00_axi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_12_s00_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_12->s00_axi_arlen.bind(*p_12_s00_axi_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s00_axi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_12_s00_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_12->s00_axi_arsize.bind(*p_12_s00_axi_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s00_axi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_12_s00_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_12->s00_axi_arburst.bind(*p_12_s00_axi_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s00_axi_arburst);
        xsim_sc_channel<0, bool > *p_12_s00_axi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_12->s00_axi_arlock.bind(*p_12_s00_axi_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s00_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_12_s00_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_12->s00_axi_arcache.bind(*p_12_s00_axi_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s00_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_12_s00_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_12->s00_axi_arprot.bind(*p_12_s00_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s00_axi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_12_s00_axi_arregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_12->s00_axi_arregion.bind(*p_12_s00_axi_arregion);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s00_axi_arregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_12_s00_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_12->s00_axi_arqos.bind(*p_12_s00_axi_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s00_axi_arqos);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_12_s00_axi_aruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_12->s00_axi_aruser.bind(*p_12_s00_axi_aruser);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s00_axi_aruser);
        xsim_sc_channel<0, bool > *p_12_s00_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_12->s00_axi_arvalid.bind(*p_12_s00_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s00_axi_arvalid);
        xsim_sc_channel<0, bool > *p_12_s00_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_12->s00_axi_arready.bind(*p_12_s00_axi_arready);
        p_12_s00_axi_arready->set_sv_netview_offsetfromdp(7489352);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_12_s00_axi_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_12->s00_axi_rid.bind(*p_12_s00_axi_rid);
        p_12_s00_axi_rid->set_sv_netview_offsetfromdp(7489408);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_12_s00_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_12->s00_axi_rdata.bind(*p_12_s00_axi_rdata);
        p_12_s00_axi_rdata->set_sv_netview_offsetfromdp(7489464);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_12_s00_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_12->s00_axi_rresp.bind(*p_12_s00_axi_rresp);
        p_12_s00_axi_rresp->set_sv_netview_offsetfromdp(7489520);
        xsim_sc_channel<0, bool > *p_12_s00_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_12->s00_axi_rlast.bind(*p_12_s00_axi_rlast);
        p_12_s00_axi_rlast->set_sv_netview_offsetfromdp(7489576);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_12_s00_axi_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_12->s00_axi_ruser.bind(*p_12_s00_axi_ruser);
        p_12_s00_axi_ruser->set_sv_netview_offsetfromdp(7489632);
        xsim_sc_channel<0, bool > *p_12_s00_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_12->s00_axi_rvalid.bind(*p_12_s00_axi_rvalid);
        p_12_s00_axi_rvalid->set_sv_netview_offsetfromdp(7489688);
        xsim_sc_channel<0, bool > *p_12_s00_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_12->s00_axi_rready.bind(*p_12_s00_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s00_axi_rready);
        xsim_sc_channel<0, bool > *p_12_s00_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_12->s00_axi_aclk.bind(*p_12_s00_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s00_axi_aclk);
        xsim_sc_channel<0, bool > *p_12_s00_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_12->s00_axi_aresetn.bind(*p_12_s00_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s00_axi_aresetn);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_12_m00_axi_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_12->m00_axi_awid.bind(*p_12_m00_axi_awid);
        p_12_m00_axi_awid->set_sv_netview_offsetfromdp(7489912);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_12_m00_axi_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_12->m00_axi_awaddr.bind(*p_12_m00_axi_awaddr);
        p_12_m00_axi_awaddr->set_sv_netview_offsetfromdp(7489968);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_12_m00_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_12->m00_axi_awlen.bind(*p_12_m00_axi_awlen);
        p_12_m00_axi_awlen->set_sv_netview_offsetfromdp(7490024);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_12_m00_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_12->m00_axi_awsize.bind(*p_12_m00_axi_awsize);
        p_12_m00_axi_awsize->set_sv_netview_offsetfromdp(7490080);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_12_m00_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_12->m00_axi_awburst.bind(*p_12_m00_axi_awburst);
        p_12_m00_axi_awburst->set_sv_netview_offsetfromdp(7490136);
        xsim_sc_channel<0, bool > *p_12_m00_axi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_12->m00_axi_awlock.bind(*p_12_m00_axi_awlock);
        p_12_m00_axi_awlock->set_sv_netview_offsetfromdp(7490192);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_12_m00_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_12->m00_axi_awcache.bind(*p_12_m00_axi_awcache);
        p_12_m00_axi_awcache->set_sv_netview_offsetfromdp(7490248);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_12_m00_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_12->m00_axi_awprot.bind(*p_12_m00_axi_awprot);
        p_12_m00_axi_awprot->set_sv_netview_offsetfromdp(7490304);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_12_m00_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_12->m00_axi_awqos.bind(*p_12_m00_axi_awqos);
        p_12_m00_axi_awqos->set_sv_netview_offsetfromdp(7490360);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_12_m00_axi_awuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_12->m00_axi_awuser.bind(*p_12_m00_axi_awuser);
        p_12_m00_axi_awuser->set_sv_netview_offsetfromdp(7490416);
        xsim_sc_channel<0, bool > *p_12_m00_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_12->m00_axi_awvalid.bind(*p_12_m00_axi_awvalid);
        p_12_m00_axi_awvalid->set_sv_netview_offsetfromdp(7490472);
        xsim_sc_channel<0, bool > *p_12_m00_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_12->m00_axi_awready.bind(*p_12_m00_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_12_m00_axi_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_12_m00_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_12->m00_axi_wdata.bind(*p_12_m00_axi_wdata);
        p_12_m00_axi_wdata->set_sv_netview_offsetfromdp(7490584);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_12_m00_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_12->m00_axi_wstrb.bind(*p_12_m00_axi_wstrb);
        p_12_m00_axi_wstrb->set_sv_netview_offsetfromdp(7490640);
        xsim_sc_channel<0, bool > *p_12_m00_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_12->m00_axi_wlast.bind(*p_12_m00_axi_wlast);
        p_12_m00_axi_wlast->set_sv_netview_offsetfromdp(7490696);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_12_m00_axi_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_12->m00_axi_wuser.bind(*p_12_m00_axi_wuser);
        p_12_m00_axi_wuser->set_sv_netview_offsetfromdp(7490752);
        xsim_sc_channel<0, bool > *p_12_m00_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_12->m00_axi_wvalid.bind(*p_12_m00_axi_wvalid);
        p_12_m00_axi_wvalid->set_sv_netview_offsetfromdp(7490808);
        xsim_sc_channel<0, bool > *p_12_m00_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_12->m00_axi_wready.bind(*p_12_m00_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_12_m00_axi_wready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_12_m00_axi_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_12->m00_axi_bid.bind(*p_12_m00_axi_bid);
        (*_glb_hdl_sc_channel_map).push_back(p_12_m00_axi_bid);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_12_m00_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_12->m00_axi_bresp.bind(*p_12_m00_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_12_m00_axi_bresp);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_12_m00_axi_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_12->m00_axi_buser.bind(*p_12_m00_axi_buser);
        (*_glb_hdl_sc_channel_map).push_back(p_12_m00_axi_buser);
        xsim_sc_channel<0, bool > *p_12_m00_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_12->m00_axi_bvalid.bind(*p_12_m00_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_12_m00_axi_bvalid);
        xsim_sc_channel<0, bool > *p_12_m00_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_12->m00_axi_bready.bind(*p_12_m00_axi_bready);
        p_12_m00_axi_bready->set_sv_netview_offsetfromdp(7491144);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_12_m00_axi_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_12->m00_axi_arid.bind(*p_12_m00_axi_arid);
        p_12_m00_axi_arid->set_sv_netview_offsetfromdp(7491200);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_12_m00_axi_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_12->m00_axi_araddr.bind(*p_12_m00_axi_araddr);
        p_12_m00_axi_araddr->set_sv_netview_offsetfromdp(7491256);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_12_m00_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_12->m00_axi_arlen.bind(*p_12_m00_axi_arlen);
        p_12_m00_axi_arlen->set_sv_netview_offsetfromdp(7491312);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_12_m00_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_12->m00_axi_arsize.bind(*p_12_m00_axi_arsize);
        p_12_m00_axi_arsize->set_sv_netview_offsetfromdp(7491368);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_12_m00_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_12->m00_axi_arburst.bind(*p_12_m00_axi_arburst);
        p_12_m00_axi_arburst->set_sv_netview_offsetfromdp(7491424);
        xsim_sc_channel<0, bool > *p_12_m00_axi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_12->m00_axi_arlock.bind(*p_12_m00_axi_arlock);
        p_12_m00_axi_arlock->set_sv_netview_offsetfromdp(7491480);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_12_m00_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_12->m00_axi_arcache.bind(*p_12_m00_axi_arcache);
        p_12_m00_axi_arcache->set_sv_netview_offsetfromdp(7491536);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_12_m00_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_12->m00_axi_arprot.bind(*p_12_m00_axi_arprot);
        p_12_m00_axi_arprot->set_sv_netview_offsetfromdp(7491592);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_12_m00_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_12->m00_axi_arqos.bind(*p_12_m00_axi_arqos);
        p_12_m00_axi_arqos->set_sv_netview_offsetfromdp(7491648);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_12_m00_axi_aruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_12->m00_axi_aruser.bind(*p_12_m00_axi_aruser);
        p_12_m00_axi_aruser->set_sv_netview_offsetfromdp(7491704);
        xsim_sc_channel<0, bool > *p_12_m00_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_12->m00_axi_arvalid.bind(*p_12_m00_axi_arvalid);
        p_12_m00_axi_arvalid->set_sv_netview_offsetfromdp(7491760);
        xsim_sc_channel<0, bool > *p_12_m00_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_12->m00_axi_arready.bind(*p_12_m00_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_12_m00_axi_arready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_12_m00_axi_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_12->m00_axi_rid.bind(*p_12_m00_axi_rid);
        (*_glb_hdl_sc_channel_map).push_back(p_12_m00_axi_rid);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_12_m00_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_12->m00_axi_rdata.bind(*p_12_m00_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_12_m00_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_12_m00_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_12->m00_axi_rresp.bind(*p_12_m00_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_12_m00_axi_rresp);
        xsim_sc_channel<0, bool > *p_12_m00_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_12->m00_axi_rlast.bind(*p_12_m00_axi_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_12_m00_axi_rlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_12_m00_axi_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_12->m00_axi_ruser.bind(*p_12_m00_axi_ruser);
        (*_glb_hdl_sc_channel_map).push_back(p_12_m00_axi_ruser);
        xsim_sc_channel<0, bool > *p_12_m00_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_12->m00_axi_rvalid.bind(*p_12_m00_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_12_m00_axi_rvalid);
        xsim_sc_channel<0, bool > *p_12_m00_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_12->m00_axi_rready.bind(*p_12_m00_axi_rready);
        p_12_m00_axi_rready->set_sv_netview_offsetfromdp(7492208);
        xsim_sc_channel<0, bool > *p_12_m00_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_12->m00_axi_aclk.bind(*p_12_m00_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_12_m00_axi_aclk);
        xsim_sc_channel<0, bool > *p_12_m00_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_12->m00_axi_aresetn.bind(*p_12_m00_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_12_m00_axi_aresetn);
        sc_inst_13 = new pfm_dynamic_icn_pass_3_0(".emu_wrapper.emu_i.dynamic_region.slr2.icn_pass_3");
        sc_inst_13->xsim_set_dbg_index(1020);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_13_s00_axi_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_13->s00_axi_awid.bind(*p_13_s00_axi_awid);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s00_axi_awid);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_13_s00_axi_awaddr = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_13->s00_axi_awaddr.bind(*p_13_s00_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s00_axi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_13_s00_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_13->s00_axi_awlen.bind(*p_13_s00_axi_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s00_axi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_13_s00_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_13->s00_axi_awsize.bind(*p_13_s00_axi_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s00_axi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_13_s00_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_13->s00_axi_awburst.bind(*p_13_s00_axi_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s00_axi_awburst);
        xsim_sc_channel<0, bool > *p_13_s00_axi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_13->s00_axi_awlock.bind(*p_13_s00_axi_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s00_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_13_s00_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_13->s00_axi_awcache.bind(*p_13_s00_axi_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s00_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_13_s00_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_13->s00_axi_awprot.bind(*p_13_s00_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s00_axi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_13_s00_axi_awregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_13->s00_axi_awregion.bind(*p_13_s00_axi_awregion);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s00_axi_awregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_13_s00_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_13->s00_axi_awqos.bind(*p_13_s00_axi_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s00_axi_awqos);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_13_s00_axi_awuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_13->s00_axi_awuser.bind(*p_13_s00_axi_awuser);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s00_axi_awuser);
        xsim_sc_channel<0, bool > *p_13_s00_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_13->s00_axi_awvalid.bind(*p_13_s00_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s00_axi_awvalid);
        xsim_sc_channel<0, bool > *p_13_s00_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_13->s00_axi_awready.bind(*p_13_s00_axi_awready);
        p_13_s00_axi_awready->set_sv_netview_offsetfromdp(8066008);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_13_s00_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_13->s00_axi_wdata.bind(*p_13_s00_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s00_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_13_s00_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_13->s00_axi_wstrb.bind(*p_13_s00_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s00_axi_wstrb);
        xsim_sc_channel<0, bool > *p_13_s00_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_13->s00_axi_wlast.bind(*p_13_s00_axi_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s00_axi_wlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_13_s00_axi_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_13->s00_axi_wuser.bind(*p_13_s00_axi_wuser);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s00_axi_wuser);
        xsim_sc_channel<0, bool > *p_13_s00_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_13->s00_axi_wvalid.bind(*p_13_s00_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s00_axi_wvalid);
        xsim_sc_channel<0, bool > *p_13_s00_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_13->s00_axi_wready.bind(*p_13_s00_axi_wready);
        p_13_s00_axi_wready->set_sv_netview_offsetfromdp(8066344);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_13_s00_axi_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_13->s00_axi_bid.bind(*p_13_s00_axi_bid);
        p_13_s00_axi_bid->set_sv_netview_offsetfromdp(8066400);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_13_s00_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_13->s00_axi_bresp.bind(*p_13_s00_axi_bresp);
        p_13_s00_axi_bresp->set_sv_netview_offsetfromdp(8066456);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_13_s00_axi_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_13->s00_axi_buser.bind(*p_13_s00_axi_buser);
        p_13_s00_axi_buser->set_sv_netview_offsetfromdp(8066512);
        xsim_sc_channel<0, bool > *p_13_s00_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_13->s00_axi_bvalid.bind(*p_13_s00_axi_bvalid);
        p_13_s00_axi_bvalid->set_sv_netview_offsetfromdp(8066568);
        xsim_sc_channel<0, bool > *p_13_s00_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_13->s00_axi_bready.bind(*p_13_s00_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s00_axi_bready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_13_s00_axi_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_13->s00_axi_arid.bind(*p_13_s00_axi_arid);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s00_axi_arid);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_13_s00_axi_araddr = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_13->s00_axi_araddr.bind(*p_13_s00_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s00_axi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_13_s00_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_13->s00_axi_arlen.bind(*p_13_s00_axi_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s00_axi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_13_s00_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_13->s00_axi_arsize.bind(*p_13_s00_axi_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s00_axi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_13_s00_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_13->s00_axi_arburst.bind(*p_13_s00_axi_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s00_axi_arburst);
        xsim_sc_channel<0, bool > *p_13_s00_axi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_13->s00_axi_arlock.bind(*p_13_s00_axi_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s00_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_13_s00_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_13->s00_axi_arcache.bind(*p_13_s00_axi_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s00_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_13_s00_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_13->s00_axi_arprot.bind(*p_13_s00_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s00_axi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_13_s00_axi_arregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_13->s00_axi_arregion.bind(*p_13_s00_axi_arregion);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s00_axi_arregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_13_s00_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_13->s00_axi_arqos.bind(*p_13_s00_axi_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s00_axi_arqos);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_13_s00_axi_aruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_13->s00_axi_aruser.bind(*p_13_s00_axi_aruser);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s00_axi_aruser);
        xsim_sc_channel<0, bool > *p_13_s00_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_13->s00_axi_arvalid.bind(*p_13_s00_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s00_axi_arvalid);
        xsim_sc_channel<0, bool > *p_13_s00_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_13->s00_axi_arready.bind(*p_13_s00_axi_arready);
        p_13_s00_axi_arready->set_sv_netview_offsetfromdp(8067352);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_13_s00_axi_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_13->s00_axi_rid.bind(*p_13_s00_axi_rid);
        p_13_s00_axi_rid->set_sv_netview_offsetfromdp(8067408);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_13_s00_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_13->s00_axi_rdata.bind(*p_13_s00_axi_rdata);
        p_13_s00_axi_rdata->set_sv_netview_offsetfromdp(8067464);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_13_s00_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_13->s00_axi_rresp.bind(*p_13_s00_axi_rresp);
        p_13_s00_axi_rresp->set_sv_netview_offsetfromdp(8067520);
        xsim_sc_channel<0, bool > *p_13_s00_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_13->s00_axi_rlast.bind(*p_13_s00_axi_rlast);
        p_13_s00_axi_rlast->set_sv_netview_offsetfromdp(8067576);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_13_s00_axi_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_13->s00_axi_ruser.bind(*p_13_s00_axi_ruser);
        p_13_s00_axi_ruser->set_sv_netview_offsetfromdp(8067632);
        xsim_sc_channel<0, bool > *p_13_s00_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_13->s00_axi_rvalid.bind(*p_13_s00_axi_rvalid);
        p_13_s00_axi_rvalid->set_sv_netview_offsetfromdp(8067688);
        xsim_sc_channel<0, bool > *p_13_s00_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_13->s00_axi_rready.bind(*p_13_s00_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s00_axi_rready);
        xsim_sc_channel<0, bool > *p_13_s00_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_13->s00_axi_aclk.bind(*p_13_s00_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s00_axi_aclk);
        xsim_sc_channel<0, bool > *p_13_s00_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_13->s00_axi_aresetn.bind(*p_13_s00_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s00_axi_aresetn);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_13_m00_axi_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_13->m00_axi_awid.bind(*p_13_m00_axi_awid);
        p_13_m00_axi_awid->set_sv_netview_offsetfromdp(8067912);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_13_m00_axi_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_13->m00_axi_awaddr.bind(*p_13_m00_axi_awaddr);
        p_13_m00_axi_awaddr->set_sv_netview_offsetfromdp(8067968);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_13_m00_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_13->m00_axi_awlen.bind(*p_13_m00_axi_awlen);
        p_13_m00_axi_awlen->set_sv_netview_offsetfromdp(8068024);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_13_m00_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_13->m00_axi_awsize.bind(*p_13_m00_axi_awsize);
        p_13_m00_axi_awsize->set_sv_netview_offsetfromdp(8068080);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_13_m00_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_13->m00_axi_awburst.bind(*p_13_m00_axi_awburst);
        p_13_m00_axi_awburst->set_sv_netview_offsetfromdp(8068136);
        xsim_sc_channel<0, bool > *p_13_m00_axi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_13->m00_axi_awlock.bind(*p_13_m00_axi_awlock);
        p_13_m00_axi_awlock->set_sv_netview_offsetfromdp(8068192);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_13_m00_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_13->m00_axi_awcache.bind(*p_13_m00_axi_awcache);
        p_13_m00_axi_awcache->set_sv_netview_offsetfromdp(8068248);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_13_m00_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_13->m00_axi_awprot.bind(*p_13_m00_axi_awprot);
        p_13_m00_axi_awprot->set_sv_netview_offsetfromdp(8068304);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_13_m00_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_13->m00_axi_awqos.bind(*p_13_m00_axi_awqos);
        p_13_m00_axi_awqos->set_sv_netview_offsetfromdp(8068360);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_13_m00_axi_awuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_13->m00_axi_awuser.bind(*p_13_m00_axi_awuser);
        p_13_m00_axi_awuser->set_sv_netview_offsetfromdp(8068416);
        xsim_sc_channel<0, bool > *p_13_m00_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_13->m00_axi_awvalid.bind(*p_13_m00_axi_awvalid);
        p_13_m00_axi_awvalid->set_sv_netview_offsetfromdp(8068472);
        xsim_sc_channel<0, bool > *p_13_m00_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_13->m00_axi_awready.bind(*p_13_m00_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_13_m00_axi_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_13_m00_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_13->m00_axi_wdata.bind(*p_13_m00_axi_wdata);
        p_13_m00_axi_wdata->set_sv_netview_offsetfromdp(8068584);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_13_m00_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_13->m00_axi_wstrb.bind(*p_13_m00_axi_wstrb);
        p_13_m00_axi_wstrb->set_sv_netview_offsetfromdp(8068640);
        xsim_sc_channel<0, bool > *p_13_m00_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_13->m00_axi_wlast.bind(*p_13_m00_axi_wlast);
        p_13_m00_axi_wlast->set_sv_netview_offsetfromdp(8068696);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_13_m00_axi_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_13->m00_axi_wuser.bind(*p_13_m00_axi_wuser);
        p_13_m00_axi_wuser->set_sv_netview_offsetfromdp(8068752);
        xsim_sc_channel<0, bool > *p_13_m00_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_13->m00_axi_wvalid.bind(*p_13_m00_axi_wvalid);
        p_13_m00_axi_wvalid->set_sv_netview_offsetfromdp(8068808);
        xsim_sc_channel<0, bool > *p_13_m00_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_13->m00_axi_wready.bind(*p_13_m00_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_13_m00_axi_wready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_13_m00_axi_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_13->m00_axi_bid.bind(*p_13_m00_axi_bid);
        (*_glb_hdl_sc_channel_map).push_back(p_13_m00_axi_bid);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_13_m00_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_13->m00_axi_bresp.bind(*p_13_m00_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_13_m00_axi_bresp);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_13_m00_axi_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_13->m00_axi_buser.bind(*p_13_m00_axi_buser);
        (*_glb_hdl_sc_channel_map).push_back(p_13_m00_axi_buser);
        xsim_sc_channel<0, bool > *p_13_m00_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_13->m00_axi_bvalid.bind(*p_13_m00_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_13_m00_axi_bvalid);
        xsim_sc_channel<0, bool > *p_13_m00_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_13->m00_axi_bready.bind(*p_13_m00_axi_bready);
        p_13_m00_axi_bready->set_sv_netview_offsetfromdp(8069144);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_13_m00_axi_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_13->m00_axi_arid.bind(*p_13_m00_axi_arid);
        p_13_m00_axi_arid->set_sv_netview_offsetfromdp(8069200);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_13_m00_axi_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_13->m00_axi_araddr.bind(*p_13_m00_axi_araddr);
        p_13_m00_axi_araddr->set_sv_netview_offsetfromdp(8069256);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_13_m00_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_13->m00_axi_arlen.bind(*p_13_m00_axi_arlen);
        p_13_m00_axi_arlen->set_sv_netview_offsetfromdp(8069312);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_13_m00_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_13->m00_axi_arsize.bind(*p_13_m00_axi_arsize);
        p_13_m00_axi_arsize->set_sv_netview_offsetfromdp(8069368);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_13_m00_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_13->m00_axi_arburst.bind(*p_13_m00_axi_arburst);
        p_13_m00_axi_arburst->set_sv_netview_offsetfromdp(8069424);
        xsim_sc_channel<0, bool > *p_13_m00_axi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_13->m00_axi_arlock.bind(*p_13_m00_axi_arlock);
        p_13_m00_axi_arlock->set_sv_netview_offsetfromdp(8069480);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_13_m00_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_13->m00_axi_arcache.bind(*p_13_m00_axi_arcache);
        p_13_m00_axi_arcache->set_sv_netview_offsetfromdp(8069536);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_13_m00_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_13->m00_axi_arprot.bind(*p_13_m00_axi_arprot);
        p_13_m00_axi_arprot->set_sv_netview_offsetfromdp(8069592);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_13_m00_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_13->m00_axi_arqos.bind(*p_13_m00_axi_arqos);
        p_13_m00_axi_arqos->set_sv_netview_offsetfromdp(8069648);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_13_m00_axi_aruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_13->m00_axi_aruser.bind(*p_13_m00_axi_aruser);
        p_13_m00_axi_aruser->set_sv_netview_offsetfromdp(8069704);
        xsim_sc_channel<0, bool > *p_13_m00_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_13->m00_axi_arvalid.bind(*p_13_m00_axi_arvalid);
        p_13_m00_axi_arvalid->set_sv_netview_offsetfromdp(8069760);
        xsim_sc_channel<0, bool > *p_13_m00_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_13->m00_axi_arready.bind(*p_13_m00_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_13_m00_axi_arready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_13_m00_axi_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_13->m00_axi_rid.bind(*p_13_m00_axi_rid);
        (*_glb_hdl_sc_channel_map).push_back(p_13_m00_axi_rid);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_13_m00_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_13->m00_axi_rdata.bind(*p_13_m00_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_13_m00_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_13_m00_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_13->m00_axi_rresp.bind(*p_13_m00_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_13_m00_axi_rresp);
        xsim_sc_channel<0, bool > *p_13_m00_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_13->m00_axi_rlast.bind(*p_13_m00_axi_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_13_m00_axi_rlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_13_m00_axi_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_13->m00_axi_ruser.bind(*p_13_m00_axi_ruser);
        (*_glb_hdl_sc_channel_map).push_back(p_13_m00_axi_ruser);
        xsim_sc_channel<0, bool > *p_13_m00_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_13->m00_axi_rvalid.bind(*p_13_m00_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_13_m00_axi_rvalid);
        xsim_sc_channel<0, bool > *p_13_m00_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_13->m00_axi_rready.bind(*p_13_m00_axi_rready);
        p_13_m00_axi_rready->set_sv_netview_offsetfromdp(8070208);
        xsim_sc_channel<0, bool > *p_13_m00_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_13->m00_axi_aclk.bind(*p_13_m00_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_13_m00_axi_aclk);
        xsim_sc_channel<0, bool > *p_13_m00_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_13->m00_axi_aresetn.bind(*p_13_m00_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_13_m00_axi_aresetn);
        sc_inst_14 = new pfm_dynamic_xtlm_simple_intercon_0_0(".emu_wrapper.emu_i.dynamic_region.xtlm_simple_intercon_0");
        sc_inst_14->xsim_set_dbg_index(39);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_14_s00_axi_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_14->s00_axi_awid.bind(*p_14_s00_axi_awid);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s00_axi_awid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_14_s00_axi_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_14->s00_axi_awaddr.bind(*p_14_s00_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s00_axi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_14_s00_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_14->s00_axi_awlen.bind(*p_14_s00_axi_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s00_axi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_14_s00_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_14->s00_axi_awsize.bind(*p_14_s00_axi_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s00_axi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_14_s00_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_14->s00_axi_awburst.bind(*p_14_s00_axi_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s00_axi_awburst);
        xsim_sc_channel<0, bool > *p_14_s00_axi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_14->s00_axi_awlock.bind(*p_14_s00_axi_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s00_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_14_s00_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_14->s00_axi_awcache.bind(*p_14_s00_axi_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s00_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_14_s00_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_14->s00_axi_awprot.bind(*p_14_s00_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s00_axi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_14_s00_axi_awregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_14->s00_axi_awregion.bind(*p_14_s00_axi_awregion);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s00_axi_awregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_14_s00_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_14->s00_axi_awqos.bind(*p_14_s00_axi_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s00_axi_awqos);
        xsim_sc_channel<0, bool > *p_14_s00_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_14->s00_axi_awvalid.bind(*p_14_s00_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s00_axi_awvalid);
        xsim_sc_channel<0, bool > *p_14_s00_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_14->s00_axi_awready.bind(*p_14_s00_axi_awready);
        p_14_s00_axi_awready->set_sv_netview_offsetfromdp(8794896);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_14_s00_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_14->s00_axi_wdata.bind(*p_14_s00_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s00_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_14_s00_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_14->s00_axi_wstrb.bind(*p_14_s00_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s00_axi_wstrb);
        xsim_sc_channel<0, bool > *p_14_s00_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_14->s00_axi_wlast.bind(*p_14_s00_axi_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s00_axi_wlast);
        xsim_sc_channel<0, bool > *p_14_s00_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_14->s00_axi_wvalid.bind(*p_14_s00_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s00_axi_wvalid);
        xsim_sc_channel<0, bool > *p_14_s00_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_14->s00_axi_wready.bind(*p_14_s00_axi_wready);
        p_14_s00_axi_wready->set_sv_netview_offsetfromdp(8795176);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_14_s00_axi_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_14->s00_axi_bid.bind(*p_14_s00_axi_bid);
        p_14_s00_axi_bid->set_sv_netview_offsetfromdp(8795232);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_14_s00_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_14->s00_axi_bresp.bind(*p_14_s00_axi_bresp);
        p_14_s00_axi_bresp->set_sv_netview_offsetfromdp(8795288);
        xsim_sc_channel<0, bool > *p_14_s00_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_14->s00_axi_bvalid.bind(*p_14_s00_axi_bvalid);
        p_14_s00_axi_bvalid->set_sv_netview_offsetfromdp(8795344);
        xsim_sc_channel<0, bool > *p_14_s00_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_14->s00_axi_bready.bind(*p_14_s00_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s00_axi_bready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_14_s00_axi_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_14->s00_axi_arid.bind(*p_14_s00_axi_arid);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s00_axi_arid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_14_s00_axi_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_14->s00_axi_araddr.bind(*p_14_s00_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s00_axi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_14_s00_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_14->s00_axi_arlen.bind(*p_14_s00_axi_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s00_axi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_14_s00_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_14->s00_axi_arsize.bind(*p_14_s00_axi_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s00_axi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_14_s00_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_14->s00_axi_arburst.bind(*p_14_s00_axi_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s00_axi_arburst);
        xsim_sc_channel<0, bool > *p_14_s00_axi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_14->s00_axi_arlock.bind(*p_14_s00_axi_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s00_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_14_s00_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_14->s00_axi_arcache.bind(*p_14_s00_axi_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s00_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_14_s00_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_14->s00_axi_arprot.bind(*p_14_s00_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s00_axi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_14_s00_axi_arregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_14->s00_axi_arregion.bind(*p_14_s00_axi_arregion);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s00_axi_arregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_14_s00_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_14->s00_axi_arqos.bind(*p_14_s00_axi_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s00_axi_arqos);
        xsim_sc_channel<0, bool > *p_14_s00_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_14->s00_axi_arvalid.bind(*p_14_s00_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s00_axi_arvalid);
        xsim_sc_channel<0, bool > *p_14_s00_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_14->s00_axi_arready.bind(*p_14_s00_axi_arready);
        p_14_s00_axi_arready->set_sv_netview_offsetfromdp(8796072);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_14_s00_axi_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_14->s00_axi_rid.bind(*p_14_s00_axi_rid);
        p_14_s00_axi_rid->set_sv_netview_offsetfromdp(8796128);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_14_s00_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_14->s00_axi_rdata.bind(*p_14_s00_axi_rdata);
        p_14_s00_axi_rdata->set_sv_netview_offsetfromdp(8796184);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_14_s00_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_14->s00_axi_rresp.bind(*p_14_s00_axi_rresp);
        p_14_s00_axi_rresp->set_sv_netview_offsetfromdp(8796240);
        xsim_sc_channel<0, bool > *p_14_s00_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_14->s00_axi_rlast.bind(*p_14_s00_axi_rlast);
        p_14_s00_axi_rlast->set_sv_netview_offsetfromdp(8796296);
        xsim_sc_channel<0, bool > *p_14_s00_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_14->s00_axi_rvalid.bind(*p_14_s00_axi_rvalid);
        p_14_s00_axi_rvalid->set_sv_netview_offsetfromdp(8796352);
        xsim_sc_channel<0, bool > *p_14_s00_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_14->s00_axi_rready.bind(*p_14_s00_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s00_axi_rready);
        xsim_sc_channel<0, bool > *p_14_s00_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_14->s00_axi_aclk.bind(*p_14_s00_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s00_axi_aclk);
        xsim_sc_channel<0, bool > *p_14_s00_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_14->s00_axi_aresetn.bind(*p_14_s00_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s00_axi_aresetn);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_14_m00_axi_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_14->m00_axi_awid.bind(*p_14_m00_axi_awid);
        p_14_m00_axi_awid->set_sv_netview_offsetfromdp(8796576);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_14_m00_axi_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_14->m00_axi_awaddr.bind(*p_14_m00_axi_awaddr);
        p_14_m00_axi_awaddr->set_sv_netview_offsetfromdp(8796632);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_14_m00_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_14->m00_axi_awlen.bind(*p_14_m00_axi_awlen);
        p_14_m00_axi_awlen->set_sv_netview_offsetfromdp(8796688);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_14_m00_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_14->m00_axi_awsize.bind(*p_14_m00_axi_awsize);
        p_14_m00_axi_awsize->set_sv_netview_offsetfromdp(8796744);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_14_m00_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_14->m00_axi_awburst.bind(*p_14_m00_axi_awburst);
        p_14_m00_axi_awburst->set_sv_netview_offsetfromdp(8796800);
        xsim_sc_channel<0, bool > *p_14_m00_axi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_14->m00_axi_awlock.bind(*p_14_m00_axi_awlock);
        p_14_m00_axi_awlock->set_sv_netview_offsetfromdp(8796856);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_14_m00_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_14->m00_axi_awcache.bind(*p_14_m00_axi_awcache);
        p_14_m00_axi_awcache->set_sv_netview_offsetfromdp(8796912);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_14_m00_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_14->m00_axi_awprot.bind(*p_14_m00_axi_awprot);
        p_14_m00_axi_awprot->set_sv_netview_offsetfromdp(8796968);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_14_m00_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_14->m00_axi_awqos.bind(*p_14_m00_axi_awqos);
        p_14_m00_axi_awqos->set_sv_netview_offsetfromdp(8797024);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_14_m00_axi_awuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_14->m00_axi_awuser.bind(*p_14_m00_axi_awuser);
        p_14_m00_axi_awuser->set_sv_netview_offsetfromdp(8797080);
        xsim_sc_channel<0, bool > *p_14_m00_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_14->m00_axi_awvalid.bind(*p_14_m00_axi_awvalid);
        p_14_m00_axi_awvalid->set_sv_netview_offsetfromdp(8797136);
        xsim_sc_channel<0, bool > *p_14_m00_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_14->m00_axi_awready.bind(*p_14_m00_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_14_m00_axi_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_14_m00_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_14->m00_axi_wdata.bind(*p_14_m00_axi_wdata);
        p_14_m00_axi_wdata->set_sv_netview_offsetfromdp(8797248);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_14_m00_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_14->m00_axi_wstrb.bind(*p_14_m00_axi_wstrb);
        p_14_m00_axi_wstrb->set_sv_netview_offsetfromdp(8797304);
        xsim_sc_channel<0, bool > *p_14_m00_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_14->m00_axi_wlast.bind(*p_14_m00_axi_wlast);
        p_14_m00_axi_wlast->set_sv_netview_offsetfromdp(8797360);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_14_m00_axi_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_14->m00_axi_wuser.bind(*p_14_m00_axi_wuser);
        p_14_m00_axi_wuser->set_sv_netview_offsetfromdp(8797416);
        xsim_sc_channel<0, bool > *p_14_m00_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_14->m00_axi_wvalid.bind(*p_14_m00_axi_wvalid);
        p_14_m00_axi_wvalid->set_sv_netview_offsetfromdp(8797472);
        xsim_sc_channel<0, bool > *p_14_m00_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_14->m00_axi_wready.bind(*p_14_m00_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_14_m00_axi_wready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_14_m00_axi_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_14->m00_axi_bid.bind(*p_14_m00_axi_bid);
        (*_glb_hdl_sc_channel_map).push_back(p_14_m00_axi_bid);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_14_m00_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_14->m00_axi_bresp.bind(*p_14_m00_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_14_m00_axi_bresp);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_14_m00_axi_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_14->m00_axi_buser.bind(*p_14_m00_axi_buser);
        (*_glb_hdl_sc_channel_map).push_back(p_14_m00_axi_buser);
        xsim_sc_channel<0, bool > *p_14_m00_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_14->m00_axi_bvalid.bind(*p_14_m00_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_14_m00_axi_bvalid);
        xsim_sc_channel<0, bool > *p_14_m00_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_14->m00_axi_bready.bind(*p_14_m00_axi_bready);
        p_14_m00_axi_bready->set_sv_netview_offsetfromdp(8797808);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_14_m00_axi_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_14->m00_axi_arid.bind(*p_14_m00_axi_arid);
        p_14_m00_axi_arid->set_sv_netview_offsetfromdp(8797864);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_14_m00_axi_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_14->m00_axi_araddr.bind(*p_14_m00_axi_araddr);
        p_14_m00_axi_araddr->set_sv_netview_offsetfromdp(8797920);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_14_m00_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_14->m00_axi_arlen.bind(*p_14_m00_axi_arlen);
        p_14_m00_axi_arlen->set_sv_netview_offsetfromdp(8797976);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_14_m00_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_14->m00_axi_arsize.bind(*p_14_m00_axi_arsize);
        p_14_m00_axi_arsize->set_sv_netview_offsetfromdp(8798032);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_14_m00_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_14->m00_axi_arburst.bind(*p_14_m00_axi_arburst);
        p_14_m00_axi_arburst->set_sv_netview_offsetfromdp(8798088);
        xsim_sc_channel<0, bool > *p_14_m00_axi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_14->m00_axi_arlock.bind(*p_14_m00_axi_arlock);
        p_14_m00_axi_arlock->set_sv_netview_offsetfromdp(8798144);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_14_m00_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_14->m00_axi_arcache.bind(*p_14_m00_axi_arcache);
        p_14_m00_axi_arcache->set_sv_netview_offsetfromdp(8798200);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_14_m00_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_14->m00_axi_arprot.bind(*p_14_m00_axi_arprot);
        p_14_m00_axi_arprot->set_sv_netview_offsetfromdp(8798256);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_14_m00_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_14->m00_axi_arqos.bind(*p_14_m00_axi_arqos);
        p_14_m00_axi_arqos->set_sv_netview_offsetfromdp(8798312);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_14_m00_axi_aruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_14->m00_axi_aruser.bind(*p_14_m00_axi_aruser);
        p_14_m00_axi_aruser->set_sv_netview_offsetfromdp(8798368);
        xsim_sc_channel<0, bool > *p_14_m00_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_14->m00_axi_arvalid.bind(*p_14_m00_axi_arvalid);
        p_14_m00_axi_arvalid->set_sv_netview_offsetfromdp(8798424);
        xsim_sc_channel<0, bool > *p_14_m00_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_14->m00_axi_arready.bind(*p_14_m00_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_14_m00_axi_arready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_14_m00_axi_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_14->m00_axi_rid.bind(*p_14_m00_axi_rid);
        (*_glb_hdl_sc_channel_map).push_back(p_14_m00_axi_rid);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_14_m00_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_14->m00_axi_rdata.bind(*p_14_m00_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_14_m00_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_14_m00_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_14->m00_axi_rresp.bind(*p_14_m00_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_14_m00_axi_rresp);
        xsim_sc_channel<0, bool > *p_14_m00_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_14->m00_axi_rlast.bind(*p_14_m00_axi_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_14_m00_axi_rlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_14_m00_axi_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_14->m00_axi_ruser.bind(*p_14_m00_axi_ruser);
        (*_glb_hdl_sc_channel_map).push_back(p_14_m00_axi_ruser);
        xsim_sc_channel<0, bool > *p_14_m00_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_14->m00_axi_rvalid.bind(*p_14_m00_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_14_m00_axi_rvalid);
        xsim_sc_channel<0, bool > *p_14_m00_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_14->m00_axi_rready.bind(*p_14_m00_axi_rready);
        p_14_m00_axi_rready->set_sv_netview_offsetfromdp(8798872);
        xsim_sc_channel<0, bool > *p_14_m00_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_14->m00_axi_aclk.bind(*p_14_m00_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_14_m00_axi_aclk);
        xsim_sc_channel<0, bool > *p_14_m00_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_14->m00_axi_aresetn.bind(*p_14_m00_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_14_m00_axi_aresetn);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_14_m02_axi_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_14->m02_axi_awid.bind(*p_14_m02_axi_awid);
        p_14_m02_axi_awid->set_sv_netview_offsetfromdp(8799040);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_14_m02_axi_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_14->m02_axi_awaddr.bind(*p_14_m02_axi_awaddr);
        p_14_m02_axi_awaddr->set_sv_netview_offsetfromdp(8799096);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_14_m02_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_14->m02_axi_awlen.bind(*p_14_m02_axi_awlen);
        p_14_m02_axi_awlen->set_sv_netview_offsetfromdp(8799152);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_14_m02_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_14->m02_axi_awsize.bind(*p_14_m02_axi_awsize);
        p_14_m02_axi_awsize->set_sv_netview_offsetfromdp(8799208);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_14_m02_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_14->m02_axi_awburst.bind(*p_14_m02_axi_awburst);
        p_14_m02_axi_awburst->set_sv_netview_offsetfromdp(8799264);
        xsim_sc_channel<0, bool > *p_14_m02_axi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_14->m02_axi_awlock.bind(*p_14_m02_axi_awlock);
        p_14_m02_axi_awlock->set_sv_netview_offsetfromdp(8799320);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_14_m02_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_14->m02_axi_awcache.bind(*p_14_m02_axi_awcache);
        p_14_m02_axi_awcache->set_sv_netview_offsetfromdp(8799376);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_14_m02_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_14->m02_axi_awprot.bind(*p_14_m02_axi_awprot);
        p_14_m02_axi_awprot->set_sv_netview_offsetfromdp(8799432);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_14_m02_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_14->m02_axi_awqos.bind(*p_14_m02_axi_awqos);
        p_14_m02_axi_awqos->set_sv_netview_offsetfromdp(8799488);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_14_m02_axi_awuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_14->m02_axi_awuser.bind(*p_14_m02_axi_awuser);
        p_14_m02_axi_awuser->set_sv_netview_offsetfromdp(8799544);
        xsim_sc_channel<0, bool > *p_14_m02_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_14->m02_axi_awvalid.bind(*p_14_m02_axi_awvalid);
        p_14_m02_axi_awvalid->set_sv_netview_offsetfromdp(8799600);
        xsim_sc_channel<0, bool > *p_14_m02_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_14->m02_axi_awready.bind(*p_14_m02_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_14_m02_axi_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_14_m02_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_14->m02_axi_wdata.bind(*p_14_m02_axi_wdata);
        p_14_m02_axi_wdata->set_sv_netview_offsetfromdp(8799712);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_14_m02_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_14->m02_axi_wstrb.bind(*p_14_m02_axi_wstrb);
        p_14_m02_axi_wstrb->set_sv_netview_offsetfromdp(8799768);
        xsim_sc_channel<0, bool > *p_14_m02_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_14->m02_axi_wlast.bind(*p_14_m02_axi_wlast);
        p_14_m02_axi_wlast->set_sv_netview_offsetfromdp(8799824);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_14_m02_axi_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_14->m02_axi_wuser.bind(*p_14_m02_axi_wuser);
        p_14_m02_axi_wuser->set_sv_netview_offsetfromdp(8799880);
        xsim_sc_channel<0, bool > *p_14_m02_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_14->m02_axi_wvalid.bind(*p_14_m02_axi_wvalid);
        p_14_m02_axi_wvalid->set_sv_netview_offsetfromdp(8799936);
        xsim_sc_channel<0, bool > *p_14_m02_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_14->m02_axi_wready.bind(*p_14_m02_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_14_m02_axi_wready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_14_m02_axi_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_14->m02_axi_bid.bind(*p_14_m02_axi_bid);
        (*_glb_hdl_sc_channel_map).push_back(p_14_m02_axi_bid);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_14_m02_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_14->m02_axi_bresp.bind(*p_14_m02_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_14_m02_axi_bresp);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_14_m02_axi_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_14->m02_axi_buser.bind(*p_14_m02_axi_buser);
        (*_glb_hdl_sc_channel_map).push_back(p_14_m02_axi_buser);
        xsim_sc_channel<0, bool > *p_14_m02_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_14->m02_axi_bvalid.bind(*p_14_m02_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_14_m02_axi_bvalid);
        xsim_sc_channel<0, bool > *p_14_m02_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_14->m02_axi_bready.bind(*p_14_m02_axi_bready);
        p_14_m02_axi_bready->set_sv_netview_offsetfromdp(8800272);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_14_m02_axi_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_14->m02_axi_arid.bind(*p_14_m02_axi_arid);
        p_14_m02_axi_arid->set_sv_netview_offsetfromdp(8800328);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_14_m02_axi_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_14->m02_axi_araddr.bind(*p_14_m02_axi_araddr);
        p_14_m02_axi_araddr->set_sv_netview_offsetfromdp(8800384);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_14_m02_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_14->m02_axi_arlen.bind(*p_14_m02_axi_arlen);
        p_14_m02_axi_arlen->set_sv_netview_offsetfromdp(8800440);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_14_m02_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_14->m02_axi_arsize.bind(*p_14_m02_axi_arsize);
        p_14_m02_axi_arsize->set_sv_netview_offsetfromdp(8800496);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_14_m02_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_14->m02_axi_arburst.bind(*p_14_m02_axi_arburst);
        p_14_m02_axi_arburst->set_sv_netview_offsetfromdp(8800552);
        xsim_sc_channel<0, bool > *p_14_m02_axi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_14->m02_axi_arlock.bind(*p_14_m02_axi_arlock);
        p_14_m02_axi_arlock->set_sv_netview_offsetfromdp(8800608);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_14_m02_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_14->m02_axi_arcache.bind(*p_14_m02_axi_arcache);
        p_14_m02_axi_arcache->set_sv_netview_offsetfromdp(8800664);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_14_m02_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_14->m02_axi_arprot.bind(*p_14_m02_axi_arprot);
        p_14_m02_axi_arprot->set_sv_netview_offsetfromdp(8800720);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_14_m02_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_14->m02_axi_arqos.bind(*p_14_m02_axi_arqos);
        p_14_m02_axi_arqos->set_sv_netview_offsetfromdp(8800776);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_14_m02_axi_aruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_14->m02_axi_aruser.bind(*p_14_m02_axi_aruser);
        p_14_m02_axi_aruser->set_sv_netview_offsetfromdp(8800832);
        xsim_sc_channel<0, bool > *p_14_m02_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_14->m02_axi_arvalid.bind(*p_14_m02_axi_arvalid);
        p_14_m02_axi_arvalid->set_sv_netview_offsetfromdp(8800888);
        xsim_sc_channel<0, bool > *p_14_m02_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_14->m02_axi_arready.bind(*p_14_m02_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_14_m02_axi_arready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_14_m02_axi_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_14->m02_axi_rid.bind(*p_14_m02_axi_rid);
        (*_glb_hdl_sc_channel_map).push_back(p_14_m02_axi_rid);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_14_m02_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_14->m02_axi_rdata.bind(*p_14_m02_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_14_m02_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_14_m02_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_14->m02_axi_rresp.bind(*p_14_m02_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_14_m02_axi_rresp);
        xsim_sc_channel<0, bool > *p_14_m02_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_14->m02_axi_rlast.bind(*p_14_m02_axi_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_14_m02_axi_rlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_14_m02_axi_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_14->m02_axi_ruser.bind(*p_14_m02_axi_ruser);
        (*_glb_hdl_sc_channel_map).push_back(p_14_m02_axi_ruser);
        xsim_sc_channel<0, bool > *p_14_m02_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_14->m02_axi_rvalid.bind(*p_14_m02_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_14_m02_axi_rvalid);
        xsim_sc_channel<0, bool > *p_14_m02_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_14->m02_axi_rready.bind(*p_14_m02_axi_rready);
        p_14_m02_axi_rready->set_sv_netview_offsetfromdp(8801336);
        xsim_sc_channel<0, bool > *p_14_m02_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_14->m02_axi_aclk.bind(*p_14_m02_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_14_m02_axi_aclk);
        xsim_sc_channel<0, bool > *p_14_m02_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_14->m02_axi_aresetn.bind(*p_14_m02_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_14_m02_axi_aresetn);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_14_m03_axi_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_14->m03_axi_awid.bind(*p_14_m03_axi_awid);
        p_14_m03_axi_awid->set_sv_netview_offsetfromdp(8801504);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_14_m03_axi_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_14->m03_axi_awaddr.bind(*p_14_m03_axi_awaddr);
        p_14_m03_axi_awaddr->set_sv_netview_offsetfromdp(8801560);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_14_m03_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_14->m03_axi_awlen.bind(*p_14_m03_axi_awlen);
        p_14_m03_axi_awlen->set_sv_netview_offsetfromdp(8801616);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_14_m03_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_14->m03_axi_awsize.bind(*p_14_m03_axi_awsize);
        p_14_m03_axi_awsize->set_sv_netview_offsetfromdp(8801672);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_14_m03_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_14->m03_axi_awburst.bind(*p_14_m03_axi_awburst);
        p_14_m03_axi_awburst->set_sv_netview_offsetfromdp(8801728);
        xsim_sc_channel<0, bool > *p_14_m03_axi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_14->m03_axi_awlock.bind(*p_14_m03_axi_awlock);
        p_14_m03_axi_awlock->set_sv_netview_offsetfromdp(8801784);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_14_m03_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_14->m03_axi_awcache.bind(*p_14_m03_axi_awcache);
        p_14_m03_axi_awcache->set_sv_netview_offsetfromdp(8801840);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_14_m03_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_14->m03_axi_awprot.bind(*p_14_m03_axi_awprot);
        p_14_m03_axi_awprot->set_sv_netview_offsetfromdp(8801896);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_14_m03_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_14->m03_axi_awqos.bind(*p_14_m03_axi_awqos);
        p_14_m03_axi_awqos->set_sv_netview_offsetfromdp(8801952);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_14_m03_axi_awuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_14->m03_axi_awuser.bind(*p_14_m03_axi_awuser);
        p_14_m03_axi_awuser->set_sv_netview_offsetfromdp(8802008);
        xsim_sc_channel<0, bool > *p_14_m03_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_14->m03_axi_awvalid.bind(*p_14_m03_axi_awvalid);
        p_14_m03_axi_awvalid->set_sv_netview_offsetfromdp(8802064);
        xsim_sc_channel<0, bool > *p_14_m03_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_14->m03_axi_awready.bind(*p_14_m03_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_14_m03_axi_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_14_m03_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_14->m03_axi_wdata.bind(*p_14_m03_axi_wdata);
        p_14_m03_axi_wdata->set_sv_netview_offsetfromdp(8802176);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_14_m03_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_14->m03_axi_wstrb.bind(*p_14_m03_axi_wstrb);
        p_14_m03_axi_wstrb->set_sv_netview_offsetfromdp(8802232);
        xsim_sc_channel<0, bool > *p_14_m03_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_14->m03_axi_wlast.bind(*p_14_m03_axi_wlast);
        p_14_m03_axi_wlast->set_sv_netview_offsetfromdp(8802288);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_14_m03_axi_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_14->m03_axi_wuser.bind(*p_14_m03_axi_wuser);
        p_14_m03_axi_wuser->set_sv_netview_offsetfromdp(8802344);
        xsim_sc_channel<0, bool > *p_14_m03_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_14->m03_axi_wvalid.bind(*p_14_m03_axi_wvalid);
        p_14_m03_axi_wvalid->set_sv_netview_offsetfromdp(8802400);
        xsim_sc_channel<0, bool > *p_14_m03_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_14->m03_axi_wready.bind(*p_14_m03_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_14_m03_axi_wready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_14_m03_axi_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_14->m03_axi_bid.bind(*p_14_m03_axi_bid);
        (*_glb_hdl_sc_channel_map).push_back(p_14_m03_axi_bid);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_14_m03_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_14->m03_axi_bresp.bind(*p_14_m03_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_14_m03_axi_bresp);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_14_m03_axi_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_14->m03_axi_buser.bind(*p_14_m03_axi_buser);
        (*_glb_hdl_sc_channel_map).push_back(p_14_m03_axi_buser);
        xsim_sc_channel<0, bool > *p_14_m03_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_14->m03_axi_bvalid.bind(*p_14_m03_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_14_m03_axi_bvalid);
        xsim_sc_channel<0, bool > *p_14_m03_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_14->m03_axi_bready.bind(*p_14_m03_axi_bready);
        p_14_m03_axi_bready->set_sv_netview_offsetfromdp(8802736);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_14_m03_axi_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_14->m03_axi_arid.bind(*p_14_m03_axi_arid);
        p_14_m03_axi_arid->set_sv_netview_offsetfromdp(8802792);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_14_m03_axi_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_14->m03_axi_araddr.bind(*p_14_m03_axi_araddr);
        p_14_m03_axi_araddr->set_sv_netview_offsetfromdp(8802848);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_14_m03_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_14->m03_axi_arlen.bind(*p_14_m03_axi_arlen);
        p_14_m03_axi_arlen->set_sv_netview_offsetfromdp(8802904);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_14_m03_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_14->m03_axi_arsize.bind(*p_14_m03_axi_arsize);
        p_14_m03_axi_arsize->set_sv_netview_offsetfromdp(8802960);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_14_m03_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_14->m03_axi_arburst.bind(*p_14_m03_axi_arburst);
        p_14_m03_axi_arburst->set_sv_netview_offsetfromdp(8803016);
        xsim_sc_channel<0, bool > *p_14_m03_axi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_14->m03_axi_arlock.bind(*p_14_m03_axi_arlock);
        p_14_m03_axi_arlock->set_sv_netview_offsetfromdp(8803072);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_14_m03_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_14->m03_axi_arcache.bind(*p_14_m03_axi_arcache);
        p_14_m03_axi_arcache->set_sv_netview_offsetfromdp(8803128);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_14_m03_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_14->m03_axi_arprot.bind(*p_14_m03_axi_arprot);
        p_14_m03_axi_arprot->set_sv_netview_offsetfromdp(8803184);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_14_m03_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_14->m03_axi_arqos.bind(*p_14_m03_axi_arqos);
        p_14_m03_axi_arqos->set_sv_netview_offsetfromdp(8803240);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_14_m03_axi_aruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_14->m03_axi_aruser.bind(*p_14_m03_axi_aruser);
        p_14_m03_axi_aruser->set_sv_netview_offsetfromdp(8803296);
        xsim_sc_channel<0, bool > *p_14_m03_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_14->m03_axi_arvalid.bind(*p_14_m03_axi_arvalid);
        p_14_m03_axi_arvalid->set_sv_netview_offsetfromdp(8803352);
        xsim_sc_channel<0, bool > *p_14_m03_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_14->m03_axi_arready.bind(*p_14_m03_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_14_m03_axi_arready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_14_m03_axi_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_14->m03_axi_rid.bind(*p_14_m03_axi_rid);
        (*_glb_hdl_sc_channel_map).push_back(p_14_m03_axi_rid);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_14_m03_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_14->m03_axi_rdata.bind(*p_14_m03_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_14_m03_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_14_m03_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_14->m03_axi_rresp.bind(*p_14_m03_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_14_m03_axi_rresp);
        xsim_sc_channel<0, bool > *p_14_m03_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_14->m03_axi_rlast.bind(*p_14_m03_axi_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_14_m03_axi_rlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_14_m03_axi_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_14->m03_axi_ruser.bind(*p_14_m03_axi_ruser);
        (*_glb_hdl_sc_channel_map).push_back(p_14_m03_axi_ruser);
        xsim_sc_channel<0, bool > *p_14_m03_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_14->m03_axi_rvalid.bind(*p_14_m03_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_14_m03_axi_rvalid);
        xsim_sc_channel<0, bool > *p_14_m03_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_14->m03_axi_rready.bind(*p_14_m03_axi_rready);
        p_14_m03_axi_rready->set_sv_netview_offsetfromdp(8803800);
        xsim_sc_channel<0, bool > *p_14_m03_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_14->m03_axi_aclk.bind(*p_14_m03_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_14_m03_axi_aclk);
        xsim_sc_channel<0, bool > *p_14_m03_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_14->m03_axi_aresetn.bind(*p_14_m03_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_14_m03_axi_aresetn);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_14_m04_axi_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_14->m04_axi_awid.bind(*p_14_m04_axi_awid);
        p_14_m04_axi_awid->set_sv_netview_offsetfromdp(8803968);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_14_m04_axi_awaddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_14->m04_axi_awaddr.bind(*p_14_m04_axi_awaddr);
        p_14_m04_axi_awaddr->set_sv_netview_offsetfromdp(8804024);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_14_m04_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_14->m04_axi_awlen.bind(*p_14_m04_axi_awlen);
        p_14_m04_axi_awlen->set_sv_netview_offsetfromdp(8804080);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_14_m04_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_14->m04_axi_awsize.bind(*p_14_m04_axi_awsize);
        p_14_m04_axi_awsize->set_sv_netview_offsetfromdp(8804136);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_14_m04_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_14->m04_axi_awburst.bind(*p_14_m04_axi_awburst);
        p_14_m04_axi_awburst->set_sv_netview_offsetfromdp(8804192);
        xsim_sc_channel<0, bool > *p_14_m04_axi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_14->m04_axi_awlock.bind(*p_14_m04_axi_awlock);
        p_14_m04_axi_awlock->set_sv_netview_offsetfromdp(8804248);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_14_m04_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_14->m04_axi_awcache.bind(*p_14_m04_axi_awcache);
        p_14_m04_axi_awcache->set_sv_netview_offsetfromdp(8804304);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_14_m04_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_14->m04_axi_awprot.bind(*p_14_m04_axi_awprot);
        p_14_m04_axi_awprot->set_sv_netview_offsetfromdp(8804360);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_14_m04_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_14->m04_axi_awqos.bind(*p_14_m04_axi_awqos);
        p_14_m04_axi_awqos->set_sv_netview_offsetfromdp(8804416);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_14_m04_axi_awuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_14->m04_axi_awuser.bind(*p_14_m04_axi_awuser);
        p_14_m04_axi_awuser->set_sv_netview_offsetfromdp(8804472);
        xsim_sc_channel<0, bool > *p_14_m04_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_14->m04_axi_awvalid.bind(*p_14_m04_axi_awvalid);
        p_14_m04_axi_awvalid->set_sv_netview_offsetfromdp(8804528);
        xsim_sc_channel<0, bool > *p_14_m04_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_14->m04_axi_awready.bind(*p_14_m04_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_14_m04_axi_awready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_14_m04_axi_wdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_14->m04_axi_wdata.bind(*p_14_m04_axi_wdata);
        p_14_m04_axi_wdata->set_sv_netview_offsetfromdp(8804640);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_14_m04_axi_wstrb = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_14->m04_axi_wstrb.bind(*p_14_m04_axi_wstrb);
        p_14_m04_axi_wstrb->set_sv_netview_offsetfromdp(8804696);
        xsim_sc_channel<0, bool > *p_14_m04_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_14->m04_axi_wlast.bind(*p_14_m04_axi_wlast);
        p_14_m04_axi_wlast->set_sv_netview_offsetfromdp(8804752);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_14_m04_axi_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_14->m04_axi_wuser.bind(*p_14_m04_axi_wuser);
        p_14_m04_axi_wuser->set_sv_netview_offsetfromdp(8804808);
        xsim_sc_channel<0, bool > *p_14_m04_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_14->m04_axi_wvalid.bind(*p_14_m04_axi_wvalid);
        p_14_m04_axi_wvalid->set_sv_netview_offsetfromdp(8804864);
        xsim_sc_channel<0, bool > *p_14_m04_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_14->m04_axi_wready.bind(*p_14_m04_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_14_m04_axi_wready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_14_m04_axi_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_14->m04_axi_bid.bind(*p_14_m04_axi_bid);
        (*_glb_hdl_sc_channel_map).push_back(p_14_m04_axi_bid);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_14_m04_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_14->m04_axi_bresp.bind(*p_14_m04_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_14_m04_axi_bresp);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_14_m04_axi_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_14->m04_axi_buser.bind(*p_14_m04_axi_buser);
        (*_glb_hdl_sc_channel_map).push_back(p_14_m04_axi_buser);
        xsim_sc_channel<0, bool > *p_14_m04_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_14->m04_axi_bvalid.bind(*p_14_m04_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_14_m04_axi_bvalid);
        xsim_sc_channel<0, bool > *p_14_m04_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_14->m04_axi_bready.bind(*p_14_m04_axi_bready);
        p_14_m04_axi_bready->set_sv_netview_offsetfromdp(8805200);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_14_m04_axi_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_14->m04_axi_arid.bind(*p_14_m04_axi_arid);
        p_14_m04_axi_arid->set_sv_netview_offsetfromdp(8805256);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_14_m04_axi_araddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_14->m04_axi_araddr.bind(*p_14_m04_axi_araddr);
        p_14_m04_axi_araddr->set_sv_netview_offsetfromdp(8805312);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_14_m04_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_14->m04_axi_arlen.bind(*p_14_m04_axi_arlen);
        p_14_m04_axi_arlen->set_sv_netview_offsetfromdp(8805368);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_14_m04_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_14->m04_axi_arsize.bind(*p_14_m04_axi_arsize);
        p_14_m04_axi_arsize->set_sv_netview_offsetfromdp(8805424);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_14_m04_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_14->m04_axi_arburst.bind(*p_14_m04_axi_arburst);
        p_14_m04_axi_arburst->set_sv_netview_offsetfromdp(8805480);
        xsim_sc_channel<0, bool > *p_14_m04_axi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_14->m04_axi_arlock.bind(*p_14_m04_axi_arlock);
        p_14_m04_axi_arlock->set_sv_netview_offsetfromdp(8805536);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_14_m04_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_14->m04_axi_arcache.bind(*p_14_m04_axi_arcache);
        p_14_m04_axi_arcache->set_sv_netview_offsetfromdp(8805592);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_14_m04_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_14->m04_axi_arprot.bind(*p_14_m04_axi_arprot);
        p_14_m04_axi_arprot->set_sv_netview_offsetfromdp(8805648);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_14_m04_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_14->m04_axi_arqos.bind(*p_14_m04_axi_arqos);
        p_14_m04_axi_arqos->set_sv_netview_offsetfromdp(8805704);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_14_m04_axi_aruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_14->m04_axi_aruser.bind(*p_14_m04_axi_aruser);
        p_14_m04_axi_aruser->set_sv_netview_offsetfromdp(8805760);
        xsim_sc_channel<0, bool > *p_14_m04_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_14->m04_axi_arvalid.bind(*p_14_m04_axi_arvalid);
        p_14_m04_axi_arvalid->set_sv_netview_offsetfromdp(8805816);
        xsim_sc_channel<0, bool > *p_14_m04_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_14->m04_axi_arready.bind(*p_14_m04_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_14_m04_axi_arready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_14_m04_axi_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_14->m04_axi_rid.bind(*p_14_m04_axi_rid);
        (*_glb_hdl_sc_channel_map).push_back(p_14_m04_axi_rid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_14_m04_axi_rdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_14->m04_axi_rdata.bind(*p_14_m04_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_14_m04_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_14_m04_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_14->m04_axi_rresp.bind(*p_14_m04_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_14_m04_axi_rresp);
        xsim_sc_channel<0, bool > *p_14_m04_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_14->m04_axi_rlast.bind(*p_14_m04_axi_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_14_m04_axi_rlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_14_m04_axi_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_14->m04_axi_ruser.bind(*p_14_m04_axi_ruser);
        (*_glb_hdl_sc_channel_map).push_back(p_14_m04_axi_ruser);
        xsim_sc_channel<0, bool > *p_14_m04_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_14->m04_axi_rvalid.bind(*p_14_m04_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_14_m04_axi_rvalid);
        xsim_sc_channel<0, bool > *p_14_m04_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_14->m04_axi_rready.bind(*p_14_m04_axi_rready);
        p_14_m04_axi_rready->set_sv_netview_offsetfromdp(8806264);
        xsim_sc_channel<0, bool > *p_14_m04_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_14->m04_axi_aclk.bind(*p_14_m04_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_14_m04_axi_aclk);
        xsim_sc_channel<0, bool > *p_14_m04_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_14->m04_axi_aresetn.bind(*p_14_m04_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_14_m04_axi_aresetn);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_14_m01_axi_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_14->m01_axi_awid.bind(*p_14_m01_axi_awid);
        p_14_m01_axi_awid->set_sv_netview_offsetfromdp(8806432);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_14_m01_axi_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_14->m01_axi_awaddr.bind(*p_14_m01_axi_awaddr);
        p_14_m01_axi_awaddr->set_sv_netview_offsetfromdp(8806488);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_14_m01_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_14->m01_axi_awlen.bind(*p_14_m01_axi_awlen);
        p_14_m01_axi_awlen->set_sv_netview_offsetfromdp(8806544);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_14_m01_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_14->m01_axi_awsize.bind(*p_14_m01_axi_awsize);
        p_14_m01_axi_awsize->set_sv_netview_offsetfromdp(8806600);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_14_m01_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_14->m01_axi_awburst.bind(*p_14_m01_axi_awburst);
        p_14_m01_axi_awburst->set_sv_netview_offsetfromdp(8806656);
        xsim_sc_channel<0, bool > *p_14_m01_axi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_14->m01_axi_awlock.bind(*p_14_m01_axi_awlock);
        p_14_m01_axi_awlock->set_sv_netview_offsetfromdp(8806712);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_14_m01_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_14->m01_axi_awcache.bind(*p_14_m01_axi_awcache);
        p_14_m01_axi_awcache->set_sv_netview_offsetfromdp(8806768);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_14_m01_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_14->m01_axi_awprot.bind(*p_14_m01_axi_awprot);
        p_14_m01_axi_awprot->set_sv_netview_offsetfromdp(8806824);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_14_m01_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_14->m01_axi_awqos.bind(*p_14_m01_axi_awqos);
        p_14_m01_axi_awqos->set_sv_netview_offsetfromdp(8806880);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_14_m01_axi_awuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_14->m01_axi_awuser.bind(*p_14_m01_axi_awuser);
        p_14_m01_axi_awuser->set_sv_netview_offsetfromdp(8806936);
        xsim_sc_channel<0, bool > *p_14_m01_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_14->m01_axi_awvalid.bind(*p_14_m01_axi_awvalid);
        p_14_m01_axi_awvalid->set_sv_netview_offsetfromdp(8806992);
        xsim_sc_channel<0, bool > *p_14_m01_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_14->m01_axi_awready.bind(*p_14_m01_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_14_m01_axi_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_14_m01_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_14->m01_axi_wdata.bind(*p_14_m01_axi_wdata);
        p_14_m01_axi_wdata->set_sv_netview_offsetfromdp(8807104);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_14_m01_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_14->m01_axi_wstrb.bind(*p_14_m01_axi_wstrb);
        p_14_m01_axi_wstrb->set_sv_netview_offsetfromdp(8807160);
        xsim_sc_channel<0, bool > *p_14_m01_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_14->m01_axi_wlast.bind(*p_14_m01_axi_wlast);
        p_14_m01_axi_wlast->set_sv_netview_offsetfromdp(8807216);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_14_m01_axi_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_14->m01_axi_wuser.bind(*p_14_m01_axi_wuser);
        p_14_m01_axi_wuser->set_sv_netview_offsetfromdp(8807272);
        xsim_sc_channel<0, bool > *p_14_m01_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_14->m01_axi_wvalid.bind(*p_14_m01_axi_wvalid);
        p_14_m01_axi_wvalid->set_sv_netview_offsetfromdp(8807328);
        xsim_sc_channel<0, bool > *p_14_m01_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_14->m01_axi_wready.bind(*p_14_m01_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_14_m01_axi_wready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_14_m01_axi_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_14->m01_axi_bid.bind(*p_14_m01_axi_bid);
        (*_glb_hdl_sc_channel_map).push_back(p_14_m01_axi_bid);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_14_m01_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_14->m01_axi_bresp.bind(*p_14_m01_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_14_m01_axi_bresp);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_14_m01_axi_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_14->m01_axi_buser.bind(*p_14_m01_axi_buser);
        (*_glb_hdl_sc_channel_map).push_back(p_14_m01_axi_buser);
        xsim_sc_channel<0, bool > *p_14_m01_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_14->m01_axi_bvalid.bind(*p_14_m01_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_14_m01_axi_bvalid);
        xsim_sc_channel<0, bool > *p_14_m01_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_14->m01_axi_bready.bind(*p_14_m01_axi_bready);
        p_14_m01_axi_bready->set_sv_netview_offsetfromdp(8807664);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_14_m01_axi_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_14->m01_axi_arid.bind(*p_14_m01_axi_arid);
        p_14_m01_axi_arid->set_sv_netview_offsetfromdp(8807720);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_14_m01_axi_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_14->m01_axi_araddr.bind(*p_14_m01_axi_araddr);
        p_14_m01_axi_araddr->set_sv_netview_offsetfromdp(8807776);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_14_m01_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_14->m01_axi_arlen.bind(*p_14_m01_axi_arlen);
        p_14_m01_axi_arlen->set_sv_netview_offsetfromdp(8807832);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_14_m01_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_14->m01_axi_arsize.bind(*p_14_m01_axi_arsize);
        p_14_m01_axi_arsize->set_sv_netview_offsetfromdp(8807888);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_14_m01_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_14->m01_axi_arburst.bind(*p_14_m01_axi_arburst);
        p_14_m01_axi_arburst->set_sv_netview_offsetfromdp(8807944);
        xsim_sc_channel<0, bool > *p_14_m01_axi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_14->m01_axi_arlock.bind(*p_14_m01_axi_arlock);
        p_14_m01_axi_arlock->set_sv_netview_offsetfromdp(8808000);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_14_m01_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_14->m01_axi_arcache.bind(*p_14_m01_axi_arcache);
        p_14_m01_axi_arcache->set_sv_netview_offsetfromdp(8808056);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_14_m01_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_14->m01_axi_arprot.bind(*p_14_m01_axi_arprot);
        p_14_m01_axi_arprot->set_sv_netview_offsetfromdp(8808112);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_14_m01_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_14->m01_axi_arqos.bind(*p_14_m01_axi_arqos);
        p_14_m01_axi_arqos->set_sv_netview_offsetfromdp(8808168);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_14_m01_axi_aruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_14->m01_axi_aruser.bind(*p_14_m01_axi_aruser);
        p_14_m01_axi_aruser->set_sv_netview_offsetfromdp(8808224);
        xsim_sc_channel<0, bool > *p_14_m01_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_14->m01_axi_arvalid.bind(*p_14_m01_axi_arvalid);
        p_14_m01_axi_arvalid->set_sv_netview_offsetfromdp(8808280);
        xsim_sc_channel<0, bool > *p_14_m01_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_14->m01_axi_arready.bind(*p_14_m01_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_14_m01_axi_arready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_14_m01_axi_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_14->m01_axi_rid.bind(*p_14_m01_axi_rid);
        (*_glb_hdl_sc_channel_map).push_back(p_14_m01_axi_rid);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_14_m01_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_14->m01_axi_rdata.bind(*p_14_m01_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_14_m01_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_14_m01_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_14->m01_axi_rresp.bind(*p_14_m01_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_14_m01_axi_rresp);
        xsim_sc_channel<0, bool > *p_14_m01_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_14->m01_axi_rlast.bind(*p_14_m01_axi_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_14_m01_axi_rlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_14_m01_axi_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_14->m01_axi_ruser.bind(*p_14_m01_axi_ruser);
        (*_glb_hdl_sc_channel_map).push_back(p_14_m01_axi_ruser);
        xsim_sc_channel<0, bool > *p_14_m01_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_14->m01_axi_rvalid.bind(*p_14_m01_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_14_m01_axi_rvalid);
        xsim_sc_channel<0, bool > *p_14_m01_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_14->m01_axi_rready.bind(*p_14_m01_axi_rready);
        p_14_m01_axi_rready->set_sv_netview_offsetfromdp(8808728);
        xsim_sc_channel<0, bool > *p_14_m01_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_14->m01_axi_aclk.bind(*p_14_m01_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_14_m01_axi_aclk);
        xsim_sc_channel<0, bool > *p_14_m01_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_14->m01_axi_aresetn.bind(*p_14_m01_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_14_m01_axi_aresetn);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_14_s03_axi_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_14->s03_axi_awid.bind(*p_14_s03_axi_awid);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s03_axi_awid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_14_s03_axi_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_14->s03_axi_awaddr.bind(*p_14_s03_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s03_axi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_14_s03_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_14->s03_axi_awlen.bind(*p_14_s03_axi_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s03_axi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_14_s03_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_14->s03_axi_awsize.bind(*p_14_s03_axi_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s03_axi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_14_s03_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_14->s03_axi_awburst.bind(*p_14_s03_axi_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s03_axi_awburst);
        xsim_sc_channel<0, bool > *p_14_s03_axi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_14->s03_axi_awlock.bind(*p_14_s03_axi_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s03_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_14_s03_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_14->s03_axi_awcache.bind(*p_14_s03_axi_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s03_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_14_s03_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_14->s03_axi_awprot.bind(*p_14_s03_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s03_axi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_14_s03_axi_awregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_14->s03_axi_awregion.bind(*p_14_s03_axi_awregion);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s03_axi_awregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_14_s03_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_14->s03_axi_awqos.bind(*p_14_s03_axi_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s03_axi_awqos);
        xsim_sc_channel<0, bool > *p_14_s03_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_14->s03_axi_awvalid.bind(*p_14_s03_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s03_axi_awvalid);
        xsim_sc_channel<0, bool > *p_14_s03_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_14->s03_axi_awready.bind(*p_14_s03_axi_awready);
        p_14_s03_axi_awready->set_sv_netview_offsetfromdp(8809512);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_14_s03_axi_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_14->s03_axi_wdata.bind(*p_14_s03_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s03_axi_wdata);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_14_s03_axi_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_14->s03_axi_wstrb.bind(*p_14_s03_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s03_axi_wstrb);
        xsim_sc_channel<0, bool > *p_14_s03_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_14->s03_axi_wlast.bind(*p_14_s03_axi_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s03_axi_wlast);
        xsim_sc_channel<0, bool > *p_14_s03_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_14->s03_axi_wvalid.bind(*p_14_s03_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s03_axi_wvalid);
        xsim_sc_channel<0, bool > *p_14_s03_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_14->s03_axi_wready.bind(*p_14_s03_axi_wready);
        p_14_s03_axi_wready->set_sv_netview_offsetfromdp(8809792);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_14_s03_axi_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_14->s03_axi_bid.bind(*p_14_s03_axi_bid);
        p_14_s03_axi_bid->set_sv_netview_offsetfromdp(8809848);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_14_s03_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_14->s03_axi_bresp.bind(*p_14_s03_axi_bresp);
        p_14_s03_axi_bresp->set_sv_netview_offsetfromdp(8809904);
        xsim_sc_channel<0, bool > *p_14_s03_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_14->s03_axi_bvalid.bind(*p_14_s03_axi_bvalid);
        p_14_s03_axi_bvalid->set_sv_netview_offsetfromdp(8809960);
        xsim_sc_channel<0, bool > *p_14_s03_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_14->s03_axi_bready.bind(*p_14_s03_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s03_axi_bready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_14_s03_axi_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_14->s03_axi_arid.bind(*p_14_s03_axi_arid);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s03_axi_arid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_14_s03_axi_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_14->s03_axi_araddr.bind(*p_14_s03_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s03_axi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_14_s03_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_14->s03_axi_arlen.bind(*p_14_s03_axi_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s03_axi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_14_s03_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_14->s03_axi_arsize.bind(*p_14_s03_axi_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s03_axi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_14_s03_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_14->s03_axi_arburst.bind(*p_14_s03_axi_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s03_axi_arburst);
        xsim_sc_channel<0, bool > *p_14_s03_axi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_14->s03_axi_arlock.bind(*p_14_s03_axi_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s03_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_14_s03_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_14->s03_axi_arcache.bind(*p_14_s03_axi_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s03_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_14_s03_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_14->s03_axi_arprot.bind(*p_14_s03_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s03_axi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_14_s03_axi_arregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_14->s03_axi_arregion.bind(*p_14_s03_axi_arregion);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s03_axi_arregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_14_s03_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_14->s03_axi_arqos.bind(*p_14_s03_axi_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s03_axi_arqos);
        xsim_sc_channel<0, bool > *p_14_s03_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_14->s03_axi_arvalid.bind(*p_14_s03_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s03_axi_arvalid);
        xsim_sc_channel<0, bool > *p_14_s03_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_14->s03_axi_arready.bind(*p_14_s03_axi_arready);
        p_14_s03_axi_arready->set_sv_netview_offsetfromdp(8810688);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_14_s03_axi_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_14->s03_axi_rid.bind(*p_14_s03_axi_rid);
        p_14_s03_axi_rid->set_sv_netview_offsetfromdp(8810744);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_14_s03_axi_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_14->s03_axi_rdata.bind(*p_14_s03_axi_rdata);
        p_14_s03_axi_rdata->set_sv_netview_offsetfromdp(8810800);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_14_s03_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_14->s03_axi_rresp.bind(*p_14_s03_axi_rresp);
        p_14_s03_axi_rresp->set_sv_netview_offsetfromdp(8810856);
        xsim_sc_channel<0, bool > *p_14_s03_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_14->s03_axi_rlast.bind(*p_14_s03_axi_rlast);
        p_14_s03_axi_rlast->set_sv_netview_offsetfromdp(8810912);
        xsim_sc_channel<0, bool > *p_14_s03_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_14->s03_axi_rvalid.bind(*p_14_s03_axi_rvalid);
        p_14_s03_axi_rvalid->set_sv_netview_offsetfromdp(8810968);
        xsim_sc_channel<0, bool > *p_14_s03_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_14->s03_axi_rready.bind(*p_14_s03_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s03_axi_rready);
        xsim_sc_channel<0, bool > *p_14_s03_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_14->s03_axi_aclk.bind(*p_14_s03_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s03_axi_aclk);
        xsim_sc_channel<0, bool > *p_14_s03_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_14->s03_axi_aresetn.bind(*p_14_s03_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s03_axi_aresetn);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_14_s01_axi_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_14->s01_axi_awid.bind(*p_14_s01_axi_awid);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s01_axi_awid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_14_s01_axi_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_14->s01_axi_awaddr.bind(*p_14_s01_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s01_axi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_14_s01_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_14->s01_axi_awlen.bind(*p_14_s01_axi_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s01_axi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_14_s01_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_14->s01_axi_awsize.bind(*p_14_s01_axi_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s01_axi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_14_s01_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_14->s01_axi_awburst.bind(*p_14_s01_axi_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s01_axi_awburst);
        xsim_sc_channel<0, bool > *p_14_s01_axi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_14->s01_axi_awlock.bind(*p_14_s01_axi_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s01_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_14_s01_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_14->s01_axi_awcache.bind(*p_14_s01_axi_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s01_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_14_s01_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_14->s01_axi_awprot.bind(*p_14_s01_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s01_axi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_14_s01_axi_awregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_14->s01_axi_awregion.bind(*p_14_s01_axi_awregion);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s01_axi_awregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_14_s01_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_14->s01_axi_awqos.bind(*p_14_s01_axi_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s01_axi_awqos);
        xsim_sc_channel<0, bool > *p_14_s01_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_14->s01_axi_awvalid.bind(*p_14_s01_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s01_axi_awvalid);
        xsim_sc_channel<0, bool > *p_14_s01_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_14->s01_axi_awready.bind(*p_14_s01_axi_awready);
        p_14_s01_axi_awready->set_sv_netview_offsetfromdp(8811808);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_14_s01_axi_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_14->s01_axi_wdata.bind(*p_14_s01_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s01_axi_wdata);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_14_s01_axi_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_14->s01_axi_wstrb.bind(*p_14_s01_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s01_axi_wstrb);
        xsim_sc_channel<0, bool > *p_14_s01_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_14->s01_axi_wlast.bind(*p_14_s01_axi_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s01_axi_wlast);
        xsim_sc_channel<0, bool > *p_14_s01_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_14->s01_axi_wvalid.bind(*p_14_s01_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s01_axi_wvalid);
        xsim_sc_channel<0, bool > *p_14_s01_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_14->s01_axi_wready.bind(*p_14_s01_axi_wready);
        p_14_s01_axi_wready->set_sv_netview_offsetfromdp(8812088);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_14_s01_axi_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_14->s01_axi_bid.bind(*p_14_s01_axi_bid);
        p_14_s01_axi_bid->set_sv_netview_offsetfromdp(8812144);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_14_s01_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_14->s01_axi_bresp.bind(*p_14_s01_axi_bresp);
        p_14_s01_axi_bresp->set_sv_netview_offsetfromdp(8812200);
        xsim_sc_channel<0, bool > *p_14_s01_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_14->s01_axi_bvalid.bind(*p_14_s01_axi_bvalid);
        p_14_s01_axi_bvalid->set_sv_netview_offsetfromdp(8812256);
        xsim_sc_channel<0, bool > *p_14_s01_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_14->s01_axi_bready.bind(*p_14_s01_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s01_axi_bready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_14_s01_axi_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_14->s01_axi_arid.bind(*p_14_s01_axi_arid);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s01_axi_arid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_14_s01_axi_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_14->s01_axi_araddr.bind(*p_14_s01_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s01_axi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_14_s01_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_14->s01_axi_arlen.bind(*p_14_s01_axi_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s01_axi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_14_s01_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_14->s01_axi_arsize.bind(*p_14_s01_axi_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s01_axi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_14_s01_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_14->s01_axi_arburst.bind(*p_14_s01_axi_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s01_axi_arburst);
        xsim_sc_channel<0, bool > *p_14_s01_axi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_14->s01_axi_arlock.bind(*p_14_s01_axi_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s01_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_14_s01_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_14->s01_axi_arcache.bind(*p_14_s01_axi_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s01_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_14_s01_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_14->s01_axi_arprot.bind(*p_14_s01_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s01_axi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_14_s01_axi_arregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_14->s01_axi_arregion.bind(*p_14_s01_axi_arregion);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s01_axi_arregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_14_s01_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_14->s01_axi_arqos.bind(*p_14_s01_axi_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s01_axi_arqos);
        xsim_sc_channel<0, bool > *p_14_s01_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_14->s01_axi_arvalid.bind(*p_14_s01_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s01_axi_arvalid);
        xsim_sc_channel<0, bool > *p_14_s01_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_14->s01_axi_arready.bind(*p_14_s01_axi_arready);
        p_14_s01_axi_arready->set_sv_netview_offsetfromdp(8812984);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_14_s01_axi_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_14->s01_axi_rid.bind(*p_14_s01_axi_rid);
        p_14_s01_axi_rid->set_sv_netview_offsetfromdp(8813040);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_14_s01_axi_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_14->s01_axi_rdata.bind(*p_14_s01_axi_rdata);
        p_14_s01_axi_rdata->set_sv_netview_offsetfromdp(8813096);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_14_s01_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_14->s01_axi_rresp.bind(*p_14_s01_axi_rresp);
        p_14_s01_axi_rresp->set_sv_netview_offsetfromdp(8813152);
        xsim_sc_channel<0, bool > *p_14_s01_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_14->s01_axi_rlast.bind(*p_14_s01_axi_rlast);
        p_14_s01_axi_rlast->set_sv_netview_offsetfromdp(8813208);
        xsim_sc_channel<0, bool > *p_14_s01_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_14->s01_axi_rvalid.bind(*p_14_s01_axi_rvalid);
        p_14_s01_axi_rvalid->set_sv_netview_offsetfromdp(8813264);
        xsim_sc_channel<0, bool > *p_14_s01_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_14->s01_axi_rready.bind(*p_14_s01_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s01_axi_rready);
        xsim_sc_channel<0, bool > *p_14_s01_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_14->s01_axi_aclk.bind(*p_14_s01_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s01_axi_aclk);
        xsim_sc_channel<0, bool > *p_14_s01_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_14->s01_axi_aresetn.bind(*p_14_s01_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s01_axi_aresetn);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_14_s02_axi_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_14->s02_axi_awid.bind(*p_14_s02_axi_awid);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s02_axi_awid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_14_s02_axi_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_14->s02_axi_awaddr.bind(*p_14_s02_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s02_axi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_14_s02_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_14->s02_axi_awlen.bind(*p_14_s02_axi_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s02_axi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_14_s02_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_14->s02_axi_awsize.bind(*p_14_s02_axi_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s02_axi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_14_s02_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_14->s02_axi_awburst.bind(*p_14_s02_axi_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s02_axi_awburst);
        xsim_sc_channel<0, bool > *p_14_s02_axi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_14->s02_axi_awlock.bind(*p_14_s02_axi_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s02_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_14_s02_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_14->s02_axi_awcache.bind(*p_14_s02_axi_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s02_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_14_s02_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_14->s02_axi_awprot.bind(*p_14_s02_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s02_axi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_14_s02_axi_awregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_14->s02_axi_awregion.bind(*p_14_s02_axi_awregion);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s02_axi_awregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_14_s02_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_14->s02_axi_awqos.bind(*p_14_s02_axi_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s02_axi_awqos);
        xsim_sc_channel<0, bool > *p_14_s02_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_14->s02_axi_awvalid.bind(*p_14_s02_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s02_axi_awvalid);
        xsim_sc_channel<0, bool > *p_14_s02_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_14->s02_axi_awready.bind(*p_14_s02_axi_awready);
        p_14_s02_axi_awready->set_sv_netview_offsetfromdp(8814104);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_14_s02_axi_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_14->s02_axi_wdata.bind(*p_14_s02_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s02_axi_wdata);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_14_s02_axi_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_14->s02_axi_wstrb.bind(*p_14_s02_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s02_axi_wstrb);
        xsim_sc_channel<0, bool > *p_14_s02_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_14->s02_axi_wlast.bind(*p_14_s02_axi_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s02_axi_wlast);
        xsim_sc_channel<0, bool > *p_14_s02_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_14->s02_axi_wvalid.bind(*p_14_s02_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s02_axi_wvalid);
        xsim_sc_channel<0, bool > *p_14_s02_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_14->s02_axi_wready.bind(*p_14_s02_axi_wready);
        p_14_s02_axi_wready->set_sv_netview_offsetfromdp(8814384);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_14_s02_axi_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_14->s02_axi_bid.bind(*p_14_s02_axi_bid);
        p_14_s02_axi_bid->set_sv_netview_offsetfromdp(8814440);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_14_s02_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_14->s02_axi_bresp.bind(*p_14_s02_axi_bresp);
        p_14_s02_axi_bresp->set_sv_netview_offsetfromdp(8814496);
        xsim_sc_channel<0, bool > *p_14_s02_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_14->s02_axi_bvalid.bind(*p_14_s02_axi_bvalid);
        p_14_s02_axi_bvalid->set_sv_netview_offsetfromdp(8814552);
        xsim_sc_channel<0, bool > *p_14_s02_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_14->s02_axi_bready.bind(*p_14_s02_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s02_axi_bready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_14_s02_axi_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_14->s02_axi_arid.bind(*p_14_s02_axi_arid);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s02_axi_arid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_14_s02_axi_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_14->s02_axi_araddr.bind(*p_14_s02_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s02_axi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_14_s02_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_14->s02_axi_arlen.bind(*p_14_s02_axi_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s02_axi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_14_s02_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_14->s02_axi_arsize.bind(*p_14_s02_axi_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s02_axi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_14_s02_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_14->s02_axi_arburst.bind(*p_14_s02_axi_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s02_axi_arburst);
        xsim_sc_channel<0, bool > *p_14_s02_axi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_14->s02_axi_arlock.bind(*p_14_s02_axi_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s02_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_14_s02_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_14->s02_axi_arcache.bind(*p_14_s02_axi_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s02_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_14_s02_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_14->s02_axi_arprot.bind(*p_14_s02_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s02_axi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_14_s02_axi_arregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_14->s02_axi_arregion.bind(*p_14_s02_axi_arregion);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s02_axi_arregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_14_s02_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_14->s02_axi_arqos.bind(*p_14_s02_axi_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s02_axi_arqos);
        xsim_sc_channel<0, bool > *p_14_s02_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_14->s02_axi_arvalid.bind(*p_14_s02_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s02_axi_arvalid);
        xsim_sc_channel<0, bool > *p_14_s02_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_14->s02_axi_arready.bind(*p_14_s02_axi_arready);
        p_14_s02_axi_arready->set_sv_netview_offsetfromdp(8815280);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_14_s02_axi_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_14->s02_axi_rid.bind(*p_14_s02_axi_rid);
        p_14_s02_axi_rid->set_sv_netview_offsetfromdp(8815336);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_14_s02_axi_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_14->s02_axi_rdata.bind(*p_14_s02_axi_rdata);
        p_14_s02_axi_rdata->set_sv_netview_offsetfromdp(8815392);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_14_s02_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_14->s02_axi_rresp.bind(*p_14_s02_axi_rresp);
        p_14_s02_axi_rresp->set_sv_netview_offsetfromdp(8815448);
        xsim_sc_channel<0, bool > *p_14_s02_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_14->s02_axi_rlast.bind(*p_14_s02_axi_rlast);
        p_14_s02_axi_rlast->set_sv_netview_offsetfromdp(8815504);
        xsim_sc_channel<0, bool > *p_14_s02_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_14->s02_axi_rvalid.bind(*p_14_s02_axi_rvalid);
        p_14_s02_axi_rvalid->set_sv_netview_offsetfromdp(8815560);
        xsim_sc_channel<0, bool > *p_14_s02_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_14->s02_axi_rready.bind(*p_14_s02_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s02_axi_rready);
        xsim_sc_channel<0, bool > *p_14_s02_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_14->s02_axi_aclk.bind(*p_14_s02_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s02_axi_aclk);
        xsim_sc_channel<0, bool > *p_14_s02_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_14->s02_axi_aresetn.bind(*p_14_s02_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s02_axi_aresetn);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_14_s04_axi_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_14->s04_axi_awid.bind(*p_14_s04_axi_awid);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s04_axi_awid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_14_s04_axi_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_14->s04_axi_awaddr.bind(*p_14_s04_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s04_axi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_14_s04_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_14->s04_axi_awlen.bind(*p_14_s04_axi_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s04_axi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_14_s04_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_14->s04_axi_awsize.bind(*p_14_s04_axi_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s04_axi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_14_s04_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_14->s04_axi_awburst.bind(*p_14_s04_axi_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s04_axi_awburst);
        xsim_sc_channel<0, bool > *p_14_s04_axi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_14->s04_axi_awlock.bind(*p_14_s04_axi_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s04_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_14_s04_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_14->s04_axi_awcache.bind(*p_14_s04_axi_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s04_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_14_s04_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_14->s04_axi_awprot.bind(*p_14_s04_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s04_axi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_14_s04_axi_awregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_14->s04_axi_awregion.bind(*p_14_s04_axi_awregion);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s04_axi_awregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_14_s04_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_14->s04_axi_awqos.bind(*p_14_s04_axi_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s04_axi_awqos);
        xsim_sc_channel<0, bool > *p_14_s04_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_14->s04_axi_awvalid.bind(*p_14_s04_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s04_axi_awvalid);
        xsim_sc_channel<0, bool > *p_14_s04_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_14->s04_axi_awready.bind(*p_14_s04_axi_awready);
        p_14_s04_axi_awready->set_sv_netview_offsetfromdp(8816400);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_14_s04_axi_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_14->s04_axi_wdata.bind(*p_14_s04_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s04_axi_wdata);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_14_s04_axi_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_14->s04_axi_wstrb.bind(*p_14_s04_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s04_axi_wstrb);
        xsim_sc_channel<0, bool > *p_14_s04_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_14->s04_axi_wlast.bind(*p_14_s04_axi_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s04_axi_wlast);
        xsim_sc_channel<0, bool > *p_14_s04_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_14->s04_axi_wvalid.bind(*p_14_s04_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s04_axi_wvalid);
        xsim_sc_channel<0, bool > *p_14_s04_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_14->s04_axi_wready.bind(*p_14_s04_axi_wready);
        p_14_s04_axi_wready->set_sv_netview_offsetfromdp(8816680);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_14_s04_axi_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_14->s04_axi_bid.bind(*p_14_s04_axi_bid);
        p_14_s04_axi_bid->set_sv_netview_offsetfromdp(8816736);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_14_s04_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_14->s04_axi_bresp.bind(*p_14_s04_axi_bresp);
        p_14_s04_axi_bresp->set_sv_netview_offsetfromdp(8816792);
        xsim_sc_channel<0, bool > *p_14_s04_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_14->s04_axi_bvalid.bind(*p_14_s04_axi_bvalid);
        p_14_s04_axi_bvalid->set_sv_netview_offsetfromdp(8816848);
        xsim_sc_channel<0, bool > *p_14_s04_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_14->s04_axi_bready.bind(*p_14_s04_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s04_axi_bready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_14_s04_axi_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_14->s04_axi_arid.bind(*p_14_s04_axi_arid);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s04_axi_arid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_14_s04_axi_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_14->s04_axi_araddr.bind(*p_14_s04_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s04_axi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_14_s04_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_14->s04_axi_arlen.bind(*p_14_s04_axi_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s04_axi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_14_s04_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_14->s04_axi_arsize.bind(*p_14_s04_axi_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s04_axi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_14_s04_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_14->s04_axi_arburst.bind(*p_14_s04_axi_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s04_axi_arburst);
        xsim_sc_channel<0, bool > *p_14_s04_axi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_14->s04_axi_arlock.bind(*p_14_s04_axi_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s04_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_14_s04_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_14->s04_axi_arcache.bind(*p_14_s04_axi_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s04_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_14_s04_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_14->s04_axi_arprot.bind(*p_14_s04_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s04_axi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_14_s04_axi_arregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_14->s04_axi_arregion.bind(*p_14_s04_axi_arregion);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s04_axi_arregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_14_s04_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_14->s04_axi_arqos.bind(*p_14_s04_axi_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s04_axi_arqos);
        xsim_sc_channel<0, bool > *p_14_s04_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_14->s04_axi_arvalid.bind(*p_14_s04_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s04_axi_arvalid);
        xsim_sc_channel<0, bool > *p_14_s04_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_14->s04_axi_arready.bind(*p_14_s04_axi_arready);
        p_14_s04_axi_arready->set_sv_netview_offsetfromdp(8817576);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_14_s04_axi_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_14->s04_axi_rid.bind(*p_14_s04_axi_rid);
        p_14_s04_axi_rid->set_sv_netview_offsetfromdp(8817632);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_14_s04_axi_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_14->s04_axi_rdata.bind(*p_14_s04_axi_rdata);
        p_14_s04_axi_rdata->set_sv_netview_offsetfromdp(8817688);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_14_s04_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_14->s04_axi_rresp.bind(*p_14_s04_axi_rresp);
        p_14_s04_axi_rresp->set_sv_netview_offsetfromdp(8817744);
        xsim_sc_channel<0, bool > *p_14_s04_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_14->s04_axi_rlast.bind(*p_14_s04_axi_rlast);
        p_14_s04_axi_rlast->set_sv_netview_offsetfromdp(8817800);
        xsim_sc_channel<0, bool > *p_14_s04_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_14->s04_axi_rvalid.bind(*p_14_s04_axi_rvalid);
        p_14_s04_axi_rvalid->set_sv_netview_offsetfromdp(8817856);
        xsim_sc_channel<0, bool > *p_14_s04_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_14->s04_axi_rready.bind(*p_14_s04_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s04_axi_rready);
        xsim_sc_channel<0, bool > *p_14_s04_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_14->s04_axi_aclk.bind(*p_14_s04_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s04_axi_aclk);
        xsim_sc_channel<0, bool > *p_14_s04_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_14->s04_axi_aresetn.bind(*p_14_s04_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s04_axi_aresetn);
        sc_inst_15 = new emu_sci(".emu_wrapper.emu_i.emu_sci_inst");
        sc_inst_15->xsim_set_dbg_index(23);
        sc_inst_16 = new emu_sim_embedded_scheduler_sw_0_0(".emu_wrapper.emu_i.static_region.embedded_schedular.sim_embedded_scheduler_sw_0");
        sc_inst_16->xsim_set_dbg_index(1570);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_16_saxi_lite_cq_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_16->saxi_lite_cq_awaddr.bind(*p_16_saxi_lite_cq_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_16_saxi_lite_cq_awaddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_16_saxi_lite_cq_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_16->saxi_lite_cq_awprot.bind(*p_16_saxi_lite_cq_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_16_saxi_lite_cq_awprot);
        xsim_sc_channel<0, bool > *p_16_saxi_lite_cq_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_16->saxi_lite_cq_awvalid.bind(*p_16_saxi_lite_cq_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_16_saxi_lite_cq_awvalid);
        xsim_sc_channel<0, bool > *p_16_saxi_lite_cq_awready = new xsim_sc_channel<0, bool >();
        sc_inst_16->saxi_lite_cq_awready.bind(*p_16_saxi_lite_cq_awready);
        p_16_saxi_lite_cq_awready->set_sv_netview_offsetfromdp(10936576);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_16_saxi_lite_cq_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_16->saxi_lite_cq_wdata.bind(*p_16_saxi_lite_cq_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_16_saxi_lite_cq_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_16_saxi_lite_cq_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_16->saxi_lite_cq_wstrb.bind(*p_16_saxi_lite_cq_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_16_saxi_lite_cq_wstrb);
        xsim_sc_channel<0, bool > *p_16_saxi_lite_cq_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_16->saxi_lite_cq_wvalid.bind(*p_16_saxi_lite_cq_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_16_saxi_lite_cq_wvalid);
        xsim_sc_channel<0, bool > *p_16_saxi_lite_cq_wready = new xsim_sc_channel<0, bool >();
        sc_inst_16->saxi_lite_cq_wready.bind(*p_16_saxi_lite_cq_wready);
        p_16_saxi_lite_cq_wready->set_sv_netview_offsetfromdp(10936800);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_16_saxi_lite_cq_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_16->saxi_lite_cq_bresp.bind(*p_16_saxi_lite_cq_bresp);
        p_16_saxi_lite_cq_bresp->set_sv_netview_offsetfromdp(10936856);
        xsim_sc_channel<0, bool > *p_16_saxi_lite_cq_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_16->saxi_lite_cq_bvalid.bind(*p_16_saxi_lite_cq_bvalid);
        p_16_saxi_lite_cq_bvalid->set_sv_netview_offsetfromdp(10936912);
        xsim_sc_channel<0, bool > *p_16_saxi_lite_cq_bready = new xsim_sc_channel<0, bool >();
        sc_inst_16->saxi_lite_cq_bready.bind(*p_16_saxi_lite_cq_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_16_saxi_lite_cq_bready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_16_saxi_lite_cq_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_16->saxi_lite_cq_araddr.bind(*p_16_saxi_lite_cq_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_16_saxi_lite_cq_araddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_16_saxi_lite_cq_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_16->saxi_lite_cq_arprot.bind(*p_16_saxi_lite_cq_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_16_saxi_lite_cq_arprot);
        xsim_sc_channel<0, bool > *p_16_saxi_lite_cq_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_16->saxi_lite_cq_arvalid.bind(*p_16_saxi_lite_cq_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_16_saxi_lite_cq_arvalid);
        xsim_sc_channel<0, bool > *p_16_saxi_lite_cq_arready = new xsim_sc_channel<0, bool >();
        sc_inst_16->saxi_lite_cq_arready.bind(*p_16_saxi_lite_cq_arready);
        p_16_saxi_lite_cq_arready->set_sv_netview_offsetfromdp(10937192);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_16_saxi_lite_cq_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_16->saxi_lite_cq_rdata.bind(*p_16_saxi_lite_cq_rdata);
        p_16_saxi_lite_cq_rdata->set_sv_netview_offsetfromdp(10937248);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_16_saxi_lite_cq_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_16->saxi_lite_cq_rresp.bind(*p_16_saxi_lite_cq_rresp);
        p_16_saxi_lite_cq_rresp->set_sv_netview_offsetfromdp(10937304);
        xsim_sc_channel<0, bool > *p_16_saxi_lite_cq_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_16->saxi_lite_cq_rvalid.bind(*p_16_saxi_lite_cq_rvalid);
        p_16_saxi_lite_cq_rvalid->set_sv_netview_offsetfromdp(10937360);
        xsim_sc_channel<0, bool > *p_16_saxi_lite_cq_rready = new xsim_sc_channel<0, bool >();
        sc_inst_16->saxi_lite_cq_rready.bind(*p_16_saxi_lite_cq_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_16_saxi_lite_cq_rready);
        xsim_sc_channel<0, bool > *p_16_saxi_lite_cq_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_16->saxi_lite_cq_aclk.bind(*p_16_saxi_lite_cq_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_16_saxi_lite_cq_aclk);
        xsim_sc_channel<0, bool > *p_16_saxi_lite_cq_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_16->saxi_lite_cq_aresetn.bind(*p_16_saxi_lite_cq_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_16_saxi_lite_cq_aresetn);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_16_maxi_lite_mb_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_16->maxi_lite_mb_awaddr.bind(*p_16_maxi_lite_mb_awaddr);
        p_16_maxi_lite_mb_awaddr->set_sv_netview_offsetfromdp(10937584);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_16_maxi_lite_mb_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_16->maxi_lite_mb_awprot.bind(*p_16_maxi_lite_mb_awprot);
        p_16_maxi_lite_mb_awprot->set_sv_netview_offsetfromdp(10937640);
        xsim_sc_channel<0, bool > *p_16_maxi_lite_mb_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_16->maxi_lite_mb_awvalid.bind(*p_16_maxi_lite_mb_awvalid);
        p_16_maxi_lite_mb_awvalid->set_sv_netview_offsetfromdp(10937696);
        xsim_sc_channel<0, bool > *p_16_maxi_lite_mb_awready = new xsim_sc_channel<0, bool >();
        sc_inst_16->maxi_lite_mb_awready.bind(*p_16_maxi_lite_mb_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_16_maxi_lite_mb_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_16_maxi_lite_mb_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_16->maxi_lite_mb_wdata.bind(*p_16_maxi_lite_mb_wdata);
        p_16_maxi_lite_mb_wdata->set_sv_netview_offsetfromdp(10937808);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_16_maxi_lite_mb_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_16->maxi_lite_mb_wstrb.bind(*p_16_maxi_lite_mb_wstrb);
        p_16_maxi_lite_mb_wstrb->set_sv_netview_offsetfromdp(10937864);
        xsim_sc_channel<0, bool > *p_16_maxi_lite_mb_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_16->maxi_lite_mb_wvalid.bind(*p_16_maxi_lite_mb_wvalid);
        p_16_maxi_lite_mb_wvalid->set_sv_netview_offsetfromdp(10937920);
        xsim_sc_channel<0, bool > *p_16_maxi_lite_mb_wready = new xsim_sc_channel<0, bool >();
        sc_inst_16->maxi_lite_mb_wready.bind(*p_16_maxi_lite_mb_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_16_maxi_lite_mb_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_16_maxi_lite_mb_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_16->maxi_lite_mb_bresp.bind(*p_16_maxi_lite_mb_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_16_maxi_lite_mb_bresp);
        xsim_sc_channel<0, bool > *p_16_maxi_lite_mb_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_16->maxi_lite_mb_bvalid.bind(*p_16_maxi_lite_mb_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_16_maxi_lite_mb_bvalid);
        xsim_sc_channel<0, bool > *p_16_maxi_lite_mb_bready = new xsim_sc_channel<0, bool >();
        sc_inst_16->maxi_lite_mb_bready.bind(*p_16_maxi_lite_mb_bready);
        p_16_maxi_lite_mb_bready->set_sv_netview_offsetfromdp(10938144);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_16_maxi_lite_mb_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_16->maxi_lite_mb_araddr.bind(*p_16_maxi_lite_mb_araddr);
        p_16_maxi_lite_mb_araddr->set_sv_netview_offsetfromdp(10938200);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_16_maxi_lite_mb_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_16->maxi_lite_mb_arprot.bind(*p_16_maxi_lite_mb_arprot);
        p_16_maxi_lite_mb_arprot->set_sv_netview_offsetfromdp(10938256);
        xsim_sc_channel<0, bool > *p_16_maxi_lite_mb_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_16->maxi_lite_mb_arvalid.bind(*p_16_maxi_lite_mb_arvalid);
        p_16_maxi_lite_mb_arvalid->set_sv_netview_offsetfromdp(10938312);
        xsim_sc_channel<0, bool > *p_16_maxi_lite_mb_arready = new xsim_sc_channel<0, bool >();
        sc_inst_16->maxi_lite_mb_arready.bind(*p_16_maxi_lite_mb_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_16_maxi_lite_mb_arready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_16_maxi_lite_mb_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_16->maxi_lite_mb_rdata.bind(*p_16_maxi_lite_mb_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_16_maxi_lite_mb_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_16_maxi_lite_mb_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_16->maxi_lite_mb_rresp.bind(*p_16_maxi_lite_mb_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_16_maxi_lite_mb_rresp);
        xsim_sc_channel<0, bool > *p_16_maxi_lite_mb_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_16->maxi_lite_mb_rvalid.bind(*p_16_maxi_lite_mb_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_16_maxi_lite_mb_rvalid);
        xsim_sc_channel<0, bool > *p_16_maxi_lite_mb_rready = new xsim_sc_channel<0, bool >();
        sc_inst_16->maxi_lite_mb_rready.bind(*p_16_maxi_lite_mb_rready);
        p_16_maxi_lite_mb_rready->set_sv_netview_offsetfromdp(10938592);
        xsim_sc_channel<0, bool > *p_16_maxi_lite_mb_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_16->maxi_lite_mb_aclk.bind(*p_16_maxi_lite_mb_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_16_maxi_lite_mb_aclk);
        xsim_sc_channel<0, bool > *p_16_maxi_lite_mb_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_16->maxi_lite_mb_aresetn.bind(*p_16_maxi_lite_mb_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_16_maxi_lite_mb_aresetn);
        xsim_sc_channel<0, bool > *p_16_irq = new xsim_sc_channel<0, bool >();
        sc_inst_16->irq.bind(*p_16_irq);
        (*_glb_hdl_sc_channel_map).push_back(p_16_irq);
        sc_inst_17 = new emu_icn_pass_0_0(".emu_wrapper.emu_i.static_region.icn_pass_0");
        sc_inst_17->xsim_set_dbg_index(291);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_17_s00_axi_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_17->s00_axi_awaddr.bind(*p_17_s00_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s00_axi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_17_s00_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_17->s00_axi_awlen.bind(*p_17_s00_axi_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s00_axi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_17_s00_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_17->s00_axi_awsize.bind(*p_17_s00_axi_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s00_axi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_17_s00_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_17->s00_axi_awburst.bind(*p_17_s00_axi_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s00_axi_awburst);
        xsim_sc_channel<0, bool > *p_17_s00_axi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_17->s00_axi_awlock.bind(*p_17_s00_axi_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s00_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_17_s00_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_17->s00_axi_awcache.bind(*p_17_s00_axi_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s00_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_17_s00_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_17->s00_axi_awprot.bind(*p_17_s00_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s00_axi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_17_s00_axi_awregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_17->s00_axi_awregion.bind(*p_17_s00_axi_awregion);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s00_axi_awregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_17_s00_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_17->s00_axi_awqos.bind(*p_17_s00_axi_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s00_axi_awqos);
        xsim_sc_channel<0, bool > *p_17_s00_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_17->s00_axi_awvalid.bind(*p_17_s00_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s00_axi_awvalid);
        xsim_sc_channel<0, bool > *p_17_s00_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_17->s00_axi_awready.bind(*p_17_s00_axi_awready);
        p_17_s00_axi_awready->set_sv_netview_offsetfromdp(10977560);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_17_s00_axi_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_17->s00_axi_wdata.bind(*p_17_s00_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s00_axi_wdata);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_17_s00_axi_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_17->s00_axi_wstrb.bind(*p_17_s00_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s00_axi_wstrb);
        xsim_sc_channel<0, bool > *p_17_s00_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_17->s00_axi_wlast.bind(*p_17_s00_axi_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s00_axi_wlast);
        xsim_sc_channel<0, bool > *p_17_s00_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_17->s00_axi_wvalid.bind(*p_17_s00_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s00_axi_wvalid);
        xsim_sc_channel<0, bool > *p_17_s00_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_17->s00_axi_wready.bind(*p_17_s00_axi_wready);
        p_17_s00_axi_wready->set_sv_netview_offsetfromdp(10977840);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_17_s00_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_17->s00_axi_bresp.bind(*p_17_s00_axi_bresp);
        p_17_s00_axi_bresp->set_sv_netview_offsetfromdp(10977896);
        xsim_sc_channel<0, bool > *p_17_s00_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_17->s00_axi_bvalid.bind(*p_17_s00_axi_bvalid);
        p_17_s00_axi_bvalid->set_sv_netview_offsetfromdp(10977952);
        xsim_sc_channel<0, bool > *p_17_s00_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_17->s00_axi_bready.bind(*p_17_s00_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s00_axi_bready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_17_s00_axi_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_17->s00_axi_araddr.bind(*p_17_s00_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s00_axi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_17_s00_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_17->s00_axi_arlen.bind(*p_17_s00_axi_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s00_axi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_17_s00_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_17->s00_axi_arsize.bind(*p_17_s00_axi_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s00_axi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_17_s00_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_17->s00_axi_arburst.bind(*p_17_s00_axi_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s00_axi_arburst);
        xsim_sc_channel<0, bool > *p_17_s00_axi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_17->s00_axi_arlock.bind(*p_17_s00_axi_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s00_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_17_s00_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_17->s00_axi_arcache.bind(*p_17_s00_axi_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s00_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_17_s00_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_17->s00_axi_arprot.bind(*p_17_s00_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s00_axi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_17_s00_axi_arregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_17->s00_axi_arregion.bind(*p_17_s00_axi_arregion);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s00_axi_arregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_17_s00_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_17->s00_axi_arqos.bind(*p_17_s00_axi_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s00_axi_arqos);
        xsim_sc_channel<0, bool > *p_17_s00_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_17->s00_axi_arvalid.bind(*p_17_s00_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s00_axi_arvalid);
        xsim_sc_channel<0, bool > *p_17_s00_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_17->s00_axi_arready.bind(*p_17_s00_axi_arready);
        p_17_s00_axi_arready->set_sv_netview_offsetfromdp(10978624);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_17_s00_axi_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_17->s00_axi_rdata.bind(*p_17_s00_axi_rdata);
        p_17_s00_axi_rdata->set_sv_netview_offsetfromdp(10978680);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_17_s00_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_17->s00_axi_rresp.bind(*p_17_s00_axi_rresp);
        p_17_s00_axi_rresp->set_sv_netview_offsetfromdp(10978736);
        xsim_sc_channel<0, bool > *p_17_s00_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_17->s00_axi_rlast.bind(*p_17_s00_axi_rlast);
        p_17_s00_axi_rlast->set_sv_netview_offsetfromdp(10978792);
        xsim_sc_channel<0, bool > *p_17_s00_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_17->s00_axi_rvalid.bind(*p_17_s00_axi_rvalid);
        p_17_s00_axi_rvalid->set_sv_netview_offsetfromdp(10978848);
        xsim_sc_channel<0, bool > *p_17_s00_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_17->s00_axi_rready.bind(*p_17_s00_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s00_axi_rready);
        xsim_sc_channel<0, bool > *p_17_s00_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_17->s00_axi_aclk.bind(*p_17_s00_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s00_axi_aclk);
        xsim_sc_channel<0, bool > *p_17_s00_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_17->s00_axi_aresetn.bind(*p_17_s00_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s00_axi_aresetn);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_17_m00_axi_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_17->m00_axi_awid.bind(*p_17_m00_axi_awid);
        p_17_m00_axi_awid->set_sv_netview_offsetfromdp(10979072);
        xsim_sc_channel<34, sc_dt::sc_bv<34> > *p_17_m00_axi_awaddr = new xsim_sc_channel<34, sc_dt::sc_bv<34> >();
        sc_inst_17->m00_axi_awaddr.bind(*p_17_m00_axi_awaddr);
        p_17_m00_axi_awaddr->set_sv_netview_offsetfromdp(10979128);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_17_m00_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_17->m00_axi_awlen.bind(*p_17_m00_axi_awlen);
        p_17_m00_axi_awlen->set_sv_netview_offsetfromdp(10979184);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_17_m00_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_17->m00_axi_awsize.bind(*p_17_m00_axi_awsize);
        p_17_m00_axi_awsize->set_sv_netview_offsetfromdp(10979240);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_17_m00_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_17->m00_axi_awburst.bind(*p_17_m00_axi_awburst);
        p_17_m00_axi_awburst->set_sv_netview_offsetfromdp(10979296);
        xsim_sc_channel<0, bool > *p_17_m00_axi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_17->m00_axi_awlock.bind(*p_17_m00_axi_awlock);
        p_17_m00_axi_awlock->set_sv_netview_offsetfromdp(10979352);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_17_m00_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_17->m00_axi_awcache.bind(*p_17_m00_axi_awcache);
        p_17_m00_axi_awcache->set_sv_netview_offsetfromdp(10979408);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_17_m00_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_17->m00_axi_awprot.bind(*p_17_m00_axi_awprot);
        p_17_m00_axi_awprot->set_sv_netview_offsetfromdp(10979464);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_17_m00_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_17->m00_axi_awqos.bind(*p_17_m00_axi_awqos);
        p_17_m00_axi_awqos->set_sv_netview_offsetfromdp(10979520);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_17_m00_axi_awuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_17->m00_axi_awuser.bind(*p_17_m00_axi_awuser);
        p_17_m00_axi_awuser->set_sv_netview_offsetfromdp(10979576);
        xsim_sc_channel<0, bool > *p_17_m00_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_17->m00_axi_awvalid.bind(*p_17_m00_axi_awvalid);
        p_17_m00_axi_awvalid->set_sv_netview_offsetfromdp(10979632);
        xsim_sc_channel<0, bool > *p_17_m00_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_17->m00_axi_awready.bind(*p_17_m00_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_17_m00_axi_awready);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_17_m00_axi_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_17->m00_axi_wdata.bind(*p_17_m00_axi_wdata);
        p_17_m00_axi_wdata->set_sv_netview_offsetfromdp(10979744);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_17_m00_axi_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_17->m00_axi_wstrb.bind(*p_17_m00_axi_wstrb);
        p_17_m00_axi_wstrb->set_sv_netview_offsetfromdp(10979800);
        xsim_sc_channel<0, bool > *p_17_m00_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_17->m00_axi_wlast.bind(*p_17_m00_axi_wlast);
        p_17_m00_axi_wlast->set_sv_netview_offsetfromdp(10979856);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_17_m00_axi_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_17->m00_axi_wuser.bind(*p_17_m00_axi_wuser);
        p_17_m00_axi_wuser->set_sv_netview_offsetfromdp(10979912);
        xsim_sc_channel<0, bool > *p_17_m00_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_17->m00_axi_wvalid.bind(*p_17_m00_axi_wvalid);
        p_17_m00_axi_wvalid->set_sv_netview_offsetfromdp(10979968);
        xsim_sc_channel<0, bool > *p_17_m00_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_17->m00_axi_wready.bind(*p_17_m00_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_17_m00_axi_wready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_17_m00_axi_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_17->m00_axi_bid.bind(*p_17_m00_axi_bid);
        (*_glb_hdl_sc_channel_map).push_back(p_17_m00_axi_bid);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_17_m00_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_17->m00_axi_bresp.bind(*p_17_m00_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_17_m00_axi_bresp);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_17_m00_axi_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_17->m00_axi_buser.bind(*p_17_m00_axi_buser);
        (*_glb_hdl_sc_channel_map).push_back(p_17_m00_axi_buser);
        xsim_sc_channel<0, bool > *p_17_m00_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_17->m00_axi_bvalid.bind(*p_17_m00_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_17_m00_axi_bvalid);
        xsim_sc_channel<0, bool > *p_17_m00_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_17->m00_axi_bready.bind(*p_17_m00_axi_bready);
        p_17_m00_axi_bready->set_sv_netview_offsetfromdp(10980304);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_17_m00_axi_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_17->m00_axi_arid.bind(*p_17_m00_axi_arid);
        p_17_m00_axi_arid->set_sv_netview_offsetfromdp(10980360);
        xsim_sc_channel<34, sc_dt::sc_bv<34> > *p_17_m00_axi_araddr = new xsim_sc_channel<34, sc_dt::sc_bv<34> >();
        sc_inst_17->m00_axi_araddr.bind(*p_17_m00_axi_araddr);
        p_17_m00_axi_araddr->set_sv_netview_offsetfromdp(10980416);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_17_m00_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_17->m00_axi_arlen.bind(*p_17_m00_axi_arlen);
        p_17_m00_axi_arlen->set_sv_netview_offsetfromdp(10980472);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_17_m00_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_17->m00_axi_arsize.bind(*p_17_m00_axi_arsize);
        p_17_m00_axi_arsize->set_sv_netview_offsetfromdp(10980528);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_17_m00_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_17->m00_axi_arburst.bind(*p_17_m00_axi_arburst);
        p_17_m00_axi_arburst->set_sv_netview_offsetfromdp(10980584);
        xsim_sc_channel<0, bool > *p_17_m00_axi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_17->m00_axi_arlock.bind(*p_17_m00_axi_arlock);
        p_17_m00_axi_arlock->set_sv_netview_offsetfromdp(10980640);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_17_m00_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_17->m00_axi_arcache.bind(*p_17_m00_axi_arcache);
        p_17_m00_axi_arcache->set_sv_netview_offsetfromdp(10980696);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_17_m00_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_17->m00_axi_arprot.bind(*p_17_m00_axi_arprot);
        p_17_m00_axi_arprot->set_sv_netview_offsetfromdp(10980752);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_17_m00_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_17->m00_axi_arqos.bind(*p_17_m00_axi_arqos);
        p_17_m00_axi_arqos->set_sv_netview_offsetfromdp(10980808);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_17_m00_axi_aruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_17->m00_axi_aruser.bind(*p_17_m00_axi_aruser);
        p_17_m00_axi_aruser->set_sv_netview_offsetfromdp(10980864);
        xsim_sc_channel<0, bool > *p_17_m00_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_17->m00_axi_arvalid.bind(*p_17_m00_axi_arvalid);
        p_17_m00_axi_arvalid->set_sv_netview_offsetfromdp(10980920);
        xsim_sc_channel<0, bool > *p_17_m00_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_17->m00_axi_arready.bind(*p_17_m00_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_17_m00_axi_arready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_17_m00_axi_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_17->m00_axi_rid.bind(*p_17_m00_axi_rid);
        (*_glb_hdl_sc_channel_map).push_back(p_17_m00_axi_rid);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_17_m00_axi_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_17->m00_axi_rdata.bind(*p_17_m00_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_17_m00_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_17_m00_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_17->m00_axi_rresp.bind(*p_17_m00_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_17_m00_axi_rresp);
        xsim_sc_channel<0, bool > *p_17_m00_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_17->m00_axi_rlast.bind(*p_17_m00_axi_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_17_m00_axi_rlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_17_m00_axi_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_17->m00_axi_ruser.bind(*p_17_m00_axi_ruser);
        (*_glb_hdl_sc_channel_map).push_back(p_17_m00_axi_ruser);
        xsim_sc_channel<0, bool > *p_17_m00_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_17->m00_axi_rvalid.bind(*p_17_m00_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_17_m00_axi_rvalid);
        xsim_sc_channel<0, bool > *p_17_m00_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_17->m00_axi_rready.bind(*p_17_m00_axi_rready);
        p_17_m00_axi_rready->set_sv_netview_offsetfromdp(10981368);
        xsim_sc_channel<0, bool > *p_17_m00_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_17->m00_axi_aclk.bind(*p_17_m00_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_17_m00_axi_aclk);
        xsim_sc_channel<0, bool > *p_17_m00_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_17->m00_axi_aresetn.bind(*p_17_m00_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_17_m00_axi_aresetn);
        sc_inst_18 = new emu_sim_copy_kernel_0_0(".emu_wrapper.emu_i.static_region.sim_copy_kernel_0");
        sc_inst_18->xsim_set_dbg_index(293);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_18_s_axi_control_AWADDR = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_18->s_axi_control_AWADDR.bind(*p_18_s_axi_control_AWADDR);
        (*_glb_hdl_sc_channel_map).push_back(p_18_s_axi_control_AWADDR);
        xsim_sc_channel<0, bool > *p_18_s_axi_control_AWVALID = new xsim_sc_channel<0, bool >();
        sc_inst_18->s_axi_control_AWVALID.bind(*p_18_s_axi_control_AWVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_18_s_axi_control_AWVALID);
        xsim_sc_channel<0, bool > *p_18_s_axi_control_AWREADY = new xsim_sc_channel<0, bool >();
        sc_inst_18->s_axi_control_AWREADY.bind(*p_18_s_axi_control_AWREADY);
        p_18_s_axi_control_AWREADY->set_sv_netview_offsetfromdp(11027872);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_18_s_axi_control_WDATA = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_18->s_axi_control_WDATA.bind(*p_18_s_axi_control_WDATA);
        (*_glb_hdl_sc_channel_map).push_back(p_18_s_axi_control_WDATA);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_18_s_axi_control_WSTRB = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_18->s_axi_control_WSTRB.bind(*p_18_s_axi_control_WSTRB);
        (*_glb_hdl_sc_channel_map).push_back(p_18_s_axi_control_WSTRB);
        xsim_sc_channel<0, bool > *p_18_s_axi_control_WVALID = new xsim_sc_channel<0, bool >();
        sc_inst_18->s_axi_control_WVALID.bind(*p_18_s_axi_control_WVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_18_s_axi_control_WVALID);
        xsim_sc_channel<0, bool > *p_18_s_axi_control_WREADY = new xsim_sc_channel<0, bool >();
        sc_inst_18->s_axi_control_WREADY.bind(*p_18_s_axi_control_WREADY);
        p_18_s_axi_control_WREADY->set_sv_netview_offsetfromdp(11028096);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_18_s_axi_control_BRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_18->s_axi_control_BRESP.bind(*p_18_s_axi_control_BRESP);
        p_18_s_axi_control_BRESP->set_sv_netview_offsetfromdp(11028152);
        xsim_sc_channel<0, bool > *p_18_s_axi_control_BVALID = new xsim_sc_channel<0, bool >();
        sc_inst_18->s_axi_control_BVALID.bind(*p_18_s_axi_control_BVALID);
        p_18_s_axi_control_BVALID->set_sv_netview_offsetfromdp(11028208);
        xsim_sc_channel<0, bool > *p_18_s_axi_control_BREADY = new xsim_sc_channel<0, bool >();
        sc_inst_18->s_axi_control_BREADY.bind(*p_18_s_axi_control_BREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_18_s_axi_control_BREADY);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_18_s_axi_control_ARADDR = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_18->s_axi_control_ARADDR.bind(*p_18_s_axi_control_ARADDR);
        (*_glb_hdl_sc_channel_map).push_back(p_18_s_axi_control_ARADDR);
        xsim_sc_channel<0, bool > *p_18_s_axi_control_ARVALID = new xsim_sc_channel<0, bool >();
        sc_inst_18->s_axi_control_ARVALID.bind(*p_18_s_axi_control_ARVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_18_s_axi_control_ARVALID);
        xsim_sc_channel<0, bool > *p_18_s_axi_control_ARREADY = new xsim_sc_channel<0, bool >();
        sc_inst_18->s_axi_control_ARREADY.bind(*p_18_s_axi_control_ARREADY);
        p_18_s_axi_control_ARREADY->set_sv_netview_offsetfromdp(11028432);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_18_s_axi_control_RDATA = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_18->s_axi_control_RDATA.bind(*p_18_s_axi_control_RDATA);
        p_18_s_axi_control_RDATA->set_sv_netview_offsetfromdp(11028488);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_18_s_axi_control_RRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_18->s_axi_control_RRESP.bind(*p_18_s_axi_control_RRESP);
        p_18_s_axi_control_RRESP->set_sv_netview_offsetfromdp(11028544);
        xsim_sc_channel<0, bool > *p_18_s_axi_control_RVALID = new xsim_sc_channel<0, bool >();
        sc_inst_18->s_axi_control_RVALID.bind(*p_18_s_axi_control_RVALID);
        p_18_s_axi_control_RVALID->set_sv_netview_offsetfromdp(11028600);
        xsim_sc_channel<0, bool > *p_18_s_axi_control_RREADY = new xsim_sc_channel<0, bool >();
        sc_inst_18->s_axi_control_RREADY.bind(*p_18_s_axi_control_RREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_18_s_axi_control_RREADY);
        xsim_sc_channel<0, bool > *p_18_ap_clk = new xsim_sc_channel<0, bool >();
        sc_inst_18->ap_clk.bind(*p_18_ap_clk);
        (*_glb_hdl_sc_channel_map).push_back(p_18_ap_clk);
        xsim_sc_channel<0, bool > *p_18_ap_rst_n = new xsim_sc_channel<0, bool >();
        sc_inst_18->ap_rst_n.bind(*p_18_ap_rst_n);
        (*_glb_hdl_sc_channel_map).push_back(p_18_ap_rst_n);
        xsim_sc_channel<0, bool > *p_18_interrupt = new xsim_sc_channel<0, bool >();
        sc_inst_18->interrupt.bind(*p_18_interrupt);
        p_18_interrupt->set_sv_netview_offsetfromdp(11028824);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_18_m_axi_gmem_AWADDR = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_18->m_axi_gmem_AWADDR.bind(*p_18_m_axi_gmem_AWADDR);
        p_18_m_axi_gmem_AWADDR->set_sv_netview_offsetfromdp(11028880);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_18_m_axi_gmem_AWLEN = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_18->m_axi_gmem_AWLEN.bind(*p_18_m_axi_gmem_AWLEN);
        p_18_m_axi_gmem_AWLEN->set_sv_netview_offsetfromdp(11028936);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_18_m_axi_gmem_AWSIZE = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_18->m_axi_gmem_AWSIZE.bind(*p_18_m_axi_gmem_AWSIZE);
        p_18_m_axi_gmem_AWSIZE->set_sv_netview_offsetfromdp(11028992);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_18_m_axi_gmem_AWBURST = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_18->m_axi_gmem_AWBURST.bind(*p_18_m_axi_gmem_AWBURST);
        p_18_m_axi_gmem_AWBURST->set_sv_netview_offsetfromdp(11029048);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_18_m_axi_gmem_AWLOCK = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_18->m_axi_gmem_AWLOCK.bind(*p_18_m_axi_gmem_AWLOCK);
        p_18_m_axi_gmem_AWLOCK->set_sv_netview_offsetfromdp(11029104);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_18_m_axi_gmem_AWREGION = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_18->m_axi_gmem_AWREGION.bind(*p_18_m_axi_gmem_AWREGION);
        p_18_m_axi_gmem_AWREGION->set_sv_netview_offsetfromdp(11029160);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_18_m_axi_gmem_AWCACHE = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_18->m_axi_gmem_AWCACHE.bind(*p_18_m_axi_gmem_AWCACHE);
        p_18_m_axi_gmem_AWCACHE->set_sv_netview_offsetfromdp(11029216);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_18_m_axi_gmem_AWPROT = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_18->m_axi_gmem_AWPROT.bind(*p_18_m_axi_gmem_AWPROT);
        p_18_m_axi_gmem_AWPROT->set_sv_netview_offsetfromdp(11029272);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_18_m_axi_gmem_AWQOS = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_18->m_axi_gmem_AWQOS.bind(*p_18_m_axi_gmem_AWQOS);
        p_18_m_axi_gmem_AWQOS->set_sv_netview_offsetfromdp(11029328);
        xsim_sc_channel<0, bool > *p_18_m_axi_gmem_AWVALID = new xsim_sc_channel<0, bool >();
        sc_inst_18->m_axi_gmem_AWVALID.bind(*p_18_m_axi_gmem_AWVALID);
        p_18_m_axi_gmem_AWVALID->set_sv_netview_offsetfromdp(11029384);
        xsim_sc_channel<0, bool > *p_18_m_axi_gmem_AWREADY = new xsim_sc_channel<0, bool >();
        sc_inst_18->m_axi_gmem_AWREADY.bind(*p_18_m_axi_gmem_AWREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_18_m_axi_gmem_AWREADY);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_18_m_axi_gmem_WDATA = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_18->m_axi_gmem_WDATA.bind(*p_18_m_axi_gmem_WDATA);
        p_18_m_axi_gmem_WDATA->set_sv_netview_offsetfromdp(11029496);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_18_m_axi_gmem_WSTRB = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_18->m_axi_gmem_WSTRB.bind(*p_18_m_axi_gmem_WSTRB);
        p_18_m_axi_gmem_WSTRB->set_sv_netview_offsetfromdp(11029552);
        xsim_sc_channel<0, bool > *p_18_m_axi_gmem_WLAST = new xsim_sc_channel<0, bool >();
        sc_inst_18->m_axi_gmem_WLAST.bind(*p_18_m_axi_gmem_WLAST);
        p_18_m_axi_gmem_WLAST->set_sv_netview_offsetfromdp(11029608);
        xsim_sc_channel<0, bool > *p_18_m_axi_gmem_WVALID = new xsim_sc_channel<0, bool >();
        sc_inst_18->m_axi_gmem_WVALID.bind(*p_18_m_axi_gmem_WVALID);
        p_18_m_axi_gmem_WVALID->set_sv_netview_offsetfromdp(11029664);
        xsim_sc_channel<0, bool > *p_18_m_axi_gmem_WREADY = new xsim_sc_channel<0, bool >();
        sc_inst_18->m_axi_gmem_WREADY.bind(*p_18_m_axi_gmem_WREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_18_m_axi_gmem_WREADY);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_18_m_axi_gmem_BRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_18->m_axi_gmem_BRESP.bind(*p_18_m_axi_gmem_BRESP);
        (*_glb_hdl_sc_channel_map).push_back(p_18_m_axi_gmem_BRESP);
        xsim_sc_channel<0, bool > *p_18_m_axi_gmem_BVALID = new xsim_sc_channel<0, bool >();
        sc_inst_18->m_axi_gmem_BVALID.bind(*p_18_m_axi_gmem_BVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_18_m_axi_gmem_BVALID);
        xsim_sc_channel<0, bool > *p_18_m_axi_gmem_BREADY = new xsim_sc_channel<0, bool >();
        sc_inst_18->m_axi_gmem_BREADY.bind(*p_18_m_axi_gmem_BREADY);
        p_18_m_axi_gmem_BREADY->set_sv_netview_offsetfromdp(11029888);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_18_m_axi_gmem_ARADDR = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_18->m_axi_gmem_ARADDR.bind(*p_18_m_axi_gmem_ARADDR);
        p_18_m_axi_gmem_ARADDR->set_sv_netview_offsetfromdp(11029944);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_18_m_axi_gmem_ARLEN = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_18->m_axi_gmem_ARLEN.bind(*p_18_m_axi_gmem_ARLEN);
        p_18_m_axi_gmem_ARLEN->set_sv_netview_offsetfromdp(11030000);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_18_m_axi_gmem_ARSIZE = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_18->m_axi_gmem_ARSIZE.bind(*p_18_m_axi_gmem_ARSIZE);
        p_18_m_axi_gmem_ARSIZE->set_sv_netview_offsetfromdp(11030056);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_18_m_axi_gmem_ARBURST = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_18->m_axi_gmem_ARBURST.bind(*p_18_m_axi_gmem_ARBURST);
        p_18_m_axi_gmem_ARBURST->set_sv_netview_offsetfromdp(11030112);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_18_m_axi_gmem_ARLOCK = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_18->m_axi_gmem_ARLOCK.bind(*p_18_m_axi_gmem_ARLOCK);
        p_18_m_axi_gmem_ARLOCK->set_sv_netview_offsetfromdp(11030168);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_18_m_axi_gmem_ARREGION = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_18->m_axi_gmem_ARREGION.bind(*p_18_m_axi_gmem_ARREGION);
        p_18_m_axi_gmem_ARREGION->set_sv_netview_offsetfromdp(11030224);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_18_m_axi_gmem_ARCACHE = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_18->m_axi_gmem_ARCACHE.bind(*p_18_m_axi_gmem_ARCACHE);
        p_18_m_axi_gmem_ARCACHE->set_sv_netview_offsetfromdp(11030280);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_18_m_axi_gmem_ARPROT = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_18->m_axi_gmem_ARPROT.bind(*p_18_m_axi_gmem_ARPROT);
        p_18_m_axi_gmem_ARPROT->set_sv_netview_offsetfromdp(11030336);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_18_m_axi_gmem_ARQOS = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_18->m_axi_gmem_ARQOS.bind(*p_18_m_axi_gmem_ARQOS);
        p_18_m_axi_gmem_ARQOS->set_sv_netview_offsetfromdp(11030392);
        xsim_sc_channel<0, bool > *p_18_m_axi_gmem_ARVALID = new xsim_sc_channel<0, bool >();
        sc_inst_18->m_axi_gmem_ARVALID.bind(*p_18_m_axi_gmem_ARVALID);
        p_18_m_axi_gmem_ARVALID->set_sv_netview_offsetfromdp(11030448);
        xsim_sc_channel<0, bool > *p_18_m_axi_gmem_ARREADY = new xsim_sc_channel<0, bool >();
        sc_inst_18->m_axi_gmem_ARREADY.bind(*p_18_m_axi_gmem_ARREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_18_m_axi_gmem_ARREADY);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_18_m_axi_gmem_RDATA = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_18->m_axi_gmem_RDATA.bind(*p_18_m_axi_gmem_RDATA);
        (*_glb_hdl_sc_channel_map).push_back(p_18_m_axi_gmem_RDATA);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_18_m_axi_gmem_RRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_18->m_axi_gmem_RRESP.bind(*p_18_m_axi_gmem_RRESP);
        (*_glb_hdl_sc_channel_map).push_back(p_18_m_axi_gmem_RRESP);
        xsim_sc_channel<0, bool > *p_18_m_axi_gmem_RLAST = new xsim_sc_channel<0, bool >();
        sc_inst_18->m_axi_gmem_RLAST.bind(*p_18_m_axi_gmem_RLAST);
        (*_glb_hdl_sc_channel_map).push_back(p_18_m_axi_gmem_RLAST);
        xsim_sc_channel<0, bool > *p_18_m_axi_gmem_RVALID = new xsim_sc_channel<0, bool >();
        sc_inst_18->m_axi_gmem_RVALID.bind(*p_18_m_axi_gmem_RVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_18_m_axi_gmem_RVALID);
        xsim_sc_channel<0, bool > *p_18_m_axi_gmem_RREADY = new xsim_sc_channel<0, bool >();
        sc_inst_18->m_axi_gmem_RREADY.bind(*p_18_m_axi_gmem_RREADY);
        p_18_m_axi_gmem_RREADY->set_sv_netview_offsetfromdp(11030784);
        sc_inst_19 = new emu_sim_copy_kernel_1_0(".emu_wrapper.emu_i.static_region.sim_copy_kernel_1");
        sc_inst_19->xsim_set_dbg_index(294);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_19_s_axi_control_AWADDR = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_19->s_axi_control_AWADDR.bind(*p_19_s_axi_control_AWADDR);
        (*_glb_hdl_sc_channel_map).push_back(p_19_s_axi_control_AWADDR);
        xsim_sc_channel<0, bool > *p_19_s_axi_control_AWVALID = new xsim_sc_channel<0, bool >();
        sc_inst_19->s_axi_control_AWVALID.bind(*p_19_s_axi_control_AWVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_19_s_axi_control_AWVALID);
        xsim_sc_channel<0, bool > *p_19_s_axi_control_AWREADY = new xsim_sc_channel<0, bool >();
        sc_inst_19->s_axi_control_AWREADY.bind(*p_19_s_axi_control_AWREADY);
        p_19_s_axi_control_AWREADY->set_sv_netview_offsetfromdp(11031000);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_19_s_axi_control_WDATA = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_19->s_axi_control_WDATA.bind(*p_19_s_axi_control_WDATA);
        (*_glb_hdl_sc_channel_map).push_back(p_19_s_axi_control_WDATA);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_19_s_axi_control_WSTRB = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_19->s_axi_control_WSTRB.bind(*p_19_s_axi_control_WSTRB);
        (*_glb_hdl_sc_channel_map).push_back(p_19_s_axi_control_WSTRB);
        xsim_sc_channel<0, bool > *p_19_s_axi_control_WVALID = new xsim_sc_channel<0, bool >();
        sc_inst_19->s_axi_control_WVALID.bind(*p_19_s_axi_control_WVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_19_s_axi_control_WVALID);
        xsim_sc_channel<0, bool > *p_19_s_axi_control_WREADY = new xsim_sc_channel<0, bool >();
        sc_inst_19->s_axi_control_WREADY.bind(*p_19_s_axi_control_WREADY);
        p_19_s_axi_control_WREADY->set_sv_netview_offsetfromdp(11031224);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_19_s_axi_control_BRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_19->s_axi_control_BRESP.bind(*p_19_s_axi_control_BRESP);
        p_19_s_axi_control_BRESP->set_sv_netview_offsetfromdp(11031280);
        xsim_sc_channel<0, bool > *p_19_s_axi_control_BVALID = new xsim_sc_channel<0, bool >();
        sc_inst_19->s_axi_control_BVALID.bind(*p_19_s_axi_control_BVALID);
        p_19_s_axi_control_BVALID->set_sv_netview_offsetfromdp(11031336);
        xsim_sc_channel<0, bool > *p_19_s_axi_control_BREADY = new xsim_sc_channel<0, bool >();
        sc_inst_19->s_axi_control_BREADY.bind(*p_19_s_axi_control_BREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_19_s_axi_control_BREADY);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_19_s_axi_control_ARADDR = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_19->s_axi_control_ARADDR.bind(*p_19_s_axi_control_ARADDR);
        (*_glb_hdl_sc_channel_map).push_back(p_19_s_axi_control_ARADDR);
        xsim_sc_channel<0, bool > *p_19_s_axi_control_ARVALID = new xsim_sc_channel<0, bool >();
        sc_inst_19->s_axi_control_ARVALID.bind(*p_19_s_axi_control_ARVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_19_s_axi_control_ARVALID);
        xsim_sc_channel<0, bool > *p_19_s_axi_control_ARREADY = new xsim_sc_channel<0, bool >();
        sc_inst_19->s_axi_control_ARREADY.bind(*p_19_s_axi_control_ARREADY);
        p_19_s_axi_control_ARREADY->set_sv_netview_offsetfromdp(11031560);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_19_s_axi_control_RDATA = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_19->s_axi_control_RDATA.bind(*p_19_s_axi_control_RDATA);
        p_19_s_axi_control_RDATA->set_sv_netview_offsetfromdp(11031616);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_19_s_axi_control_RRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_19->s_axi_control_RRESP.bind(*p_19_s_axi_control_RRESP);
        p_19_s_axi_control_RRESP->set_sv_netview_offsetfromdp(11031672);
        xsim_sc_channel<0, bool > *p_19_s_axi_control_RVALID = new xsim_sc_channel<0, bool >();
        sc_inst_19->s_axi_control_RVALID.bind(*p_19_s_axi_control_RVALID);
        p_19_s_axi_control_RVALID->set_sv_netview_offsetfromdp(11031728);
        xsim_sc_channel<0, bool > *p_19_s_axi_control_RREADY = new xsim_sc_channel<0, bool >();
        sc_inst_19->s_axi_control_RREADY.bind(*p_19_s_axi_control_RREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_19_s_axi_control_RREADY);
        xsim_sc_channel<0, bool > *p_19_ap_clk = new xsim_sc_channel<0, bool >();
        sc_inst_19->ap_clk.bind(*p_19_ap_clk);
        (*_glb_hdl_sc_channel_map).push_back(p_19_ap_clk);
        xsim_sc_channel<0, bool > *p_19_ap_rst_n = new xsim_sc_channel<0, bool >();
        sc_inst_19->ap_rst_n.bind(*p_19_ap_rst_n);
        (*_glb_hdl_sc_channel_map).push_back(p_19_ap_rst_n);
        xsim_sc_channel<0, bool > *p_19_interrupt = new xsim_sc_channel<0, bool >();
        sc_inst_19->interrupt.bind(*p_19_interrupt);
        p_19_interrupt->set_sv_netview_offsetfromdp(11031952);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_19_m_axi_gmem_AWADDR = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_19->m_axi_gmem_AWADDR.bind(*p_19_m_axi_gmem_AWADDR);
        p_19_m_axi_gmem_AWADDR->set_sv_netview_offsetfromdp(11032008);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_19_m_axi_gmem_AWLEN = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_19->m_axi_gmem_AWLEN.bind(*p_19_m_axi_gmem_AWLEN);
        p_19_m_axi_gmem_AWLEN->set_sv_netview_offsetfromdp(11032064);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_19_m_axi_gmem_AWSIZE = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_19->m_axi_gmem_AWSIZE.bind(*p_19_m_axi_gmem_AWSIZE);
        p_19_m_axi_gmem_AWSIZE->set_sv_netview_offsetfromdp(11032120);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_19_m_axi_gmem_AWBURST = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_19->m_axi_gmem_AWBURST.bind(*p_19_m_axi_gmem_AWBURST);
        p_19_m_axi_gmem_AWBURST->set_sv_netview_offsetfromdp(11032176);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_19_m_axi_gmem_AWLOCK = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_19->m_axi_gmem_AWLOCK.bind(*p_19_m_axi_gmem_AWLOCK);
        p_19_m_axi_gmem_AWLOCK->set_sv_netview_offsetfromdp(11032232);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_19_m_axi_gmem_AWREGION = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_19->m_axi_gmem_AWREGION.bind(*p_19_m_axi_gmem_AWREGION);
        p_19_m_axi_gmem_AWREGION->set_sv_netview_offsetfromdp(11032288);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_19_m_axi_gmem_AWCACHE = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_19->m_axi_gmem_AWCACHE.bind(*p_19_m_axi_gmem_AWCACHE);
        p_19_m_axi_gmem_AWCACHE->set_sv_netview_offsetfromdp(11032344);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_19_m_axi_gmem_AWPROT = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_19->m_axi_gmem_AWPROT.bind(*p_19_m_axi_gmem_AWPROT);
        p_19_m_axi_gmem_AWPROT->set_sv_netview_offsetfromdp(11032400);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_19_m_axi_gmem_AWQOS = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_19->m_axi_gmem_AWQOS.bind(*p_19_m_axi_gmem_AWQOS);
        p_19_m_axi_gmem_AWQOS->set_sv_netview_offsetfromdp(11032456);
        xsim_sc_channel<0, bool > *p_19_m_axi_gmem_AWVALID = new xsim_sc_channel<0, bool >();
        sc_inst_19->m_axi_gmem_AWVALID.bind(*p_19_m_axi_gmem_AWVALID);
        p_19_m_axi_gmem_AWVALID->set_sv_netview_offsetfromdp(11032512);
        xsim_sc_channel<0, bool > *p_19_m_axi_gmem_AWREADY = new xsim_sc_channel<0, bool >();
        sc_inst_19->m_axi_gmem_AWREADY.bind(*p_19_m_axi_gmem_AWREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_19_m_axi_gmem_AWREADY);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_19_m_axi_gmem_WDATA = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_19->m_axi_gmem_WDATA.bind(*p_19_m_axi_gmem_WDATA);
        p_19_m_axi_gmem_WDATA->set_sv_netview_offsetfromdp(11032624);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_19_m_axi_gmem_WSTRB = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_19->m_axi_gmem_WSTRB.bind(*p_19_m_axi_gmem_WSTRB);
        p_19_m_axi_gmem_WSTRB->set_sv_netview_offsetfromdp(11032680);
        xsim_sc_channel<0, bool > *p_19_m_axi_gmem_WLAST = new xsim_sc_channel<0, bool >();
        sc_inst_19->m_axi_gmem_WLAST.bind(*p_19_m_axi_gmem_WLAST);
        p_19_m_axi_gmem_WLAST->set_sv_netview_offsetfromdp(11032736);
        xsim_sc_channel<0, bool > *p_19_m_axi_gmem_WVALID = new xsim_sc_channel<0, bool >();
        sc_inst_19->m_axi_gmem_WVALID.bind(*p_19_m_axi_gmem_WVALID);
        p_19_m_axi_gmem_WVALID->set_sv_netview_offsetfromdp(11032792);
        xsim_sc_channel<0, bool > *p_19_m_axi_gmem_WREADY = new xsim_sc_channel<0, bool >();
        sc_inst_19->m_axi_gmem_WREADY.bind(*p_19_m_axi_gmem_WREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_19_m_axi_gmem_WREADY);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_19_m_axi_gmem_BRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_19->m_axi_gmem_BRESP.bind(*p_19_m_axi_gmem_BRESP);
        (*_glb_hdl_sc_channel_map).push_back(p_19_m_axi_gmem_BRESP);
        xsim_sc_channel<0, bool > *p_19_m_axi_gmem_BVALID = new xsim_sc_channel<0, bool >();
        sc_inst_19->m_axi_gmem_BVALID.bind(*p_19_m_axi_gmem_BVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_19_m_axi_gmem_BVALID);
        xsim_sc_channel<0, bool > *p_19_m_axi_gmem_BREADY = new xsim_sc_channel<0, bool >();
        sc_inst_19->m_axi_gmem_BREADY.bind(*p_19_m_axi_gmem_BREADY);
        p_19_m_axi_gmem_BREADY->set_sv_netview_offsetfromdp(11033016);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_19_m_axi_gmem_ARADDR = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_19->m_axi_gmem_ARADDR.bind(*p_19_m_axi_gmem_ARADDR);
        p_19_m_axi_gmem_ARADDR->set_sv_netview_offsetfromdp(11033072);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_19_m_axi_gmem_ARLEN = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_19->m_axi_gmem_ARLEN.bind(*p_19_m_axi_gmem_ARLEN);
        p_19_m_axi_gmem_ARLEN->set_sv_netview_offsetfromdp(11033128);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_19_m_axi_gmem_ARSIZE = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_19->m_axi_gmem_ARSIZE.bind(*p_19_m_axi_gmem_ARSIZE);
        p_19_m_axi_gmem_ARSIZE->set_sv_netview_offsetfromdp(11033184);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_19_m_axi_gmem_ARBURST = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_19->m_axi_gmem_ARBURST.bind(*p_19_m_axi_gmem_ARBURST);
        p_19_m_axi_gmem_ARBURST->set_sv_netview_offsetfromdp(11033240);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_19_m_axi_gmem_ARLOCK = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_19->m_axi_gmem_ARLOCK.bind(*p_19_m_axi_gmem_ARLOCK);
        p_19_m_axi_gmem_ARLOCK->set_sv_netview_offsetfromdp(11033296);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_19_m_axi_gmem_ARREGION = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_19->m_axi_gmem_ARREGION.bind(*p_19_m_axi_gmem_ARREGION);
        p_19_m_axi_gmem_ARREGION->set_sv_netview_offsetfromdp(11033352);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_19_m_axi_gmem_ARCACHE = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_19->m_axi_gmem_ARCACHE.bind(*p_19_m_axi_gmem_ARCACHE);
        p_19_m_axi_gmem_ARCACHE->set_sv_netview_offsetfromdp(11033408);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_19_m_axi_gmem_ARPROT = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_19->m_axi_gmem_ARPROT.bind(*p_19_m_axi_gmem_ARPROT);
        p_19_m_axi_gmem_ARPROT->set_sv_netview_offsetfromdp(11033464);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_19_m_axi_gmem_ARQOS = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_19->m_axi_gmem_ARQOS.bind(*p_19_m_axi_gmem_ARQOS);
        p_19_m_axi_gmem_ARQOS->set_sv_netview_offsetfromdp(11033520);
        xsim_sc_channel<0, bool > *p_19_m_axi_gmem_ARVALID = new xsim_sc_channel<0, bool >();
        sc_inst_19->m_axi_gmem_ARVALID.bind(*p_19_m_axi_gmem_ARVALID);
        p_19_m_axi_gmem_ARVALID->set_sv_netview_offsetfromdp(11033576);
        xsim_sc_channel<0, bool > *p_19_m_axi_gmem_ARREADY = new xsim_sc_channel<0, bool >();
        sc_inst_19->m_axi_gmem_ARREADY.bind(*p_19_m_axi_gmem_ARREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_19_m_axi_gmem_ARREADY);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_19_m_axi_gmem_RDATA = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_19->m_axi_gmem_RDATA.bind(*p_19_m_axi_gmem_RDATA);
        (*_glb_hdl_sc_channel_map).push_back(p_19_m_axi_gmem_RDATA);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_19_m_axi_gmem_RRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_19->m_axi_gmem_RRESP.bind(*p_19_m_axi_gmem_RRESP);
        (*_glb_hdl_sc_channel_map).push_back(p_19_m_axi_gmem_RRESP);
        xsim_sc_channel<0, bool > *p_19_m_axi_gmem_RLAST = new xsim_sc_channel<0, bool >();
        sc_inst_19->m_axi_gmem_RLAST.bind(*p_19_m_axi_gmem_RLAST);
        (*_glb_hdl_sc_channel_map).push_back(p_19_m_axi_gmem_RLAST);
        xsim_sc_channel<0, bool > *p_19_m_axi_gmem_RVALID = new xsim_sc_channel<0, bool >();
        sc_inst_19->m_axi_gmem_RVALID.bind(*p_19_m_axi_gmem_RVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_19_m_axi_gmem_RVALID);
        xsim_sc_channel<0, bool > *p_19_m_axi_gmem_RREADY = new xsim_sc_channel<0, bool >();
        sc_inst_19->m_axi_gmem_RREADY.bind(*p_19_m_axi_gmem_RREADY);
        p_19_m_axi_gmem_RREADY->set_sv_netview_offsetfromdp(11033912);
        sc_inst_20 = new emu_sim_copy_kernel_2_0(".emu_wrapper.emu_i.static_region.sim_copy_kernel_2");
        sc_inst_20->xsim_set_dbg_index(295);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_20_s_axi_control_AWADDR = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_20->s_axi_control_AWADDR.bind(*p_20_s_axi_control_AWADDR);
        (*_glb_hdl_sc_channel_map).push_back(p_20_s_axi_control_AWADDR);
        xsim_sc_channel<0, bool > *p_20_s_axi_control_AWVALID = new xsim_sc_channel<0, bool >();
        sc_inst_20->s_axi_control_AWVALID.bind(*p_20_s_axi_control_AWVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_20_s_axi_control_AWVALID);
        xsim_sc_channel<0, bool > *p_20_s_axi_control_AWREADY = new xsim_sc_channel<0, bool >();
        sc_inst_20->s_axi_control_AWREADY.bind(*p_20_s_axi_control_AWREADY);
        p_20_s_axi_control_AWREADY->set_sv_netview_offsetfromdp(11034128);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_20_s_axi_control_WDATA = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_20->s_axi_control_WDATA.bind(*p_20_s_axi_control_WDATA);
        (*_glb_hdl_sc_channel_map).push_back(p_20_s_axi_control_WDATA);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_20_s_axi_control_WSTRB = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_20->s_axi_control_WSTRB.bind(*p_20_s_axi_control_WSTRB);
        (*_glb_hdl_sc_channel_map).push_back(p_20_s_axi_control_WSTRB);
        xsim_sc_channel<0, bool > *p_20_s_axi_control_WVALID = new xsim_sc_channel<0, bool >();
        sc_inst_20->s_axi_control_WVALID.bind(*p_20_s_axi_control_WVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_20_s_axi_control_WVALID);
        xsim_sc_channel<0, bool > *p_20_s_axi_control_WREADY = new xsim_sc_channel<0, bool >();
        sc_inst_20->s_axi_control_WREADY.bind(*p_20_s_axi_control_WREADY);
        p_20_s_axi_control_WREADY->set_sv_netview_offsetfromdp(11034352);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_20_s_axi_control_BRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_20->s_axi_control_BRESP.bind(*p_20_s_axi_control_BRESP);
        p_20_s_axi_control_BRESP->set_sv_netview_offsetfromdp(11034408);
        xsim_sc_channel<0, bool > *p_20_s_axi_control_BVALID = new xsim_sc_channel<0, bool >();
        sc_inst_20->s_axi_control_BVALID.bind(*p_20_s_axi_control_BVALID);
        p_20_s_axi_control_BVALID->set_sv_netview_offsetfromdp(11034464);
        xsim_sc_channel<0, bool > *p_20_s_axi_control_BREADY = new xsim_sc_channel<0, bool >();
        sc_inst_20->s_axi_control_BREADY.bind(*p_20_s_axi_control_BREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_20_s_axi_control_BREADY);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_20_s_axi_control_ARADDR = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_20->s_axi_control_ARADDR.bind(*p_20_s_axi_control_ARADDR);
        (*_glb_hdl_sc_channel_map).push_back(p_20_s_axi_control_ARADDR);
        xsim_sc_channel<0, bool > *p_20_s_axi_control_ARVALID = new xsim_sc_channel<0, bool >();
        sc_inst_20->s_axi_control_ARVALID.bind(*p_20_s_axi_control_ARVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_20_s_axi_control_ARVALID);
        xsim_sc_channel<0, bool > *p_20_s_axi_control_ARREADY = new xsim_sc_channel<0, bool >();
        sc_inst_20->s_axi_control_ARREADY.bind(*p_20_s_axi_control_ARREADY);
        p_20_s_axi_control_ARREADY->set_sv_netview_offsetfromdp(11034688);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_20_s_axi_control_RDATA = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_20->s_axi_control_RDATA.bind(*p_20_s_axi_control_RDATA);
        p_20_s_axi_control_RDATA->set_sv_netview_offsetfromdp(11034744);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_20_s_axi_control_RRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_20->s_axi_control_RRESP.bind(*p_20_s_axi_control_RRESP);
        p_20_s_axi_control_RRESP->set_sv_netview_offsetfromdp(11034800);
        xsim_sc_channel<0, bool > *p_20_s_axi_control_RVALID = new xsim_sc_channel<0, bool >();
        sc_inst_20->s_axi_control_RVALID.bind(*p_20_s_axi_control_RVALID);
        p_20_s_axi_control_RVALID->set_sv_netview_offsetfromdp(11034856);
        xsim_sc_channel<0, bool > *p_20_s_axi_control_RREADY = new xsim_sc_channel<0, bool >();
        sc_inst_20->s_axi_control_RREADY.bind(*p_20_s_axi_control_RREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_20_s_axi_control_RREADY);
        xsim_sc_channel<0, bool > *p_20_ap_clk = new xsim_sc_channel<0, bool >();
        sc_inst_20->ap_clk.bind(*p_20_ap_clk);
        (*_glb_hdl_sc_channel_map).push_back(p_20_ap_clk);
        xsim_sc_channel<0, bool > *p_20_ap_rst_n = new xsim_sc_channel<0, bool >();
        sc_inst_20->ap_rst_n.bind(*p_20_ap_rst_n);
        (*_glb_hdl_sc_channel_map).push_back(p_20_ap_rst_n);
        xsim_sc_channel<0, bool > *p_20_interrupt = new xsim_sc_channel<0, bool >();
        sc_inst_20->interrupt.bind(*p_20_interrupt);
        p_20_interrupt->set_sv_netview_offsetfromdp(11035080);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_20_m_axi_gmem_AWADDR = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_20->m_axi_gmem_AWADDR.bind(*p_20_m_axi_gmem_AWADDR);
        p_20_m_axi_gmem_AWADDR->set_sv_netview_offsetfromdp(11035136);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_20_m_axi_gmem_AWLEN = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_20->m_axi_gmem_AWLEN.bind(*p_20_m_axi_gmem_AWLEN);
        p_20_m_axi_gmem_AWLEN->set_sv_netview_offsetfromdp(11035192);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_20_m_axi_gmem_AWSIZE = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_20->m_axi_gmem_AWSIZE.bind(*p_20_m_axi_gmem_AWSIZE);
        p_20_m_axi_gmem_AWSIZE->set_sv_netview_offsetfromdp(11035248);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_20_m_axi_gmem_AWBURST = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_20->m_axi_gmem_AWBURST.bind(*p_20_m_axi_gmem_AWBURST);
        p_20_m_axi_gmem_AWBURST->set_sv_netview_offsetfromdp(11035304);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_20_m_axi_gmem_AWLOCK = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_20->m_axi_gmem_AWLOCK.bind(*p_20_m_axi_gmem_AWLOCK);
        p_20_m_axi_gmem_AWLOCK->set_sv_netview_offsetfromdp(11035360);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_20_m_axi_gmem_AWREGION = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_20->m_axi_gmem_AWREGION.bind(*p_20_m_axi_gmem_AWREGION);
        p_20_m_axi_gmem_AWREGION->set_sv_netview_offsetfromdp(11035416);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_20_m_axi_gmem_AWCACHE = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_20->m_axi_gmem_AWCACHE.bind(*p_20_m_axi_gmem_AWCACHE);
        p_20_m_axi_gmem_AWCACHE->set_sv_netview_offsetfromdp(11035472);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_20_m_axi_gmem_AWPROT = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_20->m_axi_gmem_AWPROT.bind(*p_20_m_axi_gmem_AWPROT);
        p_20_m_axi_gmem_AWPROT->set_sv_netview_offsetfromdp(11035528);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_20_m_axi_gmem_AWQOS = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_20->m_axi_gmem_AWQOS.bind(*p_20_m_axi_gmem_AWQOS);
        p_20_m_axi_gmem_AWQOS->set_sv_netview_offsetfromdp(11035584);
        xsim_sc_channel<0, bool > *p_20_m_axi_gmem_AWVALID = new xsim_sc_channel<0, bool >();
        sc_inst_20->m_axi_gmem_AWVALID.bind(*p_20_m_axi_gmem_AWVALID);
        p_20_m_axi_gmem_AWVALID->set_sv_netview_offsetfromdp(11035640);
        xsim_sc_channel<0, bool > *p_20_m_axi_gmem_AWREADY = new xsim_sc_channel<0, bool >();
        sc_inst_20->m_axi_gmem_AWREADY.bind(*p_20_m_axi_gmem_AWREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_20_m_axi_gmem_AWREADY);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_20_m_axi_gmem_WDATA = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_20->m_axi_gmem_WDATA.bind(*p_20_m_axi_gmem_WDATA);
        p_20_m_axi_gmem_WDATA->set_sv_netview_offsetfromdp(11035752);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_20_m_axi_gmem_WSTRB = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_20->m_axi_gmem_WSTRB.bind(*p_20_m_axi_gmem_WSTRB);
        p_20_m_axi_gmem_WSTRB->set_sv_netview_offsetfromdp(11035808);
        xsim_sc_channel<0, bool > *p_20_m_axi_gmem_WLAST = new xsim_sc_channel<0, bool >();
        sc_inst_20->m_axi_gmem_WLAST.bind(*p_20_m_axi_gmem_WLAST);
        p_20_m_axi_gmem_WLAST->set_sv_netview_offsetfromdp(11035864);
        xsim_sc_channel<0, bool > *p_20_m_axi_gmem_WVALID = new xsim_sc_channel<0, bool >();
        sc_inst_20->m_axi_gmem_WVALID.bind(*p_20_m_axi_gmem_WVALID);
        p_20_m_axi_gmem_WVALID->set_sv_netview_offsetfromdp(11035920);
        xsim_sc_channel<0, bool > *p_20_m_axi_gmem_WREADY = new xsim_sc_channel<0, bool >();
        sc_inst_20->m_axi_gmem_WREADY.bind(*p_20_m_axi_gmem_WREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_20_m_axi_gmem_WREADY);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_20_m_axi_gmem_BRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_20->m_axi_gmem_BRESP.bind(*p_20_m_axi_gmem_BRESP);
        (*_glb_hdl_sc_channel_map).push_back(p_20_m_axi_gmem_BRESP);
        xsim_sc_channel<0, bool > *p_20_m_axi_gmem_BVALID = new xsim_sc_channel<0, bool >();
        sc_inst_20->m_axi_gmem_BVALID.bind(*p_20_m_axi_gmem_BVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_20_m_axi_gmem_BVALID);
        xsim_sc_channel<0, bool > *p_20_m_axi_gmem_BREADY = new xsim_sc_channel<0, bool >();
        sc_inst_20->m_axi_gmem_BREADY.bind(*p_20_m_axi_gmem_BREADY);
        p_20_m_axi_gmem_BREADY->set_sv_netview_offsetfromdp(11036144);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_20_m_axi_gmem_ARADDR = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_20->m_axi_gmem_ARADDR.bind(*p_20_m_axi_gmem_ARADDR);
        p_20_m_axi_gmem_ARADDR->set_sv_netview_offsetfromdp(11036200);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_20_m_axi_gmem_ARLEN = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_20->m_axi_gmem_ARLEN.bind(*p_20_m_axi_gmem_ARLEN);
        p_20_m_axi_gmem_ARLEN->set_sv_netview_offsetfromdp(11036256);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_20_m_axi_gmem_ARSIZE = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_20->m_axi_gmem_ARSIZE.bind(*p_20_m_axi_gmem_ARSIZE);
        p_20_m_axi_gmem_ARSIZE->set_sv_netview_offsetfromdp(11036312);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_20_m_axi_gmem_ARBURST = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_20->m_axi_gmem_ARBURST.bind(*p_20_m_axi_gmem_ARBURST);
        p_20_m_axi_gmem_ARBURST->set_sv_netview_offsetfromdp(11036368);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_20_m_axi_gmem_ARLOCK = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_20->m_axi_gmem_ARLOCK.bind(*p_20_m_axi_gmem_ARLOCK);
        p_20_m_axi_gmem_ARLOCK->set_sv_netview_offsetfromdp(11036424);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_20_m_axi_gmem_ARREGION = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_20->m_axi_gmem_ARREGION.bind(*p_20_m_axi_gmem_ARREGION);
        p_20_m_axi_gmem_ARREGION->set_sv_netview_offsetfromdp(11036480);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_20_m_axi_gmem_ARCACHE = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_20->m_axi_gmem_ARCACHE.bind(*p_20_m_axi_gmem_ARCACHE);
        p_20_m_axi_gmem_ARCACHE->set_sv_netview_offsetfromdp(11036536);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_20_m_axi_gmem_ARPROT = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_20->m_axi_gmem_ARPROT.bind(*p_20_m_axi_gmem_ARPROT);
        p_20_m_axi_gmem_ARPROT->set_sv_netview_offsetfromdp(11036592);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_20_m_axi_gmem_ARQOS = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_20->m_axi_gmem_ARQOS.bind(*p_20_m_axi_gmem_ARQOS);
        p_20_m_axi_gmem_ARQOS->set_sv_netview_offsetfromdp(11036648);
        xsim_sc_channel<0, bool > *p_20_m_axi_gmem_ARVALID = new xsim_sc_channel<0, bool >();
        sc_inst_20->m_axi_gmem_ARVALID.bind(*p_20_m_axi_gmem_ARVALID);
        p_20_m_axi_gmem_ARVALID->set_sv_netview_offsetfromdp(11036704);
        xsim_sc_channel<0, bool > *p_20_m_axi_gmem_ARREADY = new xsim_sc_channel<0, bool >();
        sc_inst_20->m_axi_gmem_ARREADY.bind(*p_20_m_axi_gmem_ARREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_20_m_axi_gmem_ARREADY);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_20_m_axi_gmem_RDATA = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_20->m_axi_gmem_RDATA.bind(*p_20_m_axi_gmem_RDATA);
        (*_glb_hdl_sc_channel_map).push_back(p_20_m_axi_gmem_RDATA);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_20_m_axi_gmem_RRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_20->m_axi_gmem_RRESP.bind(*p_20_m_axi_gmem_RRESP);
        (*_glb_hdl_sc_channel_map).push_back(p_20_m_axi_gmem_RRESP);
        xsim_sc_channel<0, bool > *p_20_m_axi_gmem_RLAST = new xsim_sc_channel<0, bool >();
        sc_inst_20->m_axi_gmem_RLAST.bind(*p_20_m_axi_gmem_RLAST);
        (*_glb_hdl_sc_channel_map).push_back(p_20_m_axi_gmem_RLAST);
        xsim_sc_channel<0, bool > *p_20_m_axi_gmem_RVALID = new xsim_sc_channel<0, bool >();
        sc_inst_20->m_axi_gmem_RVALID.bind(*p_20_m_axi_gmem_RVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_20_m_axi_gmem_RVALID);
        xsim_sc_channel<0, bool > *p_20_m_axi_gmem_RREADY = new xsim_sc_channel<0, bool >();
        sc_inst_20->m_axi_gmem_RREADY.bind(*p_20_m_axi_gmem_RREADY);
        p_20_m_axi_gmem_RREADY->set_sv_netview_offsetfromdp(11037040);
        sc_inst_21 = new emu_sim_copy_kernel_3_0(".emu_wrapper.emu_i.static_region.sim_copy_kernel_3");
        sc_inst_21->xsim_set_dbg_index(296);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_21_s_axi_control_AWADDR = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_21->s_axi_control_AWADDR.bind(*p_21_s_axi_control_AWADDR);
        (*_glb_hdl_sc_channel_map).push_back(p_21_s_axi_control_AWADDR);
        xsim_sc_channel<0, bool > *p_21_s_axi_control_AWVALID = new xsim_sc_channel<0, bool >();
        sc_inst_21->s_axi_control_AWVALID.bind(*p_21_s_axi_control_AWVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_21_s_axi_control_AWVALID);
        xsim_sc_channel<0, bool > *p_21_s_axi_control_AWREADY = new xsim_sc_channel<0, bool >();
        sc_inst_21->s_axi_control_AWREADY.bind(*p_21_s_axi_control_AWREADY);
        p_21_s_axi_control_AWREADY->set_sv_netview_offsetfromdp(11037256);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_21_s_axi_control_WDATA = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_21->s_axi_control_WDATA.bind(*p_21_s_axi_control_WDATA);
        (*_glb_hdl_sc_channel_map).push_back(p_21_s_axi_control_WDATA);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_21_s_axi_control_WSTRB = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_21->s_axi_control_WSTRB.bind(*p_21_s_axi_control_WSTRB);
        (*_glb_hdl_sc_channel_map).push_back(p_21_s_axi_control_WSTRB);
        xsim_sc_channel<0, bool > *p_21_s_axi_control_WVALID = new xsim_sc_channel<0, bool >();
        sc_inst_21->s_axi_control_WVALID.bind(*p_21_s_axi_control_WVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_21_s_axi_control_WVALID);
        xsim_sc_channel<0, bool > *p_21_s_axi_control_WREADY = new xsim_sc_channel<0, bool >();
        sc_inst_21->s_axi_control_WREADY.bind(*p_21_s_axi_control_WREADY);
        p_21_s_axi_control_WREADY->set_sv_netview_offsetfromdp(11037480);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_21_s_axi_control_BRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_21->s_axi_control_BRESP.bind(*p_21_s_axi_control_BRESP);
        p_21_s_axi_control_BRESP->set_sv_netview_offsetfromdp(11037536);
        xsim_sc_channel<0, bool > *p_21_s_axi_control_BVALID = new xsim_sc_channel<0, bool >();
        sc_inst_21->s_axi_control_BVALID.bind(*p_21_s_axi_control_BVALID);
        p_21_s_axi_control_BVALID->set_sv_netview_offsetfromdp(11037592);
        xsim_sc_channel<0, bool > *p_21_s_axi_control_BREADY = new xsim_sc_channel<0, bool >();
        sc_inst_21->s_axi_control_BREADY.bind(*p_21_s_axi_control_BREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_21_s_axi_control_BREADY);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_21_s_axi_control_ARADDR = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_21->s_axi_control_ARADDR.bind(*p_21_s_axi_control_ARADDR);
        (*_glb_hdl_sc_channel_map).push_back(p_21_s_axi_control_ARADDR);
        xsim_sc_channel<0, bool > *p_21_s_axi_control_ARVALID = new xsim_sc_channel<0, bool >();
        sc_inst_21->s_axi_control_ARVALID.bind(*p_21_s_axi_control_ARVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_21_s_axi_control_ARVALID);
        xsim_sc_channel<0, bool > *p_21_s_axi_control_ARREADY = new xsim_sc_channel<0, bool >();
        sc_inst_21->s_axi_control_ARREADY.bind(*p_21_s_axi_control_ARREADY);
        p_21_s_axi_control_ARREADY->set_sv_netview_offsetfromdp(11037816);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_21_s_axi_control_RDATA = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_21->s_axi_control_RDATA.bind(*p_21_s_axi_control_RDATA);
        p_21_s_axi_control_RDATA->set_sv_netview_offsetfromdp(11037872);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_21_s_axi_control_RRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_21->s_axi_control_RRESP.bind(*p_21_s_axi_control_RRESP);
        p_21_s_axi_control_RRESP->set_sv_netview_offsetfromdp(11037928);
        xsim_sc_channel<0, bool > *p_21_s_axi_control_RVALID = new xsim_sc_channel<0, bool >();
        sc_inst_21->s_axi_control_RVALID.bind(*p_21_s_axi_control_RVALID);
        p_21_s_axi_control_RVALID->set_sv_netview_offsetfromdp(11037984);
        xsim_sc_channel<0, bool > *p_21_s_axi_control_RREADY = new xsim_sc_channel<0, bool >();
        sc_inst_21->s_axi_control_RREADY.bind(*p_21_s_axi_control_RREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_21_s_axi_control_RREADY);
        xsim_sc_channel<0, bool > *p_21_ap_clk = new xsim_sc_channel<0, bool >();
        sc_inst_21->ap_clk.bind(*p_21_ap_clk);
        (*_glb_hdl_sc_channel_map).push_back(p_21_ap_clk);
        xsim_sc_channel<0, bool > *p_21_ap_rst_n = new xsim_sc_channel<0, bool >();
        sc_inst_21->ap_rst_n.bind(*p_21_ap_rst_n);
        (*_glb_hdl_sc_channel_map).push_back(p_21_ap_rst_n);
        xsim_sc_channel<0, bool > *p_21_interrupt = new xsim_sc_channel<0, bool >();
        sc_inst_21->interrupt.bind(*p_21_interrupt);
        p_21_interrupt->set_sv_netview_offsetfromdp(11038208);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_21_m_axi_gmem_AWADDR = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_21->m_axi_gmem_AWADDR.bind(*p_21_m_axi_gmem_AWADDR);
        p_21_m_axi_gmem_AWADDR->set_sv_netview_offsetfromdp(11038264);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_21_m_axi_gmem_AWLEN = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_21->m_axi_gmem_AWLEN.bind(*p_21_m_axi_gmem_AWLEN);
        p_21_m_axi_gmem_AWLEN->set_sv_netview_offsetfromdp(11038320);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_21_m_axi_gmem_AWSIZE = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_21->m_axi_gmem_AWSIZE.bind(*p_21_m_axi_gmem_AWSIZE);
        p_21_m_axi_gmem_AWSIZE->set_sv_netview_offsetfromdp(11038376);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_21_m_axi_gmem_AWBURST = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_21->m_axi_gmem_AWBURST.bind(*p_21_m_axi_gmem_AWBURST);
        p_21_m_axi_gmem_AWBURST->set_sv_netview_offsetfromdp(11038432);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_21_m_axi_gmem_AWLOCK = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_21->m_axi_gmem_AWLOCK.bind(*p_21_m_axi_gmem_AWLOCK);
        p_21_m_axi_gmem_AWLOCK->set_sv_netview_offsetfromdp(11038488);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_21_m_axi_gmem_AWREGION = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_21->m_axi_gmem_AWREGION.bind(*p_21_m_axi_gmem_AWREGION);
        p_21_m_axi_gmem_AWREGION->set_sv_netview_offsetfromdp(11038544);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_21_m_axi_gmem_AWCACHE = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_21->m_axi_gmem_AWCACHE.bind(*p_21_m_axi_gmem_AWCACHE);
        p_21_m_axi_gmem_AWCACHE->set_sv_netview_offsetfromdp(11038600);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_21_m_axi_gmem_AWPROT = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_21->m_axi_gmem_AWPROT.bind(*p_21_m_axi_gmem_AWPROT);
        p_21_m_axi_gmem_AWPROT->set_sv_netview_offsetfromdp(11038656);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_21_m_axi_gmem_AWQOS = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_21->m_axi_gmem_AWQOS.bind(*p_21_m_axi_gmem_AWQOS);
        p_21_m_axi_gmem_AWQOS->set_sv_netview_offsetfromdp(11038712);
        xsim_sc_channel<0, bool > *p_21_m_axi_gmem_AWVALID = new xsim_sc_channel<0, bool >();
        sc_inst_21->m_axi_gmem_AWVALID.bind(*p_21_m_axi_gmem_AWVALID);
        p_21_m_axi_gmem_AWVALID->set_sv_netview_offsetfromdp(11038768);
        xsim_sc_channel<0, bool > *p_21_m_axi_gmem_AWREADY = new xsim_sc_channel<0, bool >();
        sc_inst_21->m_axi_gmem_AWREADY.bind(*p_21_m_axi_gmem_AWREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_21_m_axi_gmem_AWREADY);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_21_m_axi_gmem_WDATA = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_21->m_axi_gmem_WDATA.bind(*p_21_m_axi_gmem_WDATA);
        p_21_m_axi_gmem_WDATA->set_sv_netview_offsetfromdp(11038880);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_21_m_axi_gmem_WSTRB = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_21->m_axi_gmem_WSTRB.bind(*p_21_m_axi_gmem_WSTRB);
        p_21_m_axi_gmem_WSTRB->set_sv_netview_offsetfromdp(11038936);
        xsim_sc_channel<0, bool > *p_21_m_axi_gmem_WLAST = new xsim_sc_channel<0, bool >();
        sc_inst_21->m_axi_gmem_WLAST.bind(*p_21_m_axi_gmem_WLAST);
        p_21_m_axi_gmem_WLAST->set_sv_netview_offsetfromdp(11038992);
        xsim_sc_channel<0, bool > *p_21_m_axi_gmem_WVALID = new xsim_sc_channel<0, bool >();
        sc_inst_21->m_axi_gmem_WVALID.bind(*p_21_m_axi_gmem_WVALID);
        p_21_m_axi_gmem_WVALID->set_sv_netview_offsetfromdp(11039048);
        xsim_sc_channel<0, bool > *p_21_m_axi_gmem_WREADY = new xsim_sc_channel<0, bool >();
        sc_inst_21->m_axi_gmem_WREADY.bind(*p_21_m_axi_gmem_WREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_21_m_axi_gmem_WREADY);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_21_m_axi_gmem_BRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_21->m_axi_gmem_BRESP.bind(*p_21_m_axi_gmem_BRESP);
        (*_glb_hdl_sc_channel_map).push_back(p_21_m_axi_gmem_BRESP);
        xsim_sc_channel<0, bool > *p_21_m_axi_gmem_BVALID = new xsim_sc_channel<0, bool >();
        sc_inst_21->m_axi_gmem_BVALID.bind(*p_21_m_axi_gmem_BVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_21_m_axi_gmem_BVALID);
        xsim_sc_channel<0, bool > *p_21_m_axi_gmem_BREADY = new xsim_sc_channel<0, bool >();
        sc_inst_21->m_axi_gmem_BREADY.bind(*p_21_m_axi_gmem_BREADY);
        p_21_m_axi_gmem_BREADY->set_sv_netview_offsetfromdp(11039272);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_21_m_axi_gmem_ARADDR = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_21->m_axi_gmem_ARADDR.bind(*p_21_m_axi_gmem_ARADDR);
        p_21_m_axi_gmem_ARADDR->set_sv_netview_offsetfromdp(11039328);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_21_m_axi_gmem_ARLEN = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_21->m_axi_gmem_ARLEN.bind(*p_21_m_axi_gmem_ARLEN);
        p_21_m_axi_gmem_ARLEN->set_sv_netview_offsetfromdp(11039384);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_21_m_axi_gmem_ARSIZE = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_21->m_axi_gmem_ARSIZE.bind(*p_21_m_axi_gmem_ARSIZE);
        p_21_m_axi_gmem_ARSIZE->set_sv_netview_offsetfromdp(11039440);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_21_m_axi_gmem_ARBURST = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_21->m_axi_gmem_ARBURST.bind(*p_21_m_axi_gmem_ARBURST);
        p_21_m_axi_gmem_ARBURST->set_sv_netview_offsetfromdp(11039496);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_21_m_axi_gmem_ARLOCK = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_21->m_axi_gmem_ARLOCK.bind(*p_21_m_axi_gmem_ARLOCK);
        p_21_m_axi_gmem_ARLOCK->set_sv_netview_offsetfromdp(11039552);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_21_m_axi_gmem_ARREGION = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_21->m_axi_gmem_ARREGION.bind(*p_21_m_axi_gmem_ARREGION);
        p_21_m_axi_gmem_ARREGION->set_sv_netview_offsetfromdp(11039608);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_21_m_axi_gmem_ARCACHE = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_21->m_axi_gmem_ARCACHE.bind(*p_21_m_axi_gmem_ARCACHE);
        p_21_m_axi_gmem_ARCACHE->set_sv_netview_offsetfromdp(11039664);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_21_m_axi_gmem_ARPROT = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_21->m_axi_gmem_ARPROT.bind(*p_21_m_axi_gmem_ARPROT);
        p_21_m_axi_gmem_ARPROT->set_sv_netview_offsetfromdp(11039720);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_21_m_axi_gmem_ARQOS = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_21->m_axi_gmem_ARQOS.bind(*p_21_m_axi_gmem_ARQOS);
        p_21_m_axi_gmem_ARQOS->set_sv_netview_offsetfromdp(11039776);
        xsim_sc_channel<0, bool > *p_21_m_axi_gmem_ARVALID = new xsim_sc_channel<0, bool >();
        sc_inst_21->m_axi_gmem_ARVALID.bind(*p_21_m_axi_gmem_ARVALID);
        p_21_m_axi_gmem_ARVALID->set_sv_netview_offsetfromdp(11039832);
        xsim_sc_channel<0, bool > *p_21_m_axi_gmem_ARREADY = new xsim_sc_channel<0, bool >();
        sc_inst_21->m_axi_gmem_ARREADY.bind(*p_21_m_axi_gmem_ARREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_21_m_axi_gmem_ARREADY);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_21_m_axi_gmem_RDATA = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_21->m_axi_gmem_RDATA.bind(*p_21_m_axi_gmem_RDATA);
        (*_glb_hdl_sc_channel_map).push_back(p_21_m_axi_gmem_RDATA);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_21_m_axi_gmem_RRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_21->m_axi_gmem_RRESP.bind(*p_21_m_axi_gmem_RRESP);
        (*_glb_hdl_sc_channel_map).push_back(p_21_m_axi_gmem_RRESP);
        xsim_sc_channel<0, bool > *p_21_m_axi_gmem_RLAST = new xsim_sc_channel<0, bool >();
        sc_inst_21->m_axi_gmem_RLAST.bind(*p_21_m_axi_gmem_RLAST);
        (*_glb_hdl_sc_channel_map).push_back(p_21_m_axi_gmem_RLAST);
        xsim_sc_channel<0, bool > *p_21_m_axi_gmem_RVALID = new xsim_sc_channel<0, bool >();
        sc_inst_21->m_axi_gmem_RVALID.bind(*p_21_m_axi_gmem_RVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_21_m_axi_gmem_RVALID);
        xsim_sc_channel<0, bool > *p_21_m_axi_gmem_RREADY = new xsim_sc_channel<0, bool >();
        sc_inst_21->m_axi_gmem_RREADY.bind(*p_21_m_axi_gmem_RREADY);
        p_21_m_axi_gmem_RREADY->set_sv_netview_offsetfromdp(11040168);
        sc_inst_22 = new emu_sim_ddr_1_0(".emu_wrapper.emu_i.static_region.sim_ddr_1");
        sc_inst_22->xsim_set_dbg_index(297);
        xsim_sc_channel<0, bool > *p_22_c0_ui_clk = new xsim_sc_channel<0, bool >();
        sc_inst_22->c0_ui_clk.bind(*p_22_c0_ui_clk);
        (*_glb_hdl_sc_channel_map).push_back(p_22_c0_ui_clk);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_22_c0_ddr_saxi_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_22->c0_ddr_saxi_awid.bind(*p_22_c0_ddr_saxi_awid);
        (*_glb_hdl_sc_channel_map).push_back(p_22_c0_ddr_saxi_awid);
        xsim_sc_channel<34, sc_dt::sc_bv<34> > *p_22_c0_ddr_saxi_awaddr = new xsim_sc_channel<34, sc_dt::sc_bv<34> >();
        sc_inst_22->c0_ddr_saxi_awaddr.bind(*p_22_c0_ddr_saxi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_22_c0_ddr_saxi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_22_c0_ddr_saxi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_22->c0_ddr_saxi_awlen.bind(*p_22_c0_ddr_saxi_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_22_c0_ddr_saxi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_22_c0_ddr_saxi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_22->c0_ddr_saxi_awsize.bind(*p_22_c0_ddr_saxi_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_22_c0_ddr_saxi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_22_c0_ddr_saxi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_22->c0_ddr_saxi_awburst.bind(*p_22_c0_ddr_saxi_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_22_c0_ddr_saxi_awburst);
        xsim_sc_channel<0, bool > *p_22_c0_ddr_saxi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_22->c0_ddr_saxi_awlock.bind(*p_22_c0_ddr_saxi_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_22_c0_ddr_saxi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_22_c0_ddr_saxi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_22->c0_ddr_saxi_awcache.bind(*p_22_c0_ddr_saxi_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_22_c0_ddr_saxi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_22_c0_ddr_saxi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_22->c0_ddr_saxi_awprot.bind(*p_22_c0_ddr_saxi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_22_c0_ddr_saxi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_22_c0_ddr_saxi_awregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_22->c0_ddr_saxi_awregion.bind(*p_22_c0_ddr_saxi_awregion);
        (*_glb_hdl_sc_channel_map).push_back(p_22_c0_ddr_saxi_awregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_22_c0_ddr_saxi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_22->c0_ddr_saxi_awqos.bind(*p_22_c0_ddr_saxi_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_22_c0_ddr_saxi_awqos);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_22_c0_ddr_saxi_awuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_22->c0_ddr_saxi_awuser.bind(*p_22_c0_ddr_saxi_awuser);
        (*_glb_hdl_sc_channel_map).push_back(p_22_c0_ddr_saxi_awuser);
        xsim_sc_channel<0, bool > *p_22_c0_ddr_saxi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_22->c0_ddr_saxi_awvalid.bind(*p_22_c0_ddr_saxi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_22_c0_ddr_saxi_awvalid);
        xsim_sc_channel<0, bool > *p_22_c0_ddr_saxi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_22->c0_ddr_saxi_awready.bind(*p_22_c0_ddr_saxi_awready);
        p_22_c0_ddr_saxi_awready->set_sv_netview_offsetfromdp(11041000);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_22_c0_ddr_saxi_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_22->c0_ddr_saxi_wdata.bind(*p_22_c0_ddr_saxi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_22_c0_ddr_saxi_wdata);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_22_c0_ddr_saxi_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_22->c0_ddr_saxi_wstrb.bind(*p_22_c0_ddr_saxi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_22_c0_ddr_saxi_wstrb);
        xsim_sc_channel<0, bool > *p_22_c0_ddr_saxi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_22->c0_ddr_saxi_wlast.bind(*p_22_c0_ddr_saxi_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_22_c0_ddr_saxi_wlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_22_c0_ddr_saxi_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_22->c0_ddr_saxi_wuser.bind(*p_22_c0_ddr_saxi_wuser);
        (*_glb_hdl_sc_channel_map).push_back(p_22_c0_ddr_saxi_wuser);
        xsim_sc_channel<0, bool > *p_22_c0_ddr_saxi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_22->c0_ddr_saxi_wvalid.bind(*p_22_c0_ddr_saxi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_22_c0_ddr_saxi_wvalid);
        xsim_sc_channel<0, bool > *p_22_c0_ddr_saxi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_22->c0_ddr_saxi_wready.bind(*p_22_c0_ddr_saxi_wready);
        p_22_c0_ddr_saxi_wready->set_sv_netview_offsetfromdp(11041336);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_22_c0_ddr_saxi_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_22->c0_ddr_saxi_bid.bind(*p_22_c0_ddr_saxi_bid);
        p_22_c0_ddr_saxi_bid->set_sv_netview_offsetfromdp(11041392);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_22_c0_ddr_saxi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_22->c0_ddr_saxi_bresp.bind(*p_22_c0_ddr_saxi_bresp);
        p_22_c0_ddr_saxi_bresp->set_sv_netview_offsetfromdp(11041448);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_22_c0_ddr_saxi_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_22->c0_ddr_saxi_buser.bind(*p_22_c0_ddr_saxi_buser);
        p_22_c0_ddr_saxi_buser->set_sv_netview_offsetfromdp(11041504);
        xsim_sc_channel<0, bool > *p_22_c0_ddr_saxi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_22->c0_ddr_saxi_bvalid.bind(*p_22_c0_ddr_saxi_bvalid);
        p_22_c0_ddr_saxi_bvalid->set_sv_netview_offsetfromdp(11041560);
        xsim_sc_channel<0, bool > *p_22_c0_ddr_saxi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_22->c0_ddr_saxi_bready.bind(*p_22_c0_ddr_saxi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_22_c0_ddr_saxi_bready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_22_c0_ddr_saxi_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_22->c0_ddr_saxi_arid.bind(*p_22_c0_ddr_saxi_arid);
        (*_glb_hdl_sc_channel_map).push_back(p_22_c0_ddr_saxi_arid);
        xsim_sc_channel<34, sc_dt::sc_bv<34> > *p_22_c0_ddr_saxi_araddr = new xsim_sc_channel<34, sc_dt::sc_bv<34> >();
        sc_inst_22->c0_ddr_saxi_araddr.bind(*p_22_c0_ddr_saxi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_22_c0_ddr_saxi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_22_c0_ddr_saxi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_22->c0_ddr_saxi_arlen.bind(*p_22_c0_ddr_saxi_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_22_c0_ddr_saxi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_22_c0_ddr_saxi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_22->c0_ddr_saxi_arsize.bind(*p_22_c0_ddr_saxi_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_22_c0_ddr_saxi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_22_c0_ddr_saxi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_22->c0_ddr_saxi_arburst.bind(*p_22_c0_ddr_saxi_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_22_c0_ddr_saxi_arburst);
        xsim_sc_channel<0, bool > *p_22_c0_ddr_saxi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_22->c0_ddr_saxi_arlock.bind(*p_22_c0_ddr_saxi_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_22_c0_ddr_saxi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_22_c0_ddr_saxi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_22->c0_ddr_saxi_arcache.bind(*p_22_c0_ddr_saxi_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_22_c0_ddr_saxi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_22_c0_ddr_saxi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_22->c0_ddr_saxi_arprot.bind(*p_22_c0_ddr_saxi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_22_c0_ddr_saxi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_22_c0_ddr_saxi_arregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_22->c0_ddr_saxi_arregion.bind(*p_22_c0_ddr_saxi_arregion);
        (*_glb_hdl_sc_channel_map).push_back(p_22_c0_ddr_saxi_arregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_22_c0_ddr_saxi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_22->c0_ddr_saxi_arqos.bind(*p_22_c0_ddr_saxi_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_22_c0_ddr_saxi_arqos);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_22_c0_ddr_saxi_aruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_22->c0_ddr_saxi_aruser.bind(*p_22_c0_ddr_saxi_aruser);
        (*_glb_hdl_sc_channel_map).push_back(p_22_c0_ddr_saxi_aruser);
        xsim_sc_channel<0, bool > *p_22_c0_ddr_saxi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_22->c0_ddr_saxi_arvalid.bind(*p_22_c0_ddr_saxi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_22_c0_ddr_saxi_arvalid);
        xsim_sc_channel<0, bool > *p_22_c0_ddr_saxi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_22->c0_ddr_saxi_arready.bind(*p_22_c0_ddr_saxi_arready);
        p_22_c0_ddr_saxi_arready->set_sv_netview_offsetfromdp(11042344);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_22_c0_ddr_saxi_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_22->c0_ddr_saxi_rid.bind(*p_22_c0_ddr_saxi_rid);
        p_22_c0_ddr_saxi_rid->set_sv_netview_offsetfromdp(11042400);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_22_c0_ddr_saxi_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_22->c0_ddr_saxi_rdata.bind(*p_22_c0_ddr_saxi_rdata);
        p_22_c0_ddr_saxi_rdata->set_sv_netview_offsetfromdp(11042456);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_22_c0_ddr_saxi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_22->c0_ddr_saxi_rresp.bind(*p_22_c0_ddr_saxi_rresp);
        p_22_c0_ddr_saxi_rresp->set_sv_netview_offsetfromdp(11042512);
        xsim_sc_channel<0, bool > *p_22_c0_ddr_saxi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_22->c0_ddr_saxi_rlast.bind(*p_22_c0_ddr_saxi_rlast);
        p_22_c0_ddr_saxi_rlast->set_sv_netview_offsetfromdp(11042568);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_22_c0_ddr_saxi_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_22->c0_ddr_saxi_ruser.bind(*p_22_c0_ddr_saxi_ruser);
        p_22_c0_ddr_saxi_ruser->set_sv_netview_offsetfromdp(11042624);
        xsim_sc_channel<0, bool > *p_22_c0_ddr_saxi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_22->c0_ddr_saxi_rvalid.bind(*p_22_c0_ddr_saxi_rvalid);
        p_22_c0_ddr_saxi_rvalid->set_sv_netview_offsetfromdp(11042680);
        xsim_sc_channel<0, bool > *p_22_c0_ddr_saxi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_22->c0_ddr_saxi_rready.bind(*p_22_c0_ddr_saxi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_22_c0_ddr_saxi_rready);
        xsim_sc_channel<0, bool > *p_22_c0_ddr_saxi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_22->c0_ddr_saxi_aclk.bind(*p_22_c0_ddr_saxi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_22_c0_ddr_saxi_aclk);
        xsim_sc_channel<0, bool > *p_22_c0_ddr_saxi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_22->c0_ddr_saxi_aresetn.bind(*p_22_c0_ddr_saxi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_22_c0_ddr_saxi_aresetn);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_22_s_xdma_axi_awid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_22->s_xdma_axi_awid.bind(*p_22_s_xdma_axi_awid);
        (*_glb_hdl_sc_channel_map).push_back(p_22_s_xdma_axi_awid);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_22_s_xdma_axi_awaddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_22->s_xdma_axi_awaddr.bind(*p_22_s_xdma_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_22_s_xdma_axi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_22_s_xdma_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_22->s_xdma_axi_awlen.bind(*p_22_s_xdma_axi_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_22_s_xdma_axi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_22_s_xdma_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_22->s_xdma_axi_awsize.bind(*p_22_s_xdma_axi_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_22_s_xdma_axi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_22_s_xdma_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_22->s_xdma_axi_awburst.bind(*p_22_s_xdma_axi_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_22_s_xdma_axi_awburst);
        xsim_sc_channel<0, bool > *p_22_s_xdma_axi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_22->s_xdma_axi_awlock.bind(*p_22_s_xdma_axi_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_22_s_xdma_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_22_s_xdma_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_22->s_xdma_axi_awcache.bind(*p_22_s_xdma_axi_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_22_s_xdma_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_22_s_xdma_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_22->s_xdma_axi_awprot.bind(*p_22_s_xdma_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_22_s_xdma_axi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_22_s_xdma_axi_awregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_22->s_xdma_axi_awregion.bind(*p_22_s_xdma_axi_awregion);
        (*_glb_hdl_sc_channel_map).push_back(p_22_s_xdma_axi_awregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_22_s_xdma_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_22->s_xdma_axi_awqos.bind(*p_22_s_xdma_axi_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_22_s_xdma_axi_awqos);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_22_s_xdma_axi_awuser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_22->s_xdma_axi_awuser.bind(*p_22_s_xdma_axi_awuser);
        (*_glb_hdl_sc_channel_map).push_back(p_22_s_xdma_axi_awuser);
        xsim_sc_channel<0, bool > *p_22_s_xdma_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_22->s_xdma_axi_awvalid.bind(*p_22_s_xdma_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_22_s_xdma_axi_awvalid);
        xsim_sc_channel<0, bool > *p_22_s_xdma_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_22->s_xdma_axi_awready.bind(*p_22_s_xdma_axi_awready);
        p_22_s_xdma_axi_awready->set_sv_netview_offsetfromdp(11043576);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_22_s_xdma_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_22->s_xdma_axi_wdata.bind(*p_22_s_xdma_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_22_s_xdma_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_22_s_xdma_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_22->s_xdma_axi_wstrb.bind(*p_22_s_xdma_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_22_s_xdma_axi_wstrb);
        xsim_sc_channel<0, bool > *p_22_s_xdma_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_22->s_xdma_axi_wlast.bind(*p_22_s_xdma_axi_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_22_s_xdma_axi_wlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_22_s_xdma_axi_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_22->s_xdma_axi_wuser.bind(*p_22_s_xdma_axi_wuser);
        (*_glb_hdl_sc_channel_map).push_back(p_22_s_xdma_axi_wuser);
        xsim_sc_channel<0, bool > *p_22_s_xdma_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_22->s_xdma_axi_wvalid.bind(*p_22_s_xdma_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_22_s_xdma_axi_wvalid);
        xsim_sc_channel<0, bool > *p_22_s_xdma_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_22->s_xdma_axi_wready.bind(*p_22_s_xdma_axi_wready);
        p_22_s_xdma_axi_wready->set_sv_netview_offsetfromdp(11043912);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_22_s_xdma_axi_bid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_22->s_xdma_axi_bid.bind(*p_22_s_xdma_axi_bid);
        p_22_s_xdma_axi_bid->set_sv_netview_offsetfromdp(11043968);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_22_s_xdma_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_22->s_xdma_axi_bresp.bind(*p_22_s_xdma_axi_bresp);
        p_22_s_xdma_axi_bresp->set_sv_netview_offsetfromdp(11044024);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_22_s_xdma_axi_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_22->s_xdma_axi_buser.bind(*p_22_s_xdma_axi_buser);
        p_22_s_xdma_axi_buser->set_sv_netview_offsetfromdp(11044080);
        xsim_sc_channel<0, bool > *p_22_s_xdma_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_22->s_xdma_axi_bvalid.bind(*p_22_s_xdma_axi_bvalid);
        p_22_s_xdma_axi_bvalid->set_sv_netview_offsetfromdp(11044136);
        xsim_sc_channel<0, bool > *p_22_s_xdma_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_22->s_xdma_axi_bready.bind(*p_22_s_xdma_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_22_s_xdma_axi_bready);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_22_s_xdma_axi_arid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_22->s_xdma_axi_arid.bind(*p_22_s_xdma_axi_arid);
        (*_glb_hdl_sc_channel_map).push_back(p_22_s_xdma_axi_arid);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_22_s_xdma_axi_araddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_22->s_xdma_axi_araddr.bind(*p_22_s_xdma_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_22_s_xdma_axi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_22_s_xdma_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_22->s_xdma_axi_arlen.bind(*p_22_s_xdma_axi_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_22_s_xdma_axi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_22_s_xdma_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_22->s_xdma_axi_arsize.bind(*p_22_s_xdma_axi_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_22_s_xdma_axi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_22_s_xdma_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_22->s_xdma_axi_arburst.bind(*p_22_s_xdma_axi_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_22_s_xdma_axi_arburst);
        xsim_sc_channel<0, bool > *p_22_s_xdma_axi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_22->s_xdma_axi_arlock.bind(*p_22_s_xdma_axi_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_22_s_xdma_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_22_s_xdma_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_22->s_xdma_axi_arcache.bind(*p_22_s_xdma_axi_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_22_s_xdma_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_22_s_xdma_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_22->s_xdma_axi_arprot.bind(*p_22_s_xdma_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_22_s_xdma_axi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_22_s_xdma_axi_arregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_22->s_xdma_axi_arregion.bind(*p_22_s_xdma_axi_arregion);
        (*_glb_hdl_sc_channel_map).push_back(p_22_s_xdma_axi_arregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_22_s_xdma_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_22->s_xdma_axi_arqos.bind(*p_22_s_xdma_axi_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_22_s_xdma_axi_arqos);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_22_s_xdma_axi_aruser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_22->s_xdma_axi_aruser.bind(*p_22_s_xdma_axi_aruser);
        (*_glb_hdl_sc_channel_map).push_back(p_22_s_xdma_axi_aruser);
        xsim_sc_channel<0, bool > *p_22_s_xdma_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_22->s_xdma_axi_arvalid.bind(*p_22_s_xdma_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_22_s_xdma_axi_arvalid);
        xsim_sc_channel<0, bool > *p_22_s_xdma_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_22->s_xdma_axi_arready.bind(*p_22_s_xdma_axi_arready);
        p_22_s_xdma_axi_arready->set_sv_netview_offsetfromdp(11044920);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_22_s_xdma_axi_rid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_22->s_xdma_axi_rid.bind(*p_22_s_xdma_axi_rid);
        p_22_s_xdma_axi_rid->set_sv_netview_offsetfromdp(11044976);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_22_s_xdma_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_22->s_xdma_axi_rdata.bind(*p_22_s_xdma_axi_rdata);
        p_22_s_xdma_axi_rdata->set_sv_netview_offsetfromdp(11045032);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_22_s_xdma_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_22->s_xdma_axi_rresp.bind(*p_22_s_xdma_axi_rresp);
        p_22_s_xdma_axi_rresp->set_sv_netview_offsetfromdp(11045088);
        xsim_sc_channel<0, bool > *p_22_s_xdma_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_22->s_xdma_axi_rlast.bind(*p_22_s_xdma_axi_rlast);
        p_22_s_xdma_axi_rlast->set_sv_netview_offsetfromdp(11045144);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_22_s_xdma_axi_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_22->s_xdma_axi_ruser.bind(*p_22_s_xdma_axi_ruser);
        p_22_s_xdma_axi_ruser->set_sv_netview_offsetfromdp(11045200);
        xsim_sc_channel<0, bool > *p_22_s_xdma_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_22->s_xdma_axi_rvalid.bind(*p_22_s_xdma_axi_rvalid);
        p_22_s_xdma_axi_rvalid->set_sv_netview_offsetfromdp(11045256);
        xsim_sc_channel<0, bool > *p_22_s_xdma_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_22->s_xdma_axi_rready.bind(*p_22_s_xdma_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_22_s_xdma_axi_rready);
        xsim_sc_channel<0, bool > *p_22_s_xdma_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_22->s_xdma_axi_aclk.bind(*p_22_s_xdma_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_22_s_xdma_axi_aclk);
        xsim_sc_channel<0, bool > *p_22_s_xdma_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_22->s_xdma_axi_aresetn.bind(*p_22_s_xdma_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_22_s_xdma_axi_aresetn);
        sc_inst_23 = new emu_sim_xdma_0_0(".emu_wrapper.emu_i.static_region.sim_xdma_0");
        sc_inst_23->xsim_set_dbg_index(298);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_23_m_aximm_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_23->m_aximm_awid.bind(*p_23_m_aximm_awid);
        p_23_m_aximm_awid->set_sv_netview_offsetfromdp(11045528);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_23_m_aximm_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_23->m_aximm_awaddr.bind(*p_23_m_aximm_awaddr);
        p_23_m_aximm_awaddr->set_sv_netview_offsetfromdp(11045584);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_23_m_aximm_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_23->m_aximm_awlen.bind(*p_23_m_aximm_awlen);
        p_23_m_aximm_awlen->set_sv_netview_offsetfromdp(11045640);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_23_m_aximm_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_23->m_aximm_awsize.bind(*p_23_m_aximm_awsize);
        p_23_m_aximm_awsize->set_sv_netview_offsetfromdp(11045696);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_23_m_aximm_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_23->m_aximm_awburst.bind(*p_23_m_aximm_awburst);
        p_23_m_aximm_awburst->set_sv_netview_offsetfromdp(11045752);
        xsim_sc_channel<0, bool > *p_23_m_aximm_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_23->m_aximm_awlock.bind(*p_23_m_aximm_awlock);
        p_23_m_aximm_awlock->set_sv_netview_offsetfromdp(11045808);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_23_m_aximm_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_23->m_aximm_awcache.bind(*p_23_m_aximm_awcache);
        p_23_m_aximm_awcache->set_sv_netview_offsetfromdp(11045864);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_23_m_aximm_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_23->m_aximm_awprot.bind(*p_23_m_aximm_awprot);
        p_23_m_aximm_awprot->set_sv_netview_offsetfromdp(11045920);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_23_m_aximm_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_23->m_aximm_awqos.bind(*p_23_m_aximm_awqos);
        p_23_m_aximm_awqos->set_sv_netview_offsetfromdp(11045976);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_23_m_aximm_awuser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_23->m_aximm_awuser.bind(*p_23_m_aximm_awuser);
        p_23_m_aximm_awuser->set_sv_netview_offsetfromdp(11046032);
        xsim_sc_channel<0, bool > *p_23_m_aximm_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_23->m_aximm_awvalid.bind(*p_23_m_aximm_awvalid);
        p_23_m_aximm_awvalid->set_sv_netview_offsetfromdp(11046088);
        xsim_sc_channel<0, bool > *p_23_m_aximm_awready = new xsim_sc_channel<0, bool >();
        sc_inst_23->m_aximm_awready.bind(*p_23_m_aximm_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_23_m_aximm_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_23_m_aximm_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_23->m_aximm_wdata.bind(*p_23_m_aximm_wdata);
        p_23_m_aximm_wdata->set_sv_netview_offsetfromdp(11046200);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_23_m_aximm_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_23->m_aximm_wstrb.bind(*p_23_m_aximm_wstrb);
        p_23_m_aximm_wstrb->set_sv_netview_offsetfromdp(11046256);
        xsim_sc_channel<0, bool > *p_23_m_aximm_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_23->m_aximm_wlast.bind(*p_23_m_aximm_wlast);
        p_23_m_aximm_wlast->set_sv_netview_offsetfromdp(11046312);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_23_m_aximm_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_23->m_aximm_wuser.bind(*p_23_m_aximm_wuser);
        p_23_m_aximm_wuser->set_sv_netview_offsetfromdp(11046368);
        xsim_sc_channel<0, bool > *p_23_m_aximm_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_23->m_aximm_wvalid.bind(*p_23_m_aximm_wvalid);
        p_23_m_aximm_wvalid->set_sv_netview_offsetfromdp(11046424);
        xsim_sc_channel<0, bool > *p_23_m_aximm_wready = new xsim_sc_channel<0, bool >();
        sc_inst_23->m_aximm_wready.bind(*p_23_m_aximm_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_23_m_aximm_wready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_23_m_aximm_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_23->m_aximm_bid.bind(*p_23_m_aximm_bid);
        (*_glb_hdl_sc_channel_map).push_back(p_23_m_aximm_bid);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_23_m_aximm_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_23->m_aximm_bresp.bind(*p_23_m_aximm_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_23_m_aximm_bresp);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_23_m_aximm_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_23->m_aximm_buser.bind(*p_23_m_aximm_buser);
        (*_glb_hdl_sc_channel_map).push_back(p_23_m_aximm_buser);
        xsim_sc_channel<0, bool > *p_23_m_aximm_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_23->m_aximm_bvalid.bind(*p_23_m_aximm_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_23_m_aximm_bvalid);
        xsim_sc_channel<0, bool > *p_23_m_aximm_bready = new xsim_sc_channel<0, bool >();
        sc_inst_23->m_aximm_bready.bind(*p_23_m_aximm_bready);
        p_23_m_aximm_bready->set_sv_netview_offsetfromdp(11046760);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_23_m_aximm_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_23->m_aximm_arid.bind(*p_23_m_aximm_arid);
        p_23_m_aximm_arid->set_sv_netview_offsetfromdp(11046816);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_23_m_aximm_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_23->m_aximm_araddr.bind(*p_23_m_aximm_araddr);
        p_23_m_aximm_araddr->set_sv_netview_offsetfromdp(11046872);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_23_m_aximm_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_23->m_aximm_arlen.bind(*p_23_m_aximm_arlen);
        p_23_m_aximm_arlen->set_sv_netview_offsetfromdp(11046928);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_23_m_aximm_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_23->m_aximm_arsize.bind(*p_23_m_aximm_arsize);
        p_23_m_aximm_arsize->set_sv_netview_offsetfromdp(11046984);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_23_m_aximm_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_23->m_aximm_arburst.bind(*p_23_m_aximm_arburst);
        p_23_m_aximm_arburst->set_sv_netview_offsetfromdp(11047040);
        xsim_sc_channel<0, bool > *p_23_m_aximm_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_23->m_aximm_arlock.bind(*p_23_m_aximm_arlock);
        p_23_m_aximm_arlock->set_sv_netview_offsetfromdp(11047096);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_23_m_aximm_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_23->m_aximm_arcache.bind(*p_23_m_aximm_arcache);
        p_23_m_aximm_arcache->set_sv_netview_offsetfromdp(11047152);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_23_m_aximm_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_23->m_aximm_arprot.bind(*p_23_m_aximm_arprot);
        p_23_m_aximm_arprot->set_sv_netview_offsetfromdp(11047208);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_23_m_aximm_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_23->m_aximm_arqos.bind(*p_23_m_aximm_arqos);
        p_23_m_aximm_arqos->set_sv_netview_offsetfromdp(11047264);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_23_m_aximm_aruser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_23->m_aximm_aruser.bind(*p_23_m_aximm_aruser);
        p_23_m_aximm_aruser->set_sv_netview_offsetfromdp(11047320);
        xsim_sc_channel<0, bool > *p_23_m_aximm_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_23->m_aximm_arvalid.bind(*p_23_m_aximm_arvalid);
        p_23_m_aximm_arvalid->set_sv_netview_offsetfromdp(11047376);
        xsim_sc_channel<0, bool > *p_23_m_aximm_arready = new xsim_sc_channel<0, bool >();
        sc_inst_23->m_aximm_arready.bind(*p_23_m_aximm_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_23_m_aximm_arready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_23_m_aximm_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_23->m_aximm_rid.bind(*p_23_m_aximm_rid);
        (*_glb_hdl_sc_channel_map).push_back(p_23_m_aximm_rid);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_23_m_aximm_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_23->m_aximm_rdata.bind(*p_23_m_aximm_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_23_m_aximm_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_23_m_aximm_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_23->m_aximm_rresp.bind(*p_23_m_aximm_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_23_m_aximm_rresp);
        xsim_sc_channel<0, bool > *p_23_m_aximm_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_23->m_aximm_rlast.bind(*p_23_m_aximm_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_23_m_aximm_rlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_23_m_aximm_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_23->m_aximm_ruser.bind(*p_23_m_aximm_ruser);
        (*_glb_hdl_sc_channel_map).push_back(p_23_m_aximm_ruser);
        xsim_sc_channel<0, bool > *p_23_m_aximm_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_23->m_aximm_rvalid.bind(*p_23_m_aximm_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_23_m_aximm_rvalid);
        xsim_sc_channel<0, bool > *p_23_m_aximm_rready = new xsim_sc_channel<0, bool >();
        sc_inst_23->m_aximm_rready.bind(*p_23_m_aximm_rready);
        p_23_m_aximm_rready->set_sv_netview_offsetfromdp(11047824);
        xsim_sc_channel<0, bool > *p_23_m_aximm_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_23->m_aximm_aclk.bind(*p_23_m_aximm_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_23_m_aximm_aclk);
        xsim_sc_channel<0, bool > *p_23_m_aximm_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_23->m_aximm_aresetn.bind(*p_23_m_aximm_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_23_m_aximm_aresetn);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_23_m_axictrl_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_23->m_axictrl_awaddr.bind(*p_23_m_axictrl_awaddr);
        p_23_m_axictrl_awaddr->set_sv_netview_offsetfromdp(11047992);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_23_m_axictrl_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_23->m_axictrl_awprot.bind(*p_23_m_axictrl_awprot);
        p_23_m_axictrl_awprot->set_sv_netview_offsetfromdp(11048048);
        xsim_sc_channel<0, bool > *p_23_m_axictrl_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_23->m_axictrl_awvalid.bind(*p_23_m_axictrl_awvalid);
        p_23_m_axictrl_awvalid->set_sv_netview_offsetfromdp(11048104);
        xsim_sc_channel<0, bool > *p_23_m_axictrl_awready = new xsim_sc_channel<0, bool >();
        sc_inst_23->m_axictrl_awready.bind(*p_23_m_axictrl_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_23_m_axictrl_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_23_m_axictrl_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_23->m_axictrl_wdata.bind(*p_23_m_axictrl_wdata);
        p_23_m_axictrl_wdata->set_sv_netview_offsetfromdp(11048216);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_23_m_axictrl_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_23->m_axictrl_wstrb.bind(*p_23_m_axictrl_wstrb);
        p_23_m_axictrl_wstrb->set_sv_netview_offsetfromdp(11048272);
        xsim_sc_channel<0, bool > *p_23_m_axictrl_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_23->m_axictrl_wvalid.bind(*p_23_m_axictrl_wvalid);
        p_23_m_axictrl_wvalid->set_sv_netview_offsetfromdp(11048328);
        xsim_sc_channel<0, bool > *p_23_m_axictrl_wready = new xsim_sc_channel<0, bool >();
        sc_inst_23->m_axictrl_wready.bind(*p_23_m_axictrl_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_23_m_axictrl_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_23_m_axictrl_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_23->m_axictrl_bresp.bind(*p_23_m_axictrl_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_23_m_axictrl_bresp);
        xsim_sc_channel<0, bool > *p_23_m_axictrl_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_23->m_axictrl_bvalid.bind(*p_23_m_axictrl_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_23_m_axictrl_bvalid);
        xsim_sc_channel<0, bool > *p_23_m_axictrl_bready = new xsim_sc_channel<0, bool >();
        sc_inst_23->m_axictrl_bready.bind(*p_23_m_axictrl_bready);
        p_23_m_axictrl_bready->set_sv_netview_offsetfromdp(11048552);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_23_m_axictrl_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_23->m_axictrl_araddr.bind(*p_23_m_axictrl_araddr);
        p_23_m_axictrl_araddr->set_sv_netview_offsetfromdp(11048608);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_23_m_axictrl_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_23->m_axictrl_arprot.bind(*p_23_m_axictrl_arprot);
        p_23_m_axictrl_arprot->set_sv_netview_offsetfromdp(11048664);
        xsim_sc_channel<0, bool > *p_23_m_axictrl_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_23->m_axictrl_arvalid.bind(*p_23_m_axictrl_arvalid);
        p_23_m_axictrl_arvalid->set_sv_netview_offsetfromdp(11048720);
        xsim_sc_channel<0, bool > *p_23_m_axictrl_arready = new xsim_sc_channel<0, bool >();
        sc_inst_23->m_axictrl_arready.bind(*p_23_m_axictrl_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_23_m_axictrl_arready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_23_m_axictrl_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_23->m_axictrl_rdata.bind(*p_23_m_axictrl_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_23_m_axictrl_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_23_m_axictrl_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_23->m_axictrl_rresp.bind(*p_23_m_axictrl_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_23_m_axictrl_rresp);
        xsim_sc_channel<0, bool > *p_23_m_axictrl_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_23->m_axictrl_rvalid.bind(*p_23_m_axictrl_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_23_m_axictrl_rvalid);
        xsim_sc_channel<0, bool > *p_23_m_axictrl_rready = new xsim_sc_channel<0, bool >();
        sc_inst_23->m_axictrl_rready.bind(*p_23_m_axictrl_rready);
        p_23_m_axictrl_rready->set_sv_netview_offsetfromdp(11049000);
        xsim_sc_channel<0, bool > *p_23_m_axictrl_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_23->m_axictrl_aclk.bind(*p_23_m_axictrl_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_23_m_axictrl_aclk);
        xsim_sc_channel<0, bool > *p_23_m_axictrl_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_23->m_axictrl_aresetn.bind(*p_23_m_axictrl_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_23_m_axictrl_aresetn);
    }


extern "C"
    void implicit_HDL_SCcleanup()
    {
        delete sc_inst_1;
        delete sc_inst_2;
        delete sc_inst_3;
        delete sc_inst_4;
        delete sc_inst_5;
        delete sc_inst_6;
        delete sc_inst_7;
        delete sc_inst_8;
        delete sc_inst_9;
        delete sc_inst_10;
        delete sc_inst_11;
        delete sc_inst_12;
        delete sc_inst_13;
        delete sc_inst_14;
        delete sc_inst_15;
        delete sc_inst_16;
        delete sc_inst_17;
        delete sc_inst_18;
        delete sc_inst_19;
        delete sc_inst_20;
        delete sc_inst_21;
        delete sc_inst_22;
        delete sc_inst_23;
    }
